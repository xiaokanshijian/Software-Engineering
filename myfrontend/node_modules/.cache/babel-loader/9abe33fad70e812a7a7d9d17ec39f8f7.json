{"remainingRequest":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\src\\views\\History.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\src\\views\\History.vue","mtime":1694757429961},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\babel.config.js","mtime":1694499945810},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704126242450},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\babel-loader\\lib\\index.js","mtime":1704126243607},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704126242450},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\vue-loader\\lib\\index.js","mtime":1704126244757}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAkIGZyb20gJ2pxdWVyeSc7CmZ1bmN0aW9uIFRpbWVsaW5lKGN2cykgewogIGxldCBzZWxmID0gdGhpcywKICAgIHBhdXNlZCA9IHRydWUsCiAgICByYWZpZCA9IDAsCiAgICBtb3VzZSA9IHsKICAgICAgeDogMCwKICAgICAgeTogMAogICAgfSwKICAgIGNhbnZhcyA9IGN2cywKICAgIGN0eCA9IG51bGw7CiAgc2VsZi5saW5lcyA9IFtdOwogIHNlbGYuaXNPSyA9IGZhbHNlOwogIHNlbGYub3B0aW9ucyA9IHsKICAgIHNwZWVkOiAwLjEsCiAgICBkZW5zaXR5OiA4LAogICAgcmFkaXVzOiA2MDAKICB9OwogIHNlbGYudGFyZ2V0cyA9IFtbMjksIDMyLCA0OCwgNjgsIDk4XSwgWzI5LCAzMywgMzgsIDYwLCA5MF1dOwogIHNlbGYuZG90Q29sb3JzID0gW1snI2ZmN2E3YScsICdyZ2JhKDI1NSwgMTIyLCAxMjIsIDAuMyknLCAncmdiYSgyNTUsIDEyMiwgMTIyLCAuNSknXSwgWycjN2RkMzE3JywgJ3JnYmEoMTEzLCAyMjIsIDE1LCAwLjMpJywgJ3JnYmEoOTEsIDE2NCwgMjIsIDAuNSknXV07CiAgc2VsZi5pc1BhdXNlZCA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBwYXVzZWQ7CiAgfTsKICBmdW5jdGlvbiBJbml0RG90cygpIHsKICAgIGNvbnN0IHRsID0gJCgnLnRpbWVsaW5lJyk7CiAgICBjb25zdCB0b3AgPSB0bC5maW5kKCdoMicpLm91dGVySGVpZ2h0KCk7CiAgICBzZWxmLmxpbmVzWzBdLmRvdHMgPSBbXTsKICAgIGxldCB5ID0gdG9wOwogICAgdGwuZmluZCgnYXJ0aWNsZTpmaXJzdCBmaWd1cmUnKS5lYWNoKGZ1bmN0aW9uICgpIHsKICAgICAgLy8gZGVidWdnZXIKICAgICAgc2VsZi5saW5lc1swXS5kb3RzLnB1c2goWyQodGhpcykub3V0ZXJXaWR0aCgpICsgMjAsIHkgKyAyMF0pOyAvL+eUn+aIkOe6vwoKICAgICAgeSArPSAkKHRoaXMpLm91dGVySGVpZ2h0KCk7CiAgICB9KTsKCiAgICAvLyBkZWJ1Z2dlcgogICAgc2VsZi5saW5lc1sxXS5kb3RzID0gW107CiAgICBsZXQgeTIgPSB0b3A7CiAgICB0bC5maW5kKCdhcnRpY2xlOmxhc3QgZmlndXJlJykuZWFjaChmdW5jdGlvbiAoKSB7CiAgICAgIHNlbGYubGluZXNbMV0uZG90cy5wdXNoKFtjYW52YXMud2lkdGggLSAkKHRoaXMpLm91dGVyV2lkdGgoKSAtIDIwLCB5MiArIDIwXSk7CiAgICAgIHkyICs9ICQodGhpcykub3V0ZXJIZWlnaHQoKTsKICAgIH0pOwogIH0KICBmdW5jdGlvbiBPblJlc2l6ZSgpIHsKICAgIGNhbnZhcy53aWR0aCA9IGNhbnZhcy5vZmZzZXRXaWR0aDsKICAgIGNhbnZhcy5oZWlnaHQgPSBjYW52YXMub2Zmc2V0SGVpZ2h0OwogICAgY29uc3Qgd2FzUGF1c2VkID0gcGF1c2VkOwogICAgc2VsZi50b2dnbGUoZmFsc2UpOwogICAgLy8gSW5pdCBsaW5lcwogICAgc2VsZi5saW5lc1swXS5yZXNldChjYW52YXMub2Zmc2V0V2lkdGggLyAyIC0gMTUpOwogICAgc2VsZi5saW5lc1sxXS5yZXNldChjYW52YXMub2Zmc2V0V2lkdGggLyAyICsgMTUpOwogICAgSW5pdERvdHMoKTsKICAgIHNlbGYudG9nZ2xlKCF3YXNQYXVzZWQpOwogIH0KICBmdW5jdGlvbiBpbml0KCkgewogICAgbGV0IHJlc3VsdCA9IGZhbHNlOwogICAgdHJ5IHsKICAgICAgcmVzdWx0ID0gISEoY2FudmFzLmdldENvbnRleHQgJiYgKGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpKSk7CiAgICAgIHNlbGYubGluZXNbMF0gPSBuZXcgTGluZSgwLCBjYW52YXMub2Zmc2V0SGVpZ2h0IC0gMTAwLCAnIzQ3ODlhMycsIHNlbGYub3B0aW9ucywgbW91c2UpOwogICAgICBzZWxmLmxpbmVzWzFdID0gbmV3IExpbmUoMCwgY2FudmFzLm9mZnNldEhlaWdodCAtIDEwMCwgJyNhMGQ1OWMnLCBzZWxmLm9wdGlvbnMsIG1vdXNlKTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogICAgJChjYW52YXMpLm1vdXNlbW92ZShmdW5jdGlvbiAoZSkgewogICAgICBpZiAoZS5vZmZzZXRYKSB7CiAgICAgICAgbW91c2UueCA9IGUub2Zmc2V0WDsKICAgICAgICBtb3VzZS55ID0gZS5vZmZzZXRZOwogICAgICB9IGVsc2UgaWYgKGUubGF5ZXJYKSB7CiAgICAgICAgbW91c2UueCA9IGUubGF5ZXJYOwogICAgICAgIG1vdXNlLnkgPSBlLmxheWVyWTsKICAgICAgfSBlbHNlIHsKICAgICAgICBtb3VzZS54ID0gZS5wYWdlWCAtICQoY2FudmFzKS5vZmZzZXQoKS5sZWZ0OwogICAgICAgIG1vdXNlLnkgPSBlLnBhZ2VZIC0gJChjYW52YXMpLm9mZnNldCgpLnRvcDsKICAgICAgfQogICAgfSk7CiAgICAkKHdpbmRvdykucmVzaXplKE9uUmVzaXplKTsKICAgIE9uUmVzaXplKCk7CiAgICByZXR1cm4gcmVzdWx0OwogIH0KICBmdW5jdGlvbiBMaW5lKHksIGhlaWdodCwgY29sb3IsIG9wdGlvbnMsIG1vdXNlKSB7CiAgICBsZXQgc2VsZiA9IHRoaXM7CiAgICBzZWxmLmNvbG9yID0gY29sb3I7CiAgICBzZWxmLm9wdGlvbnMgPSBvcHRpb25zOwogICAgc2VsZi5tb3VzZSA9IG1vdXNlOwogICAgc2VsZi5oZWlnaHQgPSBoZWlnaHQ7CiAgICBzZWxmLmRvdHMgPSBbXTsKICAgIHNlbGYueSA9IHk7CiAgICBzZWxmLnBvaW50cyA9IFtdOwogICAgc2VsZi5yZXNldCA9IGZ1bmN0aW9uICh4LCBmKSB7CiAgICAgIHNlbGYucG9pbnRzID0gW107CiAgICAgIGZvciAobGV0IHkgPSBzZWxmLnk7IHkgPCBzZWxmLmhlaWdodDsgeSArPSBzZWxmLm9wdGlvbnMuZGVuc2l0eSkgc2VsZi5wb2ludHMucHVzaChuZXcgUG9pbnQoeCwgeSwgc2VsZi5jb2xvcikpOwogICAgfTsKICAgIHNlbGYudXBkYXRlID0gZnVuY3Rpb24gKCkgewogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlbGYucG9pbnRzLmxlbmd0aDsgaSsrKSBzZWxmLnBvaW50c1tpXS51cGRhdGUoc2VsZi5tb3VzZSwgc2VsZi5vcHRpb25zKTsKICAgIH07CiAgICBmdW5jdGlvbiBQb2ludCh4LCB5KSB7CiAgICAgIHRoaXMueSA9IHk7CiAgICAgIHRoaXMueCA9IHg7CiAgICAgIHRoaXMuYmFzZSA9IHsKICAgICAgICB4OiB4LAogICAgICAgIHk6IHkKICAgICAgfTsKICAgICAgdGhpcy51cGRhdGUgPSBmdW5jdGlvbiAobW91c2UsIG9wdGlvbnMpIHsKICAgICAgICBsZXQgZHggPSB0aGlzLnggLSBtb3VzZS54LAogICAgICAgICAgZHkgPSB0aGlzLnkgLSBtb3VzZS55LAogICAgICAgICAgYWxwaGEgPSBNYXRoLmF0YW4yKGR4LCBkeSksCiAgICAgICAgICBkID0gb3B0aW9ucy5yYWRpdXMgLyBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpOwogICAgICAgIGFscGhhID0gYWxwaGEgPiAwID8gYWxwaGEgOiAyICogTWF0aC5QSSArIGFscGhhOwogICAgICAgIHRoaXMueSArPSBNYXRoLmNvcyhhbHBoYSkgKiBkICsgKHRoaXMuYmFzZS55IC0gdGhpcy55KSAqIG9wdGlvbnMuc3BlZWQ7CiAgICAgICAgdGhpcy54ICs9IE1hdGguc2luKGFscGhhKSAqIGQgKyAodGhpcy5iYXNlLnggLSB0aGlzLngpICogb3B0aW9ucy5zcGVlZDsKICAgICAgfTsKICAgIH0KICB9CgogIC8vIOiwg+eUqGNhdmFz5YaF572u55qEYXBpCiAgZnVuY3Rpb24gZHJhd0NpcmNsZShwLCByLCBjb2xvcikgewogICAgY3R4LmZpbGxTdHlsZSA9IGNvbG9yOwogICAgY3R4LmJlZ2luUGF0aCgpOwogICAgY3R4LmFyYyhwLngsIHAueSwgciwgMCwgMiAqIE1hdGguUEksIHRydWUpOwogICAgY3R4LmNsb3NlUGF0aCgpOwogICAgY3R4LmZpbGwoKTsKICB9CiAgZnVuY3Rpb24gZHJhd0xpbmUocDEsIHAyKSB7CiAgICBjdHguYmVnaW5QYXRoKCk7CiAgICBjdHgubW92ZVRvKHAxLngsIHAxLnkpOwogICAgY3R4LmxpbmVUbyhwMi54LCBwMi55KTsKICAgIGN0eC5zdHJva2UoKTsKICAgIGN0eC5jbG9zZVBhdGgoKTsKICB9CiAgZnVuY3Rpb24gcmVkcmF3KCkgewogICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpOwogICAgZm9yIChsZXQgaSA9IDA7IGkgPCAyOyBpKyspIHsKICAgICAgY29uc3QgcG9pbnRzID0gc2VsZi5saW5lc1tpXS5wb2ludHM7CiAgICAgIGN0eC5iZWdpblBhdGgoKTsKICAgICAgY3R4LmxpbmVXaWR0aCA9IDI7CiAgICAgIGN0eC5zdHJva2VTdHlsZSA9IHNlbGYubGluZXNbaV0uY29sb3I7CiAgICAgIGN0eC5tb3ZlVG8ocG9pbnRzWzE1XS54LCBwb2ludHNbMTVdLnkpOwogICAgICBmb3IgKGxldCBqID0gMTU7IGogPCBwb2ludHMubGVuZ3RoIC0gMjsgaisrKSB7CiAgICAgICAgY29uc3QgcG9pbnQgPSBwb2ludHNbal07CiAgICAgICAgY29uc3QgeGMgPSAocG9pbnRzW2ogKyAxXS54ICsgcG9pbnQueCkgLyAyOwogICAgICAgIGNvbnN0IHljID0gKHBvaW50c1tqICsgMV0ueSArIHBvaW50LnkpIC8gMjsKICAgICAgICBjdHgucXVhZHJhdGljQ3VydmVUbyhwb2ludC54LCBwb2ludC55LCB4YywgeWMpOwogICAgICB9CiAgICAgIGN0eC5zdHJva2UoKTsKICAgICAgY3R4LmNsb3NlUGF0aCgpOwoKICAgICAgLy8gRG90cwogICAgICBjdHgubGluZVdpZHRoID0gMS4yOwogICAgICBjdHguc3Ryb2tlU3R5bGUgPSBzZWxmLmRvdENvbG9yc1tpXVsyXTsKICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBzZWxmLmxpbmVzW2ldLmRvdHMubGVuZ3RoOyBqKyspIHsKICAgICAgICBjb25zdCBkb3QgPSBzZWxmLmxpbmVzW2ldLmRvdHNbal0sCiAgICAgICAgICBpZCA9IHNlbGYudGFyZ2V0c1tpXVtqXTsKICAgICAgICAvLyDml7bpl7Tnur/kuIrnmoTngrkKICAgICAgICBjb25zdCBkb3QyID0gWyhzZWxmLmxpbmVzW2ldLnBvaW50c1tpZF0ueCArIHNlbGYubGluZXNbaV0ucG9pbnRzW2lkICsgMV0ueCkgLyAyLCAoc2VsZi5saW5lc1tpXS5wb2ludHNbaWRdLnkgKyBzZWxmLmxpbmVzW2ldLnBvaW50c1tpZCArIDFdLnkpIC8gMl07CiAgICAgICAgY29uc3QgcDEgPSB7CiAgICAgICAgICB4OiBkb3RbMF0sCiAgICAgICAgICB5OiBkb3RbMV0gKyA3MAogICAgICAgIH07CiAgICAgICAgY29uc3QgcDIgPSB7CiAgICAgICAgICB4OiBkb3QyWzBdLAogICAgICAgICAgeTogZG90MlsxXQogICAgICAgIH07CiAgICAgICAgZHJhd0xpbmUocDEsIHAyKTsKICAgICAgICBjb25zb2xlLmxvZyhwMSk7CiAgICAgICAgZHJhd0NpcmNsZShwMSwgMywgc2VsZi5kb3RDb2xvcnNbaV1bMF0pOwogICAgICAgIGRyYXdDaXJjbGUocDIsIDExLCBzZWxmLmRvdENvbG9yc1tpXVsxXSk7CiAgICAgICAgZHJhd0NpcmNsZShwMiwgNS41LCBzZWxmLmRvdENvbG9yc1tpXVswXSk7CiAgICAgIH0KICAgIH0KICB9CiAgZnVuY3Rpb24gYW5pbWF0ZSgpIHsKICAgIHJhZmlkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpOwogICAgc2VsZi5saW5lc1swXS51cGRhdGUoKTsKICAgIHNlbGYubGluZXNbMV0udXBkYXRlKCk7CiAgICByZWRyYXcoKTsKICB9CiAgc2VsZi50b2dnbGUgPSBmdW5jdGlvbiAocnVuKSB7CiAgICBpZiAoIXNlbGYuaXNPSykgcmV0dXJuIGZhbHNlOwogICAgaWYgKHJ1biA9PT0gdW5kZWZpbmVkKSBzZWxmLnRvZ2dsZSghcGF1c2VkKTtlbHNlIGlmICghIXJ1biAmJiBwYXVzZWQpIHsKICAgICAgcGF1c2VkID0gZmFsc2U7CiAgICAgIGFuaW1hdGUoKTsKICAgIH0gZWxzZSBpZiAoISEhcnVuKSB7CiAgICAgIHBhdXNlZCA9IHRydWU7CiAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHJhZmlkKTsKICAgIH0KICAgIHJldHVybiB0cnVlOwogIH07CiAgc2VsZi5pc09LID0gaW5pdCgpOwp9CmV4cG9ydCBkZWZhdWx0IHsKICBtb3VudGVkKCkgewogICAgbmV3IFRpbWVsaW5lKCQoJyNjdnMzJykuZ2V0KDApKS50b2dnbGUodHJ1ZSk7CiAgfQp9Ow=="},{"version":3,"names":["$","Timeline","cvs","self","paused","rafid","mouse","x","y","canvas","ctx","lines","isOK","options","speed","density","radius","targets","dotColors","isPaused","InitDots","tl","top","find","outerHeight","dots","each","push","outerWidth","y2","width","OnResize","offsetWidth","height","offsetHeight","wasPaused","toggle","reset","init","result","getContext","Line","e","mousemove","offsetX","offsetY","layerX","layerY","pageX","offset","left","pageY","window","resize","color","points","f","Point","update","i","length","base","dx","dy","alpha","Math","atan2","d","sqrt","PI","cos","sin","drawCircle","p","r","fillStyle","beginPath","arc","closePath","fill","drawLine","p1","p2","moveTo","lineTo","stroke","redraw","clearRect","lineWidth","strokeStyle","j","point","xc","yc","quadraticCurveTo","dot","id","dot2","console","log","animate","requestAnimationFrame","run","undefined","cancelAnimationFrame","mounted","get"],"sources":["src/views/History.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n      <section id=\"timeline\">\r\n        <div class=\"timeline\">\r\n            <canvas id=\"cvs3\"></canvas>\r\n\r\n            <article>\r\n                <h2>传输电力</h2>\r\n                <figure>\r\n                    <figcaption>早期电力实验</figcaption>\r\n                    <p>电力的研究和实验始于18世纪末和19世纪初。科学家如本杰明·富兰克林和亚历山大·伯特建立了电学的基本原理，而迈克尔·法拉第和亨利·法拉第则对电磁感应和电动机等关键概念进行了研究。</p>\r\n                </figure>\r\n                <figure>\r\n                    <figcaption>直流电力系统</figcaption>\r\n                    <p>早期电力系统使用直流电（Direct Current，DC）传输电力。托马斯·爱迪生在19世纪末建立了一系列直流发电厂和电力分配系统，以供应电灯和其他设备。这些系统主要用于城市内的有限区域。</p>\r\n                </figure>\r\n                <figure>\r\n                    <figcaption>交流电力系统的发展</figcaption>\r\n                    <p>\r\n                        交流电（Alternating Current，AC）被认为更适合长距离电力传输，因为它可以通过变压器来提高电压，减小能量损耗。尼古拉·特斯拉和乔治·威斯汀豪斯等科学家和工程师在19世纪末和20世纪初发展了交流电力系统，并建立了全球范围的电力网络。\r\n                    </p>\r\n                </figure>\r\n                <figure>\r\n                    <figcaption>电网的扩张</figcaption>\r\n                    <p>20世纪初，电力网格系统开始在城市间和国家间建立连接，以便更有效地分配电力。这个过程促使了大规模电力生产和分布设施的建设，包括发电厂、变电站和输电线路。</p>\r\n                </figure>\r\n            </article>\r\n\r\n            <article>\r\n                <h2>分配电力</h2>\r\n                <figure>\r\n                    <figcaption>输电线路</figcaption>\r\n                    <p style=\"color:#c6e0aa\">电力分配的第一步是将电力从发电厂输送到不同地区的变电站。这通常涉及使用高压输电线路，以减小能量损耗。这些输电线路通常是高塔或电缆，可以跨越长距离，将电力输送到城市或地区的核心。</p>\r\n                </figure>\r\n                <figure>\r\n                    <figcaption>变电站</figcaption>\r\n                    <p style=\"color:#c6e0aa\">\r\n                        在电力输送到变电站后，电压可能需要升高或降低，以适应最终用户的需求。变电站通常包括变压器，用于改变电压水平，并确保电力的稳定性和可用性。\r\n                    </p>\r\n                </figure>\r\n                <figure>\r\n                    <figcaption>配电系统</figcaption>\r\n                    <p style=\"color:#c6e0aa\">从变电站出发的电力被送入城市或社区的配电系统中。这些系统包括地下电缆和电线杆上的电线，将电力分发到各个街区和建筑物。</p>\r\n                </figure>\r\n                <figure>\r\n                    <figcaption>输电网格</figcaption>\r\n                    <p style=\"color:#c6e0aa\">电力分配还涉及建立一个复杂的输电网格，以确保电力可靠地传递到各个用户。这个网格通常是一个分层次的结构，包括主要输电线路、次要输电线路和分支电线路，以适应不同电力需求的层级。</p>\r\n                </figure>\r\n            </article>\r\n\r\n            <br style=\"clear:both\">\r\n        </div>\r\n\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport $ from 'jquery'\r\n    function Timeline(cvs) {\r\n\r\n        let self = this,\r\n            paused = true,\r\n            rafid = 0,\r\n            mouse = {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            canvas = cvs,\r\n            ctx = null;\r\n\r\n        self.lines = [];\r\n        self.isOK = false;\r\n        self.options = {\r\n            speed: 0.1,\r\n            density: 8,\r\n            radius: 600,\r\n        };\r\n        self.targets = [\r\n            [29, 32, 48, 68, 98],\r\n            [29, 33, 38, 60, 90]\r\n        ];\r\n        self.dotColors = [\r\n            ['#ff7a7a', 'rgba(255, 122, 122, 0.3)', 'rgba(255, 122, 122, .5)'],\r\n            ['#7dd317', 'rgba(113, 222, 15, 0.3)', 'rgba(91, 164, 22, 0.5)'],\r\n        ];\r\n\r\n        self.isPaused = function() {\r\n            return paused;\r\n        };\r\n\r\n        function InitDots() {\r\n            const tl = $('.timeline');\r\n            const top = tl.find('h2').outerHeight();\r\n\r\n            self.lines[0].dots = [];\r\n            let y = top;\r\n            tl.find('article:first figure').each(function() {\r\n                // debugger\r\n                self.lines[0].dots.push([$(this).outerWidth() + 20, y + 20]); //生成线\r\n\r\n                y += $(this).outerHeight();\r\n            });\r\n\r\n            // debugger\r\n            self.lines[1].dots = [];\r\n            let y2 = top;\r\n            tl.find('article:last figure').each(function() {\r\n\r\n                self.lines[1].dots.push([canvas.width - $(this).outerWidth() - 20, y2 + 20]);\r\n\r\n                y2 += $(this).outerHeight();\r\n            });\r\n        }\r\n\r\n        function OnResize() {\r\n            canvas.width = canvas.offsetWidth;\r\n            canvas.height = canvas.offsetHeight;\r\n\r\n            const wasPaused = paused;\r\n            self.toggle(false);\r\n            // Init lines\r\n            self.lines[0].reset(canvas.offsetWidth / 2 - 15);\r\n            self.lines[1].reset(canvas.offsetWidth / 2 + 15);\r\n\r\n            InitDots();\r\n\r\n            self.toggle(!wasPaused);\r\n        }\r\n\r\n        function init() {\r\n            let result = false;\r\n            try {\r\n                result = !!(canvas.getContext && (ctx = canvas.getContext('2d')));\r\n\r\n                self.lines[0] = new Line(0, canvas.offsetHeight - 100, '#4789a3', self.options, mouse);\r\n                self.lines[1] = new Line(0, canvas.offsetHeight - 100, '#a0d59c', self.options, mouse);\r\n\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n\r\n            $(canvas).mousemove(function(e) {\r\n\r\n                if (e.offsetX) {\r\n                    mouse.x = e.offsetX;\r\n                    mouse.y = e.offsetY;\r\n                } else if (e.layerX) {\r\n                    mouse.x = e.layerX;\r\n                    mouse.y = e.layerY;\r\n                } else {\r\n                    mouse.x = e.pageX - $(canvas).offset().left;\r\n                    mouse.y = e.pageY - $(canvas).offset().top;\r\n                }\r\n            });\r\n\r\n            $(window).resize(OnResize);\r\n\r\n            OnResize();\r\n\r\n            return result;\r\n        }\r\n\r\n        function Line(y, height, color, options, mouse) {\r\n            let self = this;\r\n            self.color = color;\r\n            self.options = options;\r\n            self.mouse = mouse;\r\n            self.height = height;\r\n            self.dots = [];\r\n            self.y = y;\r\n\r\n            self.points = [];\r\n\r\n            self.reset = function(x, f) {\r\n                self.points = [];\r\n                for (let y = self.y; y < self.height; y += self.options.density)\r\n                    self.points.push(new Point(x, y, self.color));\r\n            }\r\n\r\n            self.update = function() {\r\n                for (let i = 0; i < self.points.length; i++)\r\n                    self.points[i].update(self.mouse, self.options);\r\n            }\r\n\r\n            function Point(x, y) {\r\n                this.y = y;\r\n                this.x = x;\r\n                this.base = {\r\n                    x: x,\r\n                    y: y\r\n                };\r\n\r\n                this.update = function(mouse, options) {\r\n                    let dx = this.x - mouse.x,\r\n                        dy = this.y - mouse.y,\r\n                        alpha = Math.atan2(dx, dy),\r\n                        d = options.radius / Math.sqrt(dx * dx + dy * dy);\r\n\r\n                    alpha = (alpha > 0 ? alpha : 2 * Math.PI + alpha);\r\n                    this.y += Math.cos(alpha) * d + (this.base.y - this.y) * options.speed;\r\n                    this.x += Math.sin(alpha) * d + (this.base.x - this.x) * options.speed;\r\n                }\r\n            }\r\n        }\r\n\r\n        // 调用cavas内置的api\r\n        function drawCircle(p, r, color) {\r\n            ctx.fillStyle = color;\r\n            ctx.beginPath();\r\n            ctx.arc(p.x, p.y, r, 0, 2 * Math.PI, true);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        function drawLine(p1, p2) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(p1.x, p1.y);\r\n            ctx.lineTo(p2.x, p2.y);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n        }\r\n\r\n        function redraw() {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            for (let i = 0; i < 2; i++) {\r\n                const points = self.lines[i].points;\r\n\r\n                ctx.beginPath();\r\n                ctx.lineWidth = 2;\r\n                ctx.strokeStyle = self.lines[i].color;\r\n                ctx.moveTo(points[15].x, points[15].y);\r\n\r\n                for (let j = 15; j < points.length - 2; j++) {\r\n                    const point = points[j];\r\n\r\n                    const xc = (points[j + 1].x + point.x) / 2;\r\n                    const yc = (points[j + 1].y + point.y) / 2;\r\n\r\n\r\n                    ctx.quadraticCurveTo(point.x, point.y, xc, yc);\r\n                }\r\n                ctx.stroke();\r\n                ctx.closePath();\r\n\r\n\r\n                // Dots\r\n                ctx.lineWidth = 1.2;\r\n                ctx.strokeStyle = self.dotColors[i][2];\r\n                for (let j = 0; j < self.lines[i].dots.length; j++) {\r\n                    const dot = self.lines[i].dots[j],\r\n                        id = self.targets[i][j];\r\n                    // 时间线上的点\r\n                    const dot2 = [\r\n                        (self.lines[i].points[id].x + self.lines[i].points[id + 1].x) / 2,\r\n                        (self.lines[i].points[id].y + self.lines[i].points[id + 1].y) / 2,\r\n                    ];\r\n\r\n                    const p1 = {\r\n                        x: dot[0],\r\n                        y: dot[1] + 70 \r\n                    };\r\n                    const p2 = {\r\n                        x: dot2[0],\r\n                        y: dot2[1]\r\n                    };\r\n\r\n\r\n                    drawLine(p1, p2);\r\n                    console.log(p1)\r\n                    drawCircle(p1, 3, self.dotColors[i][0]);\r\n\r\n                    drawCircle(p2, 11, self.dotColors[i][1]);\r\n                    drawCircle(p2, 5.5, self.dotColors[i][0]);\r\n                }\r\n            }\r\n        }\r\n\r\n        function animate() {\r\n            rafid = requestAnimationFrame(animate);\r\n\r\n            self.lines[0].update();\r\n            self.lines[1].update();\r\n\r\n            redraw();\r\n        }\r\n\r\n        self.toggle = function(run) {\r\n            if (!self.isOK) return false;\r\n\r\n            if (run === undefined)\r\n                self.toggle(!paused);\r\n\r\n            else if (!!run && paused) {\r\n                paused = false;\r\n                animate();\r\n            } else if (!!!run) {\r\n                paused = true;\r\n                cancelAnimationFrame(rafid);\r\n            }\r\n            return true;\r\n        }\r\n\r\n\r\n        self.isOK = init();\r\n    }\r\n\r\nexport default {\r\n  mounted(){\r\n    new Timeline($('#cvs3').get(0)).toggle(true);\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n    article:first-of-type figure p{\r\n        font-size: 16px;\r\n        color:#438eb3;\r\n        letter-spacing: 2px;\r\n    }\r\n    article:last-of-type  figure p{\r\n        font-size: 16px;\r\n        letter-spacing: 2px;\r\n    }\r\n    article:last-of-type figcaption{\r\n    }   \r\n    .timeline {\r\n        height: 100%;\r\n        position: relative;\r\n    }\r\n    \r\n    .timeline canvas {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        left: 0;\r\n        top: 0;\r\n    }\r\n    \r\n    .timeline figcaption {\r\n      color:#fff;\r\n        font-weight: 400;\r\n        font-family: sans-serif;\r\n        font-size: 24px;\r\n        text-transform: uppercase;\r\n    }\r\n    \r\n    .timeline h2 {\r\n        font-weight: 400;\r\n        font-size: 30px;\r\n        padding-bottom: 100px;\r\n        color: #b2cde9;\r\n        font-family: sans-serif;\r\n        text-transform: uppercase;\r\n    }\r\n    \r\n    .timeline h6 {\r\n        color: #0090f5;\r\n        font-family: sans-serif;\r\n        font-size: 17px;\r\n        font-weight: 400;\r\n    }\r\n    \r\n    .timeline p {\r\n        font-weight: 400;\r\n        font-family: sans-serif;\r\n        padding: 3px 0 20px 0;\r\n        color: #949494;\r\n        text-align: justify;\r\n        width: 70%;\r\n    }\r\n    \r\n    .timeline figure {\r\n        width: 100%;\r\n    }\r\n    \r\n    .timeline article {\r\n        position: relative;\r\n        width: 38%;\r\n        overflow: hidden;\r\n        margin-bottom: 100px;\r\n    }\r\n    \r\n    .timeline article:first-of-type {\r\n        float: left;\r\n        text-align: right;\r\n    }\r\n    \r\n    .timeline article:first-of-type p,\r\n    .timeline article:first-of-type figure {\r\n        float: right;\r\n    }\r\n    \r\n    .timeline article:last-of-type {\r\n        float: right;\r\n    }\r\n    \r\n    .timeline article:last-of-type h2 {\r\n        color: #c6e0aa;\r\n    }\r\n    \r\n    .timeline article:last-of-type h6,\r\n    .timeline article:last-of-type a {\r\n        color: #c6e0aa;\r\n    }\r\n    \r\n    .timeline article:last-of-type a:hover {\r\n        color: #95d40d;\r\n    }\r\n</style>"],"mappings":";AA0DA,OAAAA,CAAA;AACA,SAAAC,SAAAC,GAAA;EAEA,IAAAC,IAAA;IACAC,MAAA;IACAC,KAAA;IACAC,KAAA;MACAC,CAAA;MACAC,CAAA;IACA;IACAC,MAAA,GAAAP,GAAA;IACAQ,GAAA;EAEAP,IAAA,CAAAQ,KAAA;EACAR,IAAA,CAAAS,IAAA;EACAT,IAAA,CAAAU,OAAA;IACAC,KAAA;IACAC,OAAA;IACAC,MAAA;EACA;EACAb,IAAA,CAAAc,OAAA,IACA,sBACA,qBACA;EACAd,IAAA,CAAAe,SAAA,IACA,oEACA,iEACA;EAEAf,IAAA,CAAAgB,QAAA;IACA,OAAAf,MAAA;EACA;EAEA,SAAAgB,SAAA;IACA,MAAAC,EAAA,GAAArB,CAAA;IACA,MAAAsB,GAAA,GAAAD,EAAA,CAAAE,IAAA,OAAAC,WAAA;IAEArB,IAAA,CAAAQ,KAAA,IAAAc,IAAA;IACA,IAAAjB,CAAA,GAAAc,GAAA;IACAD,EAAA,CAAAE,IAAA,yBAAAG,IAAA;MACA;MACAvB,IAAA,CAAAQ,KAAA,IAAAc,IAAA,CAAAE,IAAA,EAAA3B,CAAA,OAAA4B,UAAA,SAAApB,CAAA;;MAEAA,CAAA,IAAAR,CAAA,OAAAwB,WAAA;IACA;;IAEA;IACArB,IAAA,CAAAQ,KAAA,IAAAc,IAAA;IACA,IAAAI,EAAA,GAAAP,GAAA;IACAD,EAAA,CAAAE,IAAA,wBAAAG,IAAA;MAEAvB,IAAA,CAAAQ,KAAA,IAAAc,IAAA,CAAAE,IAAA,EAAAlB,MAAA,CAAAqB,KAAA,GAAA9B,CAAA,OAAA4B,UAAA,SAAAC,EAAA;MAEAA,EAAA,IAAA7B,CAAA,OAAAwB,WAAA;IACA;EACA;EAEA,SAAAO,SAAA;IACAtB,MAAA,CAAAqB,KAAA,GAAArB,MAAA,CAAAuB,WAAA;IACAvB,MAAA,CAAAwB,MAAA,GAAAxB,MAAA,CAAAyB,YAAA;IAEA,MAAAC,SAAA,GAAA/B,MAAA;IACAD,IAAA,CAAAiC,MAAA;IACA;IACAjC,IAAA,CAAAQ,KAAA,IAAA0B,KAAA,CAAA5B,MAAA,CAAAuB,WAAA;IACA7B,IAAA,CAAAQ,KAAA,IAAA0B,KAAA,CAAA5B,MAAA,CAAAuB,WAAA;IAEAZ,QAAA;IAEAjB,IAAA,CAAAiC,MAAA,EAAAD,SAAA;EACA;EAEA,SAAAG,KAAA;IACA,IAAAC,MAAA;IACA;MACAA,MAAA,MAAA9B,MAAA,CAAA+B,UAAA,KAAA9B,GAAA,GAAAD,MAAA,CAAA+B,UAAA;MAEArC,IAAA,CAAAQ,KAAA,UAAA8B,IAAA,IAAAhC,MAAA,CAAAyB,YAAA,mBAAA/B,IAAA,CAAAU,OAAA,EAAAP,KAAA;MACAH,IAAA,CAAAQ,KAAA,UAAA8B,IAAA,IAAAhC,MAAA,CAAAyB,YAAA,mBAAA/B,IAAA,CAAAU,OAAA,EAAAP,KAAA;IAEA,SAAAoC,CAAA;MACA;IACA;IAEA1C,CAAA,CAAAS,MAAA,EAAAkC,SAAA,WAAAD,CAAA;MAEA,IAAAA,CAAA,CAAAE,OAAA;QACAtC,KAAA,CAAAC,CAAA,GAAAmC,CAAA,CAAAE,OAAA;QACAtC,KAAA,CAAAE,CAAA,GAAAkC,CAAA,CAAAG,OAAA;MACA,WAAAH,CAAA,CAAAI,MAAA;QACAxC,KAAA,CAAAC,CAAA,GAAAmC,CAAA,CAAAI,MAAA;QACAxC,KAAA,CAAAE,CAAA,GAAAkC,CAAA,CAAAK,MAAA;MACA;QACAzC,KAAA,CAAAC,CAAA,GAAAmC,CAAA,CAAAM,KAAA,GAAAhD,CAAA,CAAAS,MAAA,EAAAwC,MAAA,GAAAC,IAAA;QACA5C,KAAA,CAAAE,CAAA,GAAAkC,CAAA,CAAAS,KAAA,GAAAnD,CAAA,CAAAS,MAAA,EAAAwC,MAAA,GAAA3B,GAAA;MACA;IACA;IAEAtB,CAAA,CAAAoD,MAAA,EAAAC,MAAA,CAAAtB,QAAA;IAEAA,QAAA;IAEA,OAAAQ,MAAA;EACA;EAEA,SAAAE,KAAAjC,CAAA,EAAAyB,MAAA,EAAAqB,KAAA,EAAAzC,OAAA,EAAAP,KAAA;IACA,IAAAH,IAAA;IACAA,IAAA,CAAAmD,KAAA,GAAAA,KAAA;IACAnD,IAAA,CAAAU,OAAA,GAAAA,OAAA;IACAV,IAAA,CAAAG,KAAA,GAAAA,KAAA;IACAH,IAAA,CAAA8B,MAAA,GAAAA,MAAA;IACA9B,IAAA,CAAAsB,IAAA;IACAtB,IAAA,CAAAK,CAAA,GAAAA,CAAA;IAEAL,IAAA,CAAAoD,MAAA;IAEApD,IAAA,CAAAkC,KAAA,aAAA9B,CAAA,EAAAiD,CAAA;MACArD,IAAA,CAAAoD,MAAA;MACA,SAAA/C,CAAA,GAAAL,IAAA,CAAAK,CAAA,EAAAA,CAAA,GAAAL,IAAA,CAAA8B,MAAA,EAAAzB,CAAA,IAAAL,IAAA,CAAAU,OAAA,CAAAE,OAAA,EACAZ,IAAA,CAAAoD,MAAA,CAAA5B,IAAA,KAAA8B,KAAA,CAAAlD,CAAA,EAAAC,CAAA,EAAAL,IAAA,CAAAmD,KAAA;IACA;IAEAnD,IAAA,CAAAuD,MAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAxD,IAAA,CAAAoD,MAAA,CAAAK,MAAA,EAAAD,CAAA,IACAxD,IAAA,CAAAoD,MAAA,CAAAI,CAAA,EAAAD,MAAA,CAAAvD,IAAA,CAAAG,KAAA,EAAAH,IAAA,CAAAU,OAAA;IACA;IAEA,SAAA4C,MAAAlD,CAAA,EAAAC,CAAA;MACA,KAAAA,CAAA,GAAAA,CAAA;MACA,KAAAD,CAAA,GAAAA,CAAA;MACA,KAAAsD,IAAA;QACAtD,CAAA,EAAAA,CAAA;QACAC,CAAA,EAAAA;MACA;MAEA,KAAAkD,MAAA,aAAApD,KAAA,EAAAO,OAAA;QACA,IAAAiD,EAAA,QAAAvD,CAAA,GAAAD,KAAA,CAAAC,CAAA;UACAwD,EAAA,QAAAvD,CAAA,GAAAF,KAAA,CAAAE,CAAA;UACAwD,KAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAJ,EAAA,EAAAC,EAAA;UACAI,CAAA,GAAAtD,OAAA,CAAAG,MAAA,GAAAiD,IAAA,CAAAG,IAAA,CAAAN,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA;QAEAC,KAAA,GAAAA,KAAA,OAAAA,KAAA,OAAAC,IAAA,CAAAI,EAAA,GAAAL,KAAA;QACA,KAAAxD,CAAA,IAAAyD,IAAA,CAAAK,GAAA,CAAAN,KAAA,IAAAG,CAAA,SAAAN,IAAA,CAAArD,CAAA,QAAAA,CAAA,IAAAK,OAAA,CAAAC,KAAA;QACA,KAAAP,CAAA,IAAA0D,IAAA,CAAAM,GAAA,CAAAP,KAAA,IAAAG,CAAA,SAAAN,IAAA,CAAAtD,CAAA,QAAAA,CAAA,IAAAM,OAAA,CAAAC,KAAA;MACA;IACA;EACA;;EAEA;EACA,SAAA0D,WAAAC,CAAA,EAAAC,CAAA,EAAApB,KAAA;IACA5C,GAAA,CAAAiE,SAAA,GAAArB,KAAA;IACA5C,GAAA,CAAAkE,SAAA;IACAlE,GAAA,CAAAmE,GAAA,CAAAJ,CAAA,CAAAlE,CAAA,EAAAkE,CAAA,CAAAjE,CAAA,EAAAkE,CAAA,SAAAT,IAAA,CAAAI,EAAA;IACA3D,GAAA,CAAAoE,SAAA;IACApE,GAAA,CAAAqE,IAAA;EACA;EAEA,SAAAC,SAAAC,EAAA,EAAAC,EAAA;IACAxE,GAAA,CAAAkE,SAAA;IACAlE,GAAA,CAAAyE,MAAA,CAAAF,EAAA,CAAA1E,CAAA,EAAA0E,EAAA,CAAAzE,CAAA;IACAE,GAAA,CAAA0E,MAAA,CAAAF,EAAA,CAAA3E,CAAA,EAAA2E,EAAA,CAAA1E,CAAA;IACAE,GAAA,CAAA2E,MAAA;IACA3E,GAAA,CAAAoE,SAAA;EACA;EAEA,SAAAQ,OAAA;IACA5E,GAAA,CAAA6E,SAAA,OAAA9E,MAAA,CAAAqB,KAAA,EAAArB,MAAA,CAAAwB,MAAA;IAEA,SAAA0B,CAAA,MAAAA,CAAA,MAAAA,CAAA;MACA,MAAAJ,MAAA,GAAApD,IAAA,CAAAQ,KAAA,CAAAgD,CAAA,EAAAJ,MAAA;MAEA7C,GAAA,CAAAkE,SAAA;MACAlE,GAAA,CAAA8E,SAAA;MACA9E,GAAA,CAAA+E,WAAA,GAAAtF,IAAA,CAAAQ,KAAA,CAAAgD,CAAA,EAAAL,KAAA;MACA5C,GAAA,CAAAyE,MAAA,CAAA5B,MAAA,KAAAhD,CAAA,EAAAgD,MAAA,KAAA/C,CAAA;MAEA,SAAAkF,CAAA,OAAAA,CAAA,GAAAnC,MAAA,CAAAK,MAAA,MAAA8B,CAAA;QACA,MAAAC,KAAA,GAAApC,MAAA,CAAAmC,CAAA;QAEA,MAAAE,EAAA,IAAArC,MAAA,CAAAmC,CAAA,MAAAnF,CAAA,GAAAoF,KAAA,CAAApF,CAAA;QACA,MAAAsF,EAAA,IAAAtC,MAAA,CAAAmC,CAAA,MAAAlF,CAAA,GAAAmF,KAAA,CAAAnF,CAAA;QAGAE,GAAA,CAAAoF,gBAAA,CAAAH,KAAA,CAAApF,CAAA,EAAAoF,KAAA,CAAAnF,CAAA,EAAAoF,EAAA,EAAAC,EAAA;MACA;MACAnF,GAAA,CAAA2E,MAAA;MACA3E,GAAA,CAAAoE,SAAA;;MAGA;MACApE,GAAA,CAAA8E,SAAA;MACA9E,GAAA,CAAA+E,WAAA,GAAAtF,IAAA,CAAAe,SAAA,CAAAyC,CAAA;MACA,SAAA+B,CAAA,MAAAA,CAAA,GAAAvF,IAAA,CAAAQ,KAAA,CAAAgD,CAAA,EAAAlC,IAAA,CAAAmC,MAAA,EAAA8B,CAAA;QACA,MAAAK,GAAA,GAAA5F,IAAA,CAAAQ,KAAA,CAAAgD,CAAA,EAAAlC,IAAA,CAAAiE,CAAA;UACAM,EAAA,GAAA7F,IAAA,CAAAc,OAAA,CAAA0C,CAAA,EAAA+B,CAAA;QACA;QACA,MAAAO,IAAA,IACA,CAAA9F,IAAA,CAAAQ,KAAA,CAAAgD,CAAA,EAAAJ,MAAA,CAAAyC,EAAA,EAAAzF,CAAA,GAAAJ,IAAA,CAAAQ,KAAA,CAAAgD,CAAA,EAAAJ,MAAA,CAAAyC,EAAA,MAAAzF,CAAA,OACA,CAAAJ,IAAA,CAAAQ,KAAA,CAAAgD,CAAA,EAAAJ,MAAA,CAAAyC,EAAA,EAAAxF,CAAA,GAAAL,IAAA,CAAAQ,KAAA,CAAAgD,CAAA,EAAAJ,MAAA,CAAAyC,EAAA,MAAAxF,CAAA,MACA;QAEA,MAAAyE,EAAA;UACA1E,CAAA,EAAAwF,GAAA;UACAvF,CAAA,EAAAuF,GAAA;QACA;QACA,MAAAb,EAAA;UACA3E,CAAA,EAAA0F,IAAA;UACAzF,CAAA,EAAAyF,IAAA;QACA;QAGAjB,QAAA,CAAAC,EAAA,EAAAC,EAAA;QACAgB,OAAA,CAAAC,GAAA,CAAAlB,EAAA;QACAT,UAAA,CAAAS,EAAA,KAAA9E,IAAA,CAAAe,SAAA,CAAAyC,CAAA;QAEAa,UAAA,CAAAU,EAAA,MAAA/E,IAAA,CAAAe,SAAA,CAAAyC,CAAA;QACAa,UAAA,CAAAU,EAAA,OAAA/E,IAAA,CAAAe,SAAA,CAAAyC,CAAA;MACA;IACA;EACA;EAEA,SAAAyC,QAAA;IACA/F,KAAA,GAAAgG,qBAAA,CAAAD,OAAA;IAEAjG,IAAA,CAAAQ,KAAA,IAAA+C,MAAA;IACAvD,IAAA,CAAAQ,KAAA,IAAA+C,MAAA;IAEA4B,MAAA;EACA;EAEAnF,IAAA,CAAAiC,MAAA,aAAAkE,GAAA;IACA,KAAAnG,IAAA,CAAAS,IAAA;IAEA,IAAA0F,GAAA,KAAAC,SAAA,EACApG,IAAA,CAAAiC,MAAA,EAAAhC,MAAA,OAEA,MAAAkG,GAAA,IAAAlG,MAAA;MACAA,MAAA;MACAgG,OAAA;IACA,cAAAE,GAAA;MACAlG,MAAA;MACAoG,oBAAA,CAAAnG,KAAA;IACA;IACA;EACA;EAGAF,IAAA,CAAAS,IAAA,GAAA0B,IAAA;AACA;AAEA;EACAmE,QAAA;IACA,IAAAxG,QAAA,CAAAD,CAAA,UAAA0G,GAAA,KAAAtE,MAAA;EACA;AACA"}]}