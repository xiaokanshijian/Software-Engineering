{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\activeRingChart\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\activeRingChart\\src\\main.vue","mtime":1713594891392},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\babel.config.js","mtime":1713594890607},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Charts","dvDigitalFlop","deepMerge","deepClone","name","components","props","config","type","Object","default","data","defaultConfig","radius","activeRadius","value","lineWidth","activeTimeGap","color","digitalFlopStyle","fontSize","fill","digitalFlopToFixed","digitalFlopUnit","animationCurve","animationFrame","showOriginValue","mergedConfig","chart","activeIndex","animationHandler","computed","digitalFlop","map","displayValue","sum","reduce","all","v","percent","parseFloat","content","number","style","toFixed","ringName","watch","mergeConfig","setRingOption","clearTimeout","methods","init","initChart","$refs","getRingOption","ringAnimation","option","setOption","getRealRadius","forEach","dataItem","series","outsideLabel","show","active","maxRadius","Math","min","render","area","halfLineWidth","realRadius","parseInt","insideRadius","outSideRadius","i","setTimeout","foo","length","mounted","beforeDestroy"],"sources":["node_modules/@jiaminghi/data-view/lib/components/activeRingChart/src/main.vue"],"sourcesContent":["<template>\r\n  <div class=\"dv-active-ring-chart\">\r\n    <div class=\"active-ring-chart-container\" ref=\"active-ring-chart\" />\r\n    <div class=\"active-ring-info\">\r\n      <dv-digital-flop :config=\"digitalFlop\" />\r\n      <div class=\"active-ring-name\" :style=\"fontSize\">{{ ringName }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Charts from '@jiaminghi/charts'\r\n\r\nimport dvDigitalFlop from '../../digitalFlop/src/main.vue'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvActiveRingChart',\r\n  components: {\r\n    dvDigitalFlop\r\n  },\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      defaultConfig: {\r\n        /**\r\n         * @description Ring radius\r\n         * @type {String|Number}\r\n         * @default radius = '50%'\r\n         * @example radius = '50%' | 100\r\n         */\r\n        radius: '50%',\r\n        /**\r\n         * @description Active ring radius\r\n         * @type {String|Number}\r\n         * @default activeRadius = '55%'\r\n         * @example activeRadius = '55%' | 110\r\n         */\r\n        activeRadius: '55%',\r\n        /**\r\n         * @description Ring data\r\n         * @type {Array<Object>}\r\n         * @default data = [{ name: '', value: 0 }]\r\n         */\r\n        data: [{ name: '', value: 0 }],\r\n        /**\r\n         * @description Ring line width\r\n         * @type {Number}\r\n         * @default lineWidth = 20\r\n         */\r\n        lineWidth: 20,\r\n        /**\r\n         * @description Active time gap (ms)\r\n         * @type {Number}\r\n         * @default activeTimeGap = 3000\r\n         */\r\n        activeTimeGap: 3000,\r\n        /**\r\n         * @description Ring color (hex|rgb|rgba|color keywords)\r\n         * @type {Array<String>}\r\n         * @default color = [Charts Default Color]\r\n         * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\r\n         */\r\n        color: [],\r\n        /**\r\n         * @description Digital flop style\r\n         * @type {Object}\r\n         */\r\n        digitalFlopStyle: {\r\n          fontSize: 25,\r\n          fill: '#fff'\r\n        },\r\n        /**\r\n         * @description Digital flop toFixed\r\n         * @type {Number}\r\n         */\r\n        digitalFlopToFixed: 0,\r\n        /**\r\n         * @description Digital flop unit\r\n         * @type {String}\r\n         */\r\n        digitalFlopUnit: '',\r\n        /**\r\n         * @description CRender animationCurve\r\n         * @type {String}\r\n         * @default animationCurve = 'easeOutCubic'\r\n         */\r\n        animationCurve: 'easeOutCubic',\r\n        /**\r\n         * @description CRender animationFrame\r\n         * @type {String}\r\n         * @default animationFrame = 50\r\n         */\r\n        animationFrame: 50,\r\n        /**\r\n         * @description showOriginValue\r\n         * @type {Boolean}\r\n         * @default showOriginValue = false\r\n         */\r\n        showOriginValue: false\r\n      },\r\n\r\n      mergedConfig: null,\r\n\r\n      chart: null,\r\n\r\n      activeIndex: 0,\r\n\r\n      animationHandler: ''\r\n    }\r\n  },\r\n  computed: {\r\n    digitalFlop() {\r\n      const { mergedConfig, activeIndex } = this\r\n\r\n      if (!mergedConfig) return {}\r\n\r\n      const {\r\n        digitalFlopStyle,\r\n        digitalFlopToFixed,\r\n        data,\r\n        showOriginValue,\r\n        digitalFlopUnit\r\n      } = mergedConfig\r\n\r\n      const value = data.map(({ value }) => value)\r\n\r\n      let displayValue\r\n\r\n      if (showOriginValue) {\r\n        displayValue = value[activeIndex]\r\n      } else {\r\n        const sum = value.reduce((all, v) => all + v, 0)\r\n\r\n        const percent = parseFloat((value[activeIndex] / sum) * 100) || 0\r\n\r\n        displayValue = percent\r\n      }\r\n\r\n      return {\r\n        content: showOriginValue ? `{nt}${digitalFlopUnit}` : `{nt}${digitalFlopUnit || '%'}`,\r\n        number: [displayValue],\r\n        style: digitalFlopStyle,\r\n        toFixed: digitalFlopToFixed\r\n      }\r\n    },\r\n    ringName() {\r\n      const { mergedConfig, activeIndex } = this\r\n\r\n      if (!mergedConfig) return ''\r\n\r\n      return mergedConfig.data[activeIndex].name\r\n    },\r\n    fontSize() {\r\n      const { mergedConfig } = this\r\n\r\n      if (!mergedConfig) return ''\r\n\r\n      return `font-size: ${mergedConfig.digitalFlopStyle.fontSize}px;`\r\n    }\r\n  },\r\n  watch: {\r\n    config() {\r\n      const { animationHandler, mergeConfig, setRingOption } = this\r\n\r\n      clearTimeout(animationHandler)\r\n\r\n      this.activeIndex = 0\r\n\r\n      mergeConfig()\r\n\r\n      setRingOption()\r\n    }\r\n  },\r\n  methods: {\r\n    init() {\r\n      const { initChart, mergeConfig, setRingOption } = this\r\n\r\n      initChart()\r\n\r\n      mergeConfig()\r\n\r\n      setRingOption()\r\n    },\r\n    initChart() {\r\n      const { $refs } = this\r\n\r\n      this.chart = new Charts($refs['active-ring-chart'])\r\n    },\r\n    mergeConfig() {\r\n      const { defaultConfig, config } = this\r\n\r\n      this.mergedConfig = deepMerge(\r\n        deepClone(defaultConfig, true),\r\n        config || {}\r\n      )\r\n    },\r\n    setRingOption() {\r\n      const { getRingOption, chart, ringAnimation } = this\r\n\r\n      const option = getRingOption()\r\n\r\n      chart.setOption(option, true)\r\n\r\n      ringAnimation()\r\n    },\r\n    getRingOption() {\r\n      const { mergedConfig, getRealRadius } = this\r\n\r\n      const radius = getRealRadius()\r\n\r\n      mergedConfig.data.forEach(dataItem => {\r\n        dataItem.radius = radius\r\n      })\r\n\r\n      return {\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            ...mergedConfig,\r\n            outsideLabel: {\r\n              show: false\r\n            }\r\n          }\r\n        ],\r\n        color: mergedConfig.color\r\n      }\r\n    },\r\n    getRealRadius(active = false) {\r\n      const { mergedConfig, chart } = this\r\n\r\n      const { radius, activeRadius, lineWidth } = mergedConfig\r\n\r\n      const maxRadius = Math.min(...chart.render.area) / 2\r\n\r\n      const halfLineWidth = lineWidth / 2\r\n\r\n      let realRadius = active ? activeRadius : radius\r\n\r\n      if (typeof realRadius !== 'number')\r\n        realRadius = (parseInt(realRadius) / 100) * maxRadius\r\n\r\n      const insideRadius = realRadius - halfLineWidth\r\n      const outSideRadius = realRadius + halfLineWidth\r\n\r\n      return [insideRadius, outSideRadius]\r\n    },\r\n    ringAnimation() {\r\n      let { activeIndex, getRingOption, chart, getRealRadius } = this\r\n\r\n      const radius = getRealRadius()\r\n      const active = getRealRadius(true)\r\n\r\n      const option = getRingOption()\r\n\r\n      const { data } = option.series[0]\r\n\r\n      data.forEach((dataItem, i) => {\r\n        if (i === activeIndex) {\r\n          dataItem.radius = active\r\n        } else {\r\n          dataItem.radius = radius\r\n        }\r\n      })\r\n\r\n      chart.setOption(option, true)\r\n\r\n      const { activeTimeGap } = option.series[0]\r\n\r\n      this.animationHandler = setTimeout(foo => {\r\n        activeIndex += 1\r\n\r\n        if (activeIndex >= data.length) activeIndex = 0\r\n\r\n        this.activeIndex = activeIndex\r\n\r\n        this.ringAnimation()\r\n      }, activeTimeGap)\r\n    }\r\n  },\r\n  mounted() {\r\n    const { init } = this\r\n\r\n    init()\r\n  },\r\n  beforeDestroy() {\r\n    const { animationHandler } = this\r\n\r\n    clearTimeout(animationHandler)\r\n  }\r\n}\r\n</script>"],"mappings":"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"}]}