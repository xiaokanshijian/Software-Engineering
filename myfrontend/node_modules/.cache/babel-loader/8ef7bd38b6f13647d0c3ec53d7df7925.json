{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollRankingBoard\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollRankingBoard\\src\\main.vue","mtime":1713594891423},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\babel.config.js","mtime":1713594890607},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCBhdXRvUmVzaXplIGZyb20gJy4uLy4uLy4uL21peGluL2F1dG9SZXNpemUnOwppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCc7CmltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJ0BqaWFtaW5naGkvYy1yZW5kZXIvbGliL3BsdWdpbi91dGlsJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEdlNjcm9sbFJhbmtpbmdCb2FyZCcsCiAgbWl4aW5zOiBbYXV0b1Jlc2l6ZV0sCiAgcHJvcHM6IHsKICAgIGNvbmZpZzogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+ICh7fSkKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByZWY6ICdzY3JvbGwtcmFua2luZy1ib2FyZCcsCiAgICAgIGRlZmF1bHRDb25maWc6IHsKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIEJvYXJkIGRhdGENCiAgICAgICAgICogQHR5cGUge0FycmF5PE9iamVjdD59DQogICAgICAgICAqIEBkZWZhdWx0IGRhdGEgPSBbXQ0KICAgICAgICAgKi8KICAgICAgICBkYXRhOiBbXSwKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFJvdyBudW0NCiAgICAgICAgICogQHR5cGUge051bWJlcn0NCiAgICAgICAgICogQGRlZmF1bHQgcm93TnVtID0gNQ0KICAgICAgICAgKi8KICAgICAgICByb3dOdW06IDUsCiAgICAgICAgLyoqDQogICAgICAgICAqIEBkZXNjcmlwdGlvbiBTY3JvbGwgd2FpdCB0aW1lDQogICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9DQogICAgICAgICAqIEBkZWZhdWx0IHdhaXRUaW1lID0gMjAwMA0KICAgICAgICAgKi8KICAgICAgICB3YWl0VGltZTogMjAwMCwKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENhcm91c2VsIHR5cGUNCiAgICAgICAgICogQHR5cGUge1N0cmluZ30NCiAgICAgICAgICogQGRlZmF1bHQgY2Fyb3VzZWwgPSAnc2luZ2xlJw0KICAgICAgICAgKiBAZXhhbXBsZSBjYXJvdXNlbCA9ICdzaW5nbGUnIHwgJ3BhZ2UnDQogICAgICAgICAqLwogICAgICAgIGNhcm91c2VsOiAnc2luZ2xlJywKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFZhbHVlIHVuaXQNCiAgICAgICAgICogQHR5cGUge1N0cmluZ30NCiAgICAgICAgICogQGRlZmF1bHQgdW5pdCA9ICcnDQogICAgICAgICAqIEBleGFtcGxlIHVuaXQgPSAndG9uJw0KICAgICAgICAgKi8KICAgICAgICB1bml0OiAnJywKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIEF1dG8gc29ydCBieSB2YWx1ZQ0KICAgICAgICAgKiBAdHlwZSB7Qm9vbGVhbn0NCiAgICAgICAgICogQGRlZmF1bHQgc29ydCA9IHRydWUNCiAgICAgICAgICovCiAgICAgICAgc29ydDogdHJ1ZSwKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFZhbHVlIGZvcm1hdHRlcg0KICAgICAgICAgKiBAdHlwZSB7RnVuY3Rpb259DQogICAgICAgICAqIEBkZWZhdWx0IHZhbHVlRm9ybWF0dGVyID0gbnVsbA0KICAgICAgICAgKi8KICAgICAgICB2YWx1ZUZvcm1hdHRlcjogbnVsbAogICAgICB9LAogICAgICBtZXJnZWRDb25maWc6IG51bGwsCiAgICAgIHJvd3NEYXRhOiBbXSwKICAgICAgcm93czogW10sCiAgICAgIGhlaWdodHM6IFtdLAogICAgICBhbmltYXRpb25JbmRleDogMCwKICAgICAgYW5pbWF0aW9uSGFuZGxlcjogJycsCiAgICAgIHVwZGF0ZXI6IDAKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY29uZmlnKCkgewogICAgICBjb25zdCB7CiAgICAgICAgc3RvcEFuaW1hdGlvbiwKICAgICAgICBjYWxjRGF0YQogICAgICB9ID0gdGhpczsKICAgICAgc3RvcEFuaW1hdGlvbigpOwogICAgICBjYWxjRGF0YSgpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWZ0ZXJBdXRvUmVzaXplTWl4aW5Jbml0KCkgewogICAgICBjb25zdCB7CiAgICAgICAgY2FsY0RhdGEKICAgICAgfSA9IHRoaXM7CiAgICAgIGNhbGNEYXRhKCk7CiAgICB9LAogICAgb25SZXNpemUoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBtZXJnZWRDb25maWcsCiAgICAgICAgY2FsY0hlaWdodHMKICAgICAgfSA9IHRoaXM7CiAgICAgIGlmICghbWVyZ2VkQ29uZmlnKSByZXR1cm47CiAgICAgIGNhbGNIZWlnaHRzKHRydWUpOwogICAgfSwKICAgIGNhbGNEYXRhKCkgewogICAgICBjb25zdCB7CiAgICAgICAgbWVyZ2VDb25maWcsCiAgICAgICAgY2FsY1Jvd3NEYXRhCiAgICAgIH0gPSB0aGlzOwogICAgICBtZXJnZUNvbmZpZygpOwogICAgICBjYWxjUm93c0RhdGEoKTsKICAgICAgY29uc3QgewogICAgICAgIGNhbGNIZWlnaHRzCiAgICAgIH0gPSB0aGlzOwogICAgICBjYWxjSGVpZ2h0cygpOwogICAgICBjb25zdCB7CiAgICAgICAgYW5pbWF0aW9uCiAgICAgIH0gPSB0aGlzOwogICAgICBhbmltYXRpb24odHJ1ZSk7CiAgICB9LAogICAgbWVyZ2VDb25maWcoKSB7CiAgICAgIGxldCB7CiAgICAgICAgY29uZmlnLAogICAgICAgIGRlZmF1bHRDb25maWcKICAgICAgfSA9IHRoaXM7CiAgICAgIHRoaXMubWVyZ2VkQ29uZmlnID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29uZmlnLCB0cnVlKSwgY29uZmlnIHx8IHt9KTsKICAgIH0sCiAgICBjYWxjUm93c0RhdGEoKSB7CiAgICAgIGxldCB7CiAgICAgICAgZGF0YSwKICAgICAgICByb3dOdW0sCiAgICAgICAgc29ydAogICAgICB9ID0gdGhpcy5tZXJnZWRDb25maWc7CiAgICAgIHNvcnQgJiYgZGF0YS5zb3J0KCh7CiAgICAgICAgdmFsdWU6IGEKICAgICAgfSwgewogICAgICAgIHZhbHVlOiBiCiAgICAgIH0pID0+IHsKICAgICAgICBpZiAoYSA+IGIpIHJldHVybiAtMTsKICAgICAgICBpZiAoYSA8IGIpIHJldHVybiAxOwogICAgICAgIGlmIChhID09PSBiKSByZXR1cm4gMDsKICAgICAgfSk7CiAgICAgIGNvbnN0IHZhbHVlID0gZGF0YS5tYXAoKHsKICAgICAgICB2YWx1ZQogICAgICB9KSA9PiB2YWx1ZSk7CiAgICAgIGNvbnN0IG1pbiA9IE1hdGgubWluKC4uLnZhbHVlKSB8fCAwOwoKICAgICAgLy8gYWJzIG9mIG1pbgogICAgICBjb25zdCBtaW5BYnMgPSBNYXRoLmFicyhtaW4pOwogICAgICBjb25zdCBtYXggPSBNYXRoLm1heCguLi52YWx1ZSkgfHwgMDsKCiAgICAgIC8vIGFicyBvZiBtYXgKICAgICAgY29uc3QgbWF4QWJzID0gTWF0aC5hYnMobWF4KTsKICAgICAgY29uc3QgdG90YWwgPSBtYXggKyBtaW5BYnM7CiAgICAgIGRhdGEgPSBkYXRhLm1hcCgocm93LCBpKSA9PiAoewogICAgICAgIC4uLnJvdywKICAgICAgICByYW5raW5nOiBpICsgMSwKICAgICAgICBwZXJjZW50OiAocm93LnZhbHVlICsgbWluQWJzKSAvIHRvdGFsICogMTAwCiAgICAgIH0pKTsKICAgICAgY29uc3Qgcm93TGVuZ3RoID0gZGF0YS5sZW5ndGg7CiAgICAgIGlmIChyb3dMZW5ndGggPiByb3dOdW0gJiYgcm93TGVuZ3RoIDwgMiAqIHJvd051bSkgewogICAgICAgIGRhdGEgPSBbLi4uZGF0YSwgLi4uZGF0YV07CiAgICAgIH0KICAgICAgZGF0YSA9IGRhdGEubWFwKChkLCBpKSA9PiAoewogICAgICAgIC4uLmQsCiAgICAgICAgc2Nyb2xsOiBpCiAgICAgIH0pKTsKICAgICAgdGhpcy5yb3dzRGF0YSA9IGRhdGE7CiAgICAgIHRoaXMucm93cyA9IGRhdGE7CiAgICB9LAogICAgY2FsY0hlaWdodHMob25yZXNpemUgPSBmYWxzZSkgewogICAgICBjb25zdCB7CiAgICAgICAgaGVpZ2h0LAogICAgICAgIG1lcmdlZENvbmZpZwogICAgICB9ID0gdGhpczsKICAgICAgY29uc3QgewogICAgICAgIHJvd051bSwKICAgICAgICBkYXRhCiAgICAgIH0gPSBtZXJnZWRDb25maWc7CiAgICAgIGNvbnN0IGF2Z0hlaWdodCA9IGhlaWdodCAvIHJvd051bTsKICAgICAgdGhpcy5hdmdIZWlnaHQgPSBhdmdIZWlnaHQ7CiAgICAgIGlmICghb25yZXNpemUpIHRoaXMuaGVpZ2h0cyA9IG5ldyBBcnJheShkYXRhLmxlbmd0aCkuZmlsbChhdmdIZWlnaHQpOwogICAgfSwKICAgIGFzeW5jIGFuaW1hdGlvbihzdGFydCA9IGZhbHNlKSB7CiAgICAgIGxldCB7CiAgICAgICAgYXZnSGVpZ2h0LAogICAgICAgIGFuaW1hdGlvbkluZGV4LAogICAgICAgIG1lcmdlZENvbmZpZywKICAgICAgICByb3dzRGF0YSwKICAgICAgICBhbmltYXRpb24sCiAgICAgICAgdXBkYXRlcgogICAgICB9ID0gdGhpczsKICAgICAgY29uc3QgewogICAgICAgIHdhaXRUaW1lLAogICAgICAgIGNhcm91c2VsLAogICAgICAgIHJvd051bQogICAgICB9ID0gbWVyZ2VkQ29uZmlnOwogICAgICBjb25zdCByb3dMZW5ndGggPSByb3dzRGF0YS5sZW5ndGg7CiAgICAgIGlmIChyb3dOdW0gPj0gcm93TGVuZ3RoKSByZXR1cm47CiAgICAgIGlmIChzdGFydCkgewogICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCB3YWl0VGltZSkpOwogICAgICAgIGlmICh1cGRhdGVyICE9PSB0aGlzLnVwZGF0ZXIpIHJldHVybjsKICAgICAgfQogICAgICBjb25zdCBhbmltYXRpb25OdW0gPSBjYXJvdXNlbCA9PT0gJ3NpbmdsZScgPyAxIDogcm93TnVtOwogICAgICBsZXQgcm93cyA9IHJvd3NEYXRhLnNsaWNlKGFuaW1hdGlvbkluZGV4KTsKICAgICAgcm93cy5wdXNoKC4uLnJvd3NEYXRhLnNsaWNlKDAsIGFuaW1hdGlvbkluZGV4KSk7CiAgICAgIHRoaXMucm93cyA9IHJvd3Muc2xpY2UoMCwgcm93TnVtICsgMSk7CiAgICAgIHRoaXMuaGVpZ2h0cyA9IG5ldyBBcnJheShyb3dMZW5ndGgpLmZpbGwoYXZnSGVpZ2h0KTsKICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDMwMCkpOwogICAgICBpZiAodXBkYXRlciAhPT0gdGhpcy51cGRhdGVyKSByZXR1cm47CiAgICAgIHRoaXMuaGVpZ2h0cy5zcGxpY2UoMCwgYW5pbWF0aW9uTnVtLCAuLi5uZXcgQXJyYXkoYW5pbWF0aW9uTnVtKS5maWxsKDApKTsKICAgICAgYW5pbWF0aW9uSW5kZXggKz0gYW5pbWF0aW9uTnVtOwogICAgICBjb25zdCBiYWNrID0gYW5pbWF0aW9uSW5kZXggLSByb3dMZW5ndGg7CiAgICAgIGlmIChiYWNrID49IDApIGFuaW1hdGlvbkluZGV4ID0gYmFjazsKICAgICAgdGhpcy5hbmltYXRpb25JbmRleCA9IGFuaW1hdGlvbkluZGV4OwogICAgICB0aGlzLmFuaW1hdGlvbkhhbmRsZXIgPSBzZXRUaW1lb3V0KGFuaW1hdGlvbiwgd2FpdFRpbWUgLSAzMDApOwogICAgfSwKICAgIHN0b3BBbmltYXRpb24oKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBhbmltYXRpb25IYW5kbGVyLAogICAgICAgIHVwZGF0ZXIKICAgICAgfSA9IHRoaXM7CiAgICAgIHRoaXMudXBkYXRlciA9ICh1cGRhdGVyICsgMSkgJSA5OTk5OTk7CiAgICAgIGlmICghYW5pbWF0aW9uSGFuZGxlcikgcmV0dXJuOwogICAgICBjbGVhclRpbWVvdXQoYW5pbWF0aW9uSGFuZGxlcik7CiAgICB9CiAgfSwKICBkZXN0cm95ZWQoKSB7CiAgICBjb25zdCB7CiAgICAgIHN0b3BBbmltYXRpb24KICAgIH0gPSB0aGlzOwogICAgc3RvcEFuaW1hdGlvbigpOwogIH0KfTs="},{"version":3,"names":["autoResize","deepMerge","deepClone","name","mixins","props","config","type","Object","default","data","ref","defaultConfig","rowNum","waitTime","carousel","unit","sort","valueFormatter","mergedConfig","rowsData","rows","heights","animationIndex","animationHandler","updater","watch","stopAnimation","calcData","methods","afterAutoResizeMixinInit","onResize","calcHeights","mergeConfig","calcRowsData","animation","value","a","b","map","min","Math","minAbs","abs","max","maxAbs","total","row","i","ranking","percent","rowLength","length","d","scroll","onresize","height","avgHeight","Array","fill","start","Promise","resolve","setTimeout","animationNum","slice","push","splice","back","clearTimeout","destroyed"],"sources":["node_modules/@jiaminghi/data-view/lib/components/scrollRankingBoard/src/main.vue"],"sourcesContent":["<template>\r\n  <div class=\"dv-scroll-ranking-board\" :ref=\"ref\">\r\n    <div\r\n      class=\"row-item\"\r\n      v-for=\"(item, i) in rows\"\r\n      :key=\"item.toString() + item.scroll\"\r\n      :style=\"`height: ${heights[i]}px;`\"\r\n    >\r\n      <div class=\"ranking-info\">\r\n        <div class=\"rank\">No.{{ item.ranking }}</div>\r\n        <div class=\"info-name\" v-html=\"item.name\" />\r\n        <div class=\"ranking-value\">{{ mergedConfig.valueFormatter ? mergedConfig.valueFormatter(item) : item.value + mergedConfig.unit }}</div>\r\n      </div>\r\n\r\n      <div class=\"ranking-column\">\r\n        <div\r\n          class=\"inside-column\"\r\n          :style=\"`width: ${item.percent}%;`\"\r\n        >\r\n          <div class=\"shine\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvScrollRankingBoard',\r\n  mixins: [autoResize],\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      ref: 'scroll-ranking-board',\r\n\r\n      defaultConfig: {\r\n        /**\r\n         * @description Board data\r\n         * @type {Array<Object>}\r\n         * @default data = []\r\n         */\r\n        data: [],\r\n        /**\r\n         * @description Row num\r\n         * @type {Number}\r\n         * @default rowNum = 5\r\n         */\r\n        rowNum: 5,\r\n        /**\r\n         * @description Scroll wait time\r\n         * @type {Number}\r\n         * @default waitTime = 2000\r\n         */\r\n        waitTime: 2000,\r\n        /**\r\n         * @description Carousel type\r\n         * @type {String}\r\n         * @default carousel = 'single'\r\n         * @example carousel = 'single' | 'page'\r\n         */\r\n        carousel: 'single',\r\n        /**\r\n         * @description Value unit\r\n         * @type {String}\r\n         * @default unit = ''\r\n         * @example unit = 'ton'\r\n         */\r\n        unit: '',\r\n        /**\r\n         * @description Auto sort by value\r\n         * @type {Boolean}\r\n         * @default sort = true\r\n         */\r\n        sort: true,\r\n        /**\r\n         * @description Value formatter\r\n         * @type {Function}\r\n         * @default valueFormatter = null\r\n         */\r\n        valueFormatter: null\r\n      },\r\n\r\n      mergedConfig: null,\r\n\r\n      rowsData: [],\r\n\r\n      rows: [],\r\n\r\n      heights: [],\r\n\r\n      animationIndex: 0,\r\n\r\n      animationHandler: '',\r\n\r\n      updater: 0\r\n    }\r\n  },\r\n  watch: {\r\n    config () {\r\n      const { stopAnimation, calcData } = this\r\n\r\n      stopAnimation()\r\n\r\n      calcData()\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { calcData } = this\r\n\r\n      calcData()\r\n    },\r\n    onResize () {\r\n      const { mergedConfig, calcHeights } = this\r\n\r\n      if (!mergedConfig) return\r\n\r\n      calcHeights(true)\r\n    },\r\n    calcData () {\r\n      const { mergeConfig, calcRowsData } = this\r\n\r\n      mergeConfig()\r\n\r\n      calcRowsData()\r\n\r\n      const { calcHeights } = this\r\n\r\n      calcHeights()\r\n\r\n      const { animation } = this\r\n\r\n      animation(true)\r\n    },\r\n    mergeConfig () {\r\n      let { config, defaultConfig } = this\r\n\r\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n    },\r\n    calcRowsData () {\r\n      let { data, rowNum, sort } = this.mergedConfig\r\n\r\n      sort && data.sort(({ value: a }, { value: b }) => {\r\n        if (a > b) return -1\r\n        if (a < b) return 1\r\n        if (a === b) return 0\r\n      })\r\n\r\n      const value = data.map(({ value }) => value)\r\n      \r\n      const min = Math.min(...value) || 0\r\n\r\n      // abs of min\r\n      const minAbs = Math.abs(min)\r\n\r\n      const max = Math.max(...value) || 0\r\n\r\n      // abs of max\r\n      const maxAbs = Math.abs(max)\r\n\r\n      const total = max + minAbs\r\n\r\n      data = data.map((row, i) => ({ ...row, ranking: i + 1, percent: (row.value + minAbs) / total * 100 }))\r\n\r\n      const rowLength = data.length\r\n\r\n      if (rowLength > rowNum && rowLength < 2 * rowNum) {\r\n        data = [...data, ...data]\r\n      }\r\n\r\n      data = data.map((d, i) => ({ ...d, scroll: i }))\r\n\r\n      this.rowsData = data\r\n      this.rows = data\r\n    },\r\n    calcHeights (onresize = false) {\r\n      const { height, mergedConfig } = this\r\n\r\n      const { rowNum, data } = mergedConfig\r\n\r\n      const avgHeight = height / rowNum\r\n\r\n      this.avgHeight = avgHeight\r\n\r\n      if (!onresize) this.heights = new Array(data.length).fill(avgHeight)\r\n    },\r\n    async animation (start = false) {\r\n      let { avgHeight, animationIndex, mergedConfig, rowsData, animation, updater } = this\r\n\r\n      const { waitTime, carousel, rowNum } = mergedConfig\r\n\r\n      const rowLength = rowsData.length\r\n\r\n      if (rowNum >= rowLength) return\r\n\r\n      if (start) {\r\n        await new Promise(resolve => setTimeout(resolve, waitTime))\r\n        if (updater !== this.updater) return\r\n      }\r\n\r\n      const animationNum = carousel === 'single' ? 1 : rowNum\r\n\r\n      let rows = rowsData.slice(animationIndex)\r\n      rows.push(...rowsData.slice(0, animationIndex))\r\n\r\n      this.rows = rows.slice(0, rowNum + 1)\r\n      this.heights = new Array(rowLength).fill(avgHeight)\r\n\r\n      await new Promise(resolve => setTimeout(resolve, 300))\r\n      if (updater !== this.updater) return\r\n\r\n      this.heights.splice(0, animationNum, ...new Array(animationNum).fill(0))\r\n\r\n      animationIndex += animationNum\r\n\r\n      const back = animationIndex - rowLength\r\n      if (back >= 0) animationIndex = back\r\n\r\n      this.animationIndex = animationIndex\r\n      this.animationHandler = setTimeout(animation, waitTime - 300)\r\n    },\r\n    stopAnimation () {\r\n      const { animationHandler, updater } = this\r\n\r\n      this.updater = (updater + 1) % 999999\r\n\r\n      if (!animationHandler) return\r\n\r\n      clearTimeout(animationHandler)\r\n    },\r\n  },\r\n  destroyed () {\r\n    const { stopAnimation } = this\r\n\r\n    stopAnimation()\r\n  }\r\n}\r\n</script>"],"mappings":"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"}]}