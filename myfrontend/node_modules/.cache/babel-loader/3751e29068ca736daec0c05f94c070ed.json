{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\percentPond\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\percentPond\\src\\main.vue","mtime":1713594891423},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\babel.config.js","mtime":1713594890607},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdXVpZCB9IGZyb20gJy4uLy4uLy4uL3V0aWwvaW5kZXgnOwppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCc7CmltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJ0BqaWFtaW5naGkvYy1yZW5kZXIvbGliL3BsdWdpbi91dGlsJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEdlBlcmNlbnRQb25kJywKICBwcm9wczogewogICAgY29uZmlnOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gKHt9KQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIGNvbnN0IGlkID0gdXVpZCgpOwogICAgcmV0dXJuIHsKICAgICAgZ3JhZGllbnRJZDE6IGBwZXJjZW50LXBvbmQtZ3JhZGllbnRJZDEtJHtpZH1gLAogICAgICBncmFkaWVudElkMjogYHBlcmNlbnQtcG9uZC1ncmFkaWVudElkMi0ke2lkfWAsCiAgICAgIHdpZHRoOiAwLAogICAgICBoZWlnaHQ6IDAsCiAgICAgIGRlZmF1bHRDb25maWc6IHsKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFZhbHVlDQogICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9DQogICAgICAgICAqIEBkZWZhdWx0IHZhbHVlID0gMA0KICAgICAgICAgKi8KICAgICAgICB2YWx1ZTogMCwKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENvbG9ycyAoaGV4fHJnYnxyZ2JhfGNvbG9yIGtleXdvcmRzKQ0KICAgICAgICAgKiBAdHlwZSB7QXJyYXk8U3RyaW5nPn0NCiAgICAgICAgICogQGRlZmF1bHQgY29sb3JzID0gWycjMDBCQUZGJywgJyMzREU3QzknXQ0KICAgICAgICAgKiBAZXhhbXBsZSBjb2xvcnMgPSBbJyMwMDAnLCAncmdiKDAsIDAsIDApJywgJ3JnYmEoMCwgMCwgMCwgMSknLCAncmVkJ10NCiAgICAgICAgICovCiAgICAgICAgY29sb3JzOiBbJyMzREU3QzknLCAnIzAwQkFGRiddLAogICAgICAgIC8qKg0KICAgICAgICAgKiBAZGVzY3JpcHRpb24gQm9yZGVyIHdpZHRoDQogICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9DQogICAgICAgICAqIEBkZWZhdWx0IGJvcmRlcldpZHRoID0gMw0KICAgICAgICAgKi8KICAgICAgICBib3JkZXJXaWR0aDogMywKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIEdhcCBiZXR3ZWVuIGJvcmRlciBhbmQgcG9uZA0KICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQ0KICAgICAgICAgKiBAZGVmYXVsdCBib3JkZXJHYXAgPSAzDQogICAgICAgICAqLwogICAgICAgIGJvcmRlckdhcDogMywKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIExpbmUgZGFzaA0KICAgICAgICAgKiBAdHlwZSB7QXJyYXk8TnVtYmVyPn0NCiAgICAgICAgICogQGRlZmF1bHQgbGluZURhc2ggPSBbNSwgMV0NCiAgICAgICAgICovCiAgICAgICAgbGluZURhc2g6IFs1LCAxXSwKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFRleHQgY29sb3INCiAgICAgICAgICogQHR5cGUge1N0cmluZ30NCiAgICAgICAgICogQGRlZmF1bHQgdGV4dENvbG9yID0gJyNmZmYnDQogICAgICAgICAqLwogICAgICAgIHRleHRDb2xvcjogJyNmZmYnLAogICAgICAgIC8qKg0KICAgICAgICAgKiBAZGVzY3JpcHRpb24gQm9yZGVyIHJhZGl1cw0KICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQ0KICAgICAgICAgKiBAZGVmYXVsdCBib3JkZXJSYWRpdXMgPSA1DQogICAgICAgICAqLwogICAgICAgIGJvcmRlclJhZGl1czogNSwKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIExvY2FsIEdyYWRpZW50DQogICAgICAgICAqIEB0eXBlIHtCb29sZWFufQ0KICAgICAgICAgKiBAZGVmYXVsdCBsb2NhbEdyYWRpZW50ID0gZmFsc2UNCiAgICAgICAgICogQGV4YW1wbGUgbG9jYWxHcmFkaWVudCA9IGZhbHNlIHwgdHJ1ZQ0KICAgICAgICAgKi8KICAgICAgICBsb2NhbEdyYWRpZW50OiBmYWxzZSwKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIEZvcm1hdHRlcg0KICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQ0KICAgICAgICAgKiBAZGVmYXVsdCBmb3JtYXR0ZXIgPSAne3ZhbHVlfSUnDQogICAgICAgICAqLwogICAgICAgIGZvcm1hdHRlcjogJ3t2YWx1ZX0lJwogICAgICB9LAogICAgICBtZXJnZWRDb25maWc6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgcmVjdFdpZHRoKCkgewogICAgICBjb25zdCB7CiAgICAgICAgbWVyZ2VkQ29uZmlnLAogICAgICAgIHdpZHRoCiAgICAgIH0gPSB0aGlzOwogICAgICBpZiAoIW1lcmdlZENvbmZpZykgcmV0dXJuIDA7CiAgICAgIGNvbnN0IHsKICAgICAgICBib3JkZXJXaWR0aAogICAgICB9ID0gbWVyZ2VkQ29uZmlnOwogICAgICByZXR1cm4gd2lkdGggLSBib3JkZXJXaWR0aDsKICAgIH0sCiAgICByZWN0SGVpZ2h0KCkgewogICAgICBjb25zdCB7CiAgICAgICAgbWVyZ2VkQ29uZmlnLAogICAgICAgIGhlaWdodAogICAgICB9ID0gdGhpczsKICAgICAgaWYgKCFtZXJnZWRDb25maWcpIHJldHVybiAwOwogICAgICBjb25zdCB7CiAgICAgICAgYm9yZGVyV2lkdGgKICAgICAgfSA9IG1lcmdlZENvbmZpZzsKICAgICAgcmV0dXJuIGhlaWdodCAtIGJvcmRlcldpZHRoOwogICAgfSwKICAgIHBvaW50cygpIHsKICAgICAgY29uc3QgewogICAgICAgIG1lcmdlZENvbmZpZywKICAgICAgICB3aWR0aCwKICAgICAgICBoZWlnaHQKICAgICAgfSA9IHRoaXM7CiAgICAgIGNvbnN0IGhhbGZIZWlnaHQgPSBoZWlnaHQgLyAyOwogICAgICBpZiAoIW1lcmdlZENvbmZpZykgcmV0dXJuIGAwLCAke2hhbGZIZWlnaHR9IDAsICR7aGFsZkhlaWdodH1gOwogICAgICBjb25zdCB7CiAgICAgICAgYm9yZGVyV2lkdGgsCiAgICAgICAgYm9yZGVyR2FwLAogICAgICAgIHZhbHVlCiAgICAgIH0gPSBtZXJnZWRDb25maWc7CiAgICAgIGNvbnN0IHBvbHlsaW5lTGVuZ3RoID0gKHdpZHRoIC0gKGJvcmRlcldpZHRoICsgYm9yZGVyR2FwKSAqIDIpIC8gMTAwICogdmFsdWU7CiAgICAgIHJldHVybiBgCiAgICAgICAgJHtib3JkZXJXaWR0aCArIGJvcmRlckdhcH0sICR7aGFsZkhlaWdodH0KICAgICAgICAke2JvcmRlcldpZHRoICsgYm9yZGVyR2FwICsgcG9seWxpbmVMZW5ndGh9LCAke2hhbGZIZWlnaHQgKyAwLjAwMX0KICAgICAgYDsKICAgIH0sCiAgICBwb2x5bGluZVdpZHRoKCkgewogICAgICBjb25zdCB7CiAgICAgICAgbWVyZ2VkQ29uZmlnLAogICAgICAgIGhlaWdodAogICAgICB9ID0gdGhpczsKICAgICAgaWYgKCFtZXJnZWRDb25maWcpIHJldHVybiAwOwogICAgICBjb25zdCB7CiAgICAgICAgYm9yZGVyV2lkdGgsCiAgICAgICAgYm9yZGVyR2FwCiAgICAgIH0gPSBtZXJnZWRDb25maWc7CiAgICAgIHJldHVybiBoZWlnaHQgLSAoYm9yZGVyV2lkdGggKyBib3JkZXJHYXApICogMjsKICAgIH0sCiAgICBsaW5lYXJHcmFkaWVudCgpIHsKICAgICAgY29uc3QgewogICAgICAgIG1lcmdlZENvbmZpZwogICAgICB9ID0gdGhpczsKICAgICAgaWYgKCFtZXJnZWRDb25maWcpIHJldHVybiBbXTsKICAgICAgY29uc3QgewogICAgICAgIGNvbG9ycwogICAgICB9ID0gbWVyZ2VkQ29uZmlnOwogICAgICBjb25zdCBjb2xvck51bSA9IGNvbG9ycy5sZW5ndGg7CiAgICAgIGNvbnN0IGNvbG9yT2Zmc2V0R2FwID0gMTAwIC8gKGNvbG9yTnVtIC0gMSk7CiAgICAgIHJldHVybiBjb2xvcnMubWFwKChjLCBpKSA9PiBbY29sb3JPZmZzZXRHYXAgKiBpLCBjXSk7CiAgICB9LAogICAgcG9seWxpbmVHcmFkaWVudCgpIHsKICAgICAgY29uc3QgewogICAgICAgIGdyYWRpZW50SWQxLAogICAgICAgIGdyYWRpZW50SWQyLAogICAgICAgIG1lcmdlZENvbmZpZwogICAgICB9ID0gdGhpczsKICAgICAgaWYgKCFtZXJnZWRDb25maWcpIHJldHVybiBncmFkaWVudElkMjsKICAgICAgaWYgKG1lcmdlZENvbmZpZy5sb2NhbEdyYWRpZW50KSByZXR1cm4gZ3JhZGllbnRJZDE7CiAgICAgIHJldHVybiBncmFkaWVudElkMjsKICAgIH0sCiAgICBncmFkaWVudDJYUG9zKCkgewogICAgICBjb25zdCB7CiAgICAgICAgbWVyZ2VkQ29uZmlnCiAgICAgIH0gPSB0aGlzOwogICAgICBpZiAoIW1lcmdlZENvbmZpZykgcmV0dXJuICcxMDAlJzsKICAgICAgY29uc3QgewogICAgICAgIHZhbHVlCiAgICAgIH0gPSBtZXJnZWRDb25maWc7CiAgICAgIHJldHVybiBgJHsyMDAgLSB2YWx1ZX0lYDsKICAgIH0sCiAgICBkZXRhaWxzKCkgewogICAgICBjb25zdCB7CiAgICAgICAgbWVyZ2VkQ29uZmlnCiAgICAgIH0gPSB0aGlzOwogICAgICBpZiAoIW1lcmdlZENvbmZpZykgcmV0dXJuICcnOwogICAgICBjb25zdCB7CiAgICAgICAgdmFsdWUsCiAgICAgICAgZm9ybWF0dGVyCiAgICAgIH0gPSBtZXJnZWRDb25maWc7CiAgICAgIHJldHVybiBmb3JtYXR0ZXIucmVwbGFjZSgne3ZhbHVlfScsIHZhbHVlKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBjb25maWcoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBtZXJnZUNvbmZpZwogICAgICB9ID0gdGhpczsKICAgICAgbWVyZ2VDb25maWcoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGluaXQoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBpbml0V0gsCiAgICAgICAgY29uZmlnLAogICAgICAgIG1lcmdlQ29uZmlnCiAgICAgIH0gPSB0aGlzOwogICAgICBhd2FpdCBpbml0V0goKTsKICAgICAgaWYgKCFjb25maWcpIHJldHVybjsKICAgICAgbWVyZ2VDb25maWcoKTsKICAgIH0sCiAgICBhc3luYyBpbml0V0goKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICAkbmV4dFRpY2ssCiAgICAgICAgJHJlZnMKICAgICAgfSA9IHRoaXM7CiAgICAgIGF3YWl0ICRuZXh0VGljaygpOwogICAgICBjb25zdCB7CiAgICAgICAgY2xpZW50V2lkdGgsCiAgICAgICAgY2xpZW50SGVpZ2h0CiAgICAgIH0gPSAkcmVmc1sncGVyY2VudC1wb25kJ107CiAgICAgIHRoaXMud2lkdGggPSBjbGllbnRXaWR0aDsKICAgICAgdGhpcy5oZWlnaHQgPSBjbGllbnRIZWlnaHQ7CiAgICB9LAogICAgbWVyZ2VDb25maWcoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBjb25maWcsCiAgICAgICAgZGVmYXVsdENvbmZpZwogICAgICB9ID0gdGhpczsKICAgICAgdGhpcy5tZXJnZWRDb25maWcgPSBkZWVwTWVyZ2UoZGVlcENsb25lKGRlZmF1bHRDb25maWcsIHRydWUpLCBjb25maWcgfHwge30pOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIGNvbnN0IHsKICAgICAgaW5pdAogICAgfSA9IHRoaXM7CiAgICBpbml0KCk7CiAgfQp9Ow=="},{"version":3,"names":["uuid","deepMerge","deepClone","name","props","config","type","Object","default","data","id","gradientId1","gradientId2","width","height","defaultConfig","value","colors","borderWidth","borderGap","lineDash","textColor","borderRadius","localGradient","formatter","mergedConfig","computed","rectWidth","rectHeight","points","halfHeight","polylineLength","polylineWidth","linearGradient","colorNum","length","colorOffsetGap","map","c","i","polylineGradient","gradient2XPos","details","replace","watch","mergeConfig","methods","init","initWH","$nextTick","$refs","clientWidth","clientHeight","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/percentPond/src/main.vue"],"sourcesContent":["<template>\r\n  <div class=\"dv-percent-pond\" ref=\"percent-pond\">\r\n    <svg>\r\n      <defs>\r\n        <linearGradient :id=\"gradientId1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n          <stop v-for=\"lc in linearGradient\" :key=\"lc[0]\"\r\n            :offset=\"`${lc[0]}%`\"\r\n            :stop-color=\"lc[1]\" />\r\n        </linearGradient>\r\n\r\n        <linearGradient :id=\"gradientId2\" x1=\"0%\" y1=\"0%\" :x2=\"gradient2XPos\" y2=\"0%\">\r\n          <stop v-for=\"lc in linearGradient\" :key=\"lc[0]\"\r\n            :offset=\"`${lc[0]}%`\"\r\n            :stop-color=\"lc[1]\" />\r\n        </linearGradient>\r\n      </defs>\r\n      <rect\r\n        :x=\"mergedConfig ? mergedConfig.borderWidth / 2 : '0'\"\r\n        :y=\"mergedConfig ? mergedConfig.borderWidth / 2 : '0'\"\r\n        :rx=\"mergedConfig ? mergedConfig.borderRadius : '0'\"\r\n        :ry=\"mergedConfig ? mergedConfig.borderRadius : '0'\"\r\n        fill=\"transparent\"\r\n        :stroke-width=\"mergedConfig ? mergedConfig.borderWidth : '0'\"\r\n        :stroke=\"`url(#${gradientId1})`\"\r\n        :width=\"rectWidth > 0 ? rectWidth : 0\"\r\n        :height=\"rectHeight > 0 ? rectHeight : 0\"\r\n      />\r\n      <polyline\r\n        :stroke-width=\"polylineWidth\"\r\n        :stroke-dasharray=\"mergedConfig ? mergedConfig.lineDash.join(',') : '0'\"\r\n        :stroke=\"`url(#${polylineGradient})`\"\r\n        :points=\"points\"\r\n      />\r\n      <text\r\n        :stroke=\"mergedConfig ? mergedConfig.textColor : '#fff'\"\r\n        :fill=\"mergedConfig ? mergedConfig.textColor : '#fff'\"\r\n        :x=\"width / 2\"\r\n        :y=\"height / 2\"\r\n      >\r\n        {{ details }}\r\n      </text>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { uuid } from '../../../util/index'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvPercentPond',\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data () {\r\n    const id = uuid()\r\n    return {\r\n      gradientId1: `percent-pond-gradientId1-${id}`,\r\n      gradientId2: `percent-pond-gradientId2-${id}`,\r\n\r\n      width: 0,\r\n      height: 0,\r\n\r\n      defaultConfig: {\r\n        /**\r\n         * @description Value\r\n         * @type {Number}\r\n         * @default value = 0\r\n         */\r\n        value: 0,\r\n        /**\r\n         * @description Colors (hex|rgb|rgba|color keywords)\r\n         * @type {Array<String>}\r\n         * @default colors = ['#00BAFF', '#3DE7C9']\r\n         * @example colors = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\r\n         */\r\n        colors: ['#3DE7C9', '#00BAFF'],\r\n        /**\r\n         * @description Border width\r\n         * @type {Number}\r\n         * @default borderWidth = 3\r\n         */\r\n        borderWidth: 3,\r\n        /**\r\n         * @description Gap between border and pond\r\n         * @type {Number}\r\n         * @default borderGap = 3\r\n         */\r\n        borderGap: 3,\r\n        /**\r\n         * @description Line dash\r\n         * @type {Array<Number>}\r\n         * @default lineDash = [5, 1]\r\n         */\r\n        lineDash: [5, 1],\r\n        /**\r\n         * @description Text color\r\n         * @type {String}\r\n         * @default textColor = '#fff'\r\n         */\r\n        textColor: '#fff',\r\n        /**\r\n         * @description Border radius\r\n         * @type {Number}\r\n         * @default borderRadius = 5\r\n         */\r\n        borderRadius: 5,\r\n        /**\r\n         * @description Local Gradient\r\n         * @type {Boolean}\r\n         * @default localGradient = false\r\n         * @example localGradient = false | true\r\n         */\r\n        localGradient: false,\r\n        /**\r\n         * @description Formatter\r\n         * @type {String}\r\n         * @default formatter = '{value}%'\r\n         */\r\n        formatter: '{value}%'\r\n      },\r\n\r\n      mergedConfig: null\r\n    }\r\n  },\r\n  computed: {\r\n    rectWidth () {\r\n      const { mergedConfig, width } = this\r\n\r\n      if (!mergedConfig) return 0\r\n\r\n      const { borderWidth } = mergedConfig\r\n\r\n      return width - borderWidth\r\n    },\r\n    rectHeight () {\r\n      const { mergedConfig, height } = this\r\n\r\n      if (!mergedConfig) return 0\r\n\r\n      const { borderWidth } = mergedConfig\r\n\r\n      return height - borderWidth\r\n    },\r\n    points () {\r\n      const { mergedConfig, width, height } = this\r\n\r\n      const halfHeight = height / 2\r\n\r\n      if (!mergedConfig) return `0, ${halfHeight} 0, ${halfHeight}`\r\n\r\n      const { borderWidth, borderGap, value } = mergedConfig\r\n\r\n      const polylineLength = (width - (borderWidth + borderGap) * 2) / 100 * value\r\n\r\n      return `\r\n        ${borderWidth + borderGap}, ${halfHeight}\r\n        ${borderWidth + borderGap + polylineLength}, ${halfHeight + 0.001}\r\n      `\r\n    },\r\n    polylineWidth () {\r\n      const { mergedConfig, height } = this\r\n\r\n      if (!mergedConfig) return 0\r\n\r\n      const { borderWidth, borderGap } = mergedConfig\r\n\r\n      return height - (borderWidth + borderGap) * 2\r\n    },\r\n    linearGradient () {\r\n      const { mergedConfig } = this\r\n\r\n      if (!mergedConfig) return []\r\n\r\n      const { colors } = mergedConfig\r\n\r\n      const colorNum = colors.length\r\n\r\n      const colorOffsetGap = 100 / (colorNum - 1)\r\n\r\n      return colors.map((c, i) => [colorOffsetGap * i, c])\r\n    },\r\n    polylineGradient () {\r\n      const { gradientId1, gradientId2, mergedConfig } = this\r\n\r\n      if (!mergedConfig) return gradientId2\r\n\r\n      if (mergedConfig.localGradient) return gradientId1\r\n\r\n      return gradientId2\r\n    },\r\n    gradient2XPos () {\r\n      const { mergedConfig } = this\r\n\r\n      if (!mergedConfig) return '100%'\r\n\r\n      const { value } = mergedConfig\r\n\r\n      return `${200 - value}%`\r\n    },\r\n    details () {\r\n      const { mergedConfig } = this\r\n\r\n      if (!mergedConfig) return ''\r\n\r\n      const { value, formatter } = mergedConfig\r\n\r\n      return formatter.replace('{value}', value)\r\n    }\r\n  },\r\n  watch: {\r\n    config () {\r\n      const { mergeConfig } = this\r\n\r\n      mergeConfig()\r\n    }\r\n  },\r\n  methods: {\r\n    async init () {\r\n      const { initWH, config, mergeConfig } = this\r\n\r\n      await initWH()\r\n\r\n      if (!config) return\r\n\r\n      mergeConfig()\r\n    },\r\n    async initWH () {\r\n      const { $nextTick, $refs } = this\r\n\r\n      await $nextTick()\r\n\r\n      const { clientWidth, clientHeight } = $refs['percent-pond']\r\n\r\n      this.width = clientWidth\r\n      this.height = clientHeight\r\n    },\r\n    mergeConfig () {\r\n      const { config, defaultConfig } = this\r\n\r\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n    }\r\n  },\r\n  mounted () {\r\n    const { init } = this\r\n\r\n    init()\r\n  }\r\n}\r\n</script>"],"mappings":"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"}]}