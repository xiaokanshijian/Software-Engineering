{"remainingRequest":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\@jiaminghi\\data-view\\lib\\components\\activeRingChart\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\@jiaminghi\\data-view\\lib\\components\\activeRingChart\\src\\main.vue","mtime":1704126247435},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\babel.config.js","mtime":1694499945810},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704126242450},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\babel-loader\\lib\\index.js","mtime":1704126243607},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704126242450},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\vue-loader\\lib\\index.js","mtime":1704126244757}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Charts","dvDigitalFlop","deepMerge","deepClone","name","components","props","config","type","Object","default","data","defaultConfig","radius","activeRadius","value","lineWidth","activeTimeGap","color","digitalFlopStyle","fontSize","fill","digitalFlopToFixed","digitalFlopUnit","animationCurve","animationFrame","showOriginValue","mergedConfig","chart","activeIndex","animationHandler","computed","digitalFlop","map","displayValue","sum","reduce","all","v","percent","parseFloat","content","number","style","toFixed","ringName","watch","mergeConfig","setRingOption","clearTimeout","methods","init","initChart","$refs","getRingOption","ringAnimation","option","setOption","getRealRadius","forEach","dataItem","series","outsideLabel","show","active","maxRadius","Math","min","render","area","halfLineWidth","realRadius","parseInt","insideRadius","outSideRadius","i","setTimeout","foo","length","mounted","beforeDestroy"],"sources":["node_modules/@jiaminghi/data-view/lib/components/activeRingChart/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-active-ring-chart\">\n    <div class=\"active-ring-chart-container\" ref=\"active-ring-chart\" />\n    <div class=\"active-ring-info\">\n      <dv-digital-flop :config=\"digitalFlop\" />\n      <div class=\"active-ring-name\" :style=\"fontSize\">{{ ringName }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Charts from '@jiaminghi/charts'\n\nimport dvDigitalFlop from '../../digitalFlop/src/main.vue'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvActiveRingChart',\n  components: {\n    dvDigitalFlop\n  },\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      defaultConfig: {\n        /**\n         * @description Ring radius\n         * @type {String|Number}\n         * @default radius = '50%'\n         * @example radius = '50%' | 100\n         */\n        radius: '50%',\n        /**\n         * @description Active ring radius\n         * @type {String|Number}\n         * @default activeRadius = '55%'\n         * @example activeRadius = '55%' | 110\n         */\n        activeRadius: '55%',\n        /**\n         * @description Ring data\n         * @type {Array<Object>}\n         * @default data = [{ name: '', value: 0 }]\n         */\n        data: [{ name: '', value: 0 }],\n        /**\n         * @description Ring line width\n         * @type {Number}\n         * @default lineWidth = 20\n         */\n        lineWidth: 20,\n        /**\n         * @description Active time gap (ms)\n         * @type {Number}\n         * @default activeTimeGap = 3000\n         */\n        activeTimeGap: 3000,\n        /**\n         * @description Ring color (hex|rgb|rgba|color keywords)\n         * @type {Array<String>}\n         * @default color = [Charts Default Color]\n         * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n         */\n        color: [],\n        /**\n         * @description Digital flop style\n         * @type {Object}\n         */\n        digitalFlopStyle: {\n          fontSize: 25,\n          fill: '#fff'\n        },\n        /**\n         * @description Digital flop toFixed\n         * @type {Number}\n         */\n        digitalFlopToFixed: 0,\n        /**\n         * @description Digital flop unit\n         * @type {String}\n         */\n        digitalFlopUnit: '',\n        /**\n         * @description CRender animationCurve\n         * @type {String}\n         * @default animationCurve = 'easeOutCubic'\n         */\n        animationCurve: 'easeOutCubic',\n        /**\n         * @description CRender animationFrame\n         * @type {String}\n         * @default animationFrame = 50\n         */\n        animationFrame: 50,\n        /**\n         * @description showOriginValue\n         * @type {Boolean}\n         * @default showOriginValue = false\n         */\n        showOriginValue: false\n      },\n\n      mergedConfig: null,\n\n      chart: null,\n\n      activeIndex: 0,\n\n      animationHandler: ''\n    }\n  },\n  computed: {\n    digitalFlop() {\n      const { mergedConfig, activeIndex } = this\n\n      if (!mergedConfig) return {}\n\n      const {\n        digitalFlopStyle,\n        digitalFlopToFixed,\n        data,\n        showOriginValue,\n        digitalFlopUnit\n      } = mergedConfig\n\n      const value = data.map(({ value }) => value)\n\n      let displayValue\n\n      if (showOriginValue) {\n        displayValue = value[activeIndex]\n      } else {\n        const sum = value.reduce((all, v) => all + v, 0)\n\n        const percent = parseFloat((value[activeIndex] / sum) * 100) || 0\n\n        displayValue = percent\n      }\n\n      return {\n        content: showOriginValue ? `{nt}${digitalFlopUnit}` : `{nt}${digitalFlopUnit || '%'}`,\n        number: [displayValue],\n        style: digitalFlopStyle,\n        toFixed: digitalFlopToFixed\n      }\n    },\n    ringName() {\n      const { mergedConfig, activeIndex } = this\n\n      if (!mergedConfig) return ''\n\n      return mergedConfig.data[activeIndex].name\n    },\n    fontSize() {\n      const { mergedConfig } = this\n\n      if (!mergedConfig) return ''\n\n      return `font-size: ${mergedConfig.digitalFlopStyle.fontSize}px;`\n    }\n  },\n  watch: {\n    config() {\n      const { animationHandler, mergeConfig, setRingOption } = this\n\n      clearTimeout(animationHandler)\n\n      this.activeIndex = 0\n\n      mergeConfig()\n\n      setRingOption()\n    }\n  },\n  methods: {\n    init() {\n      const { initChart, mergeConfig, setRingOption } = this\n\n      initChart()\n\n      mergeConfig()\n\n      setRingOption()\n    },\n    initChart() {\n      const { $refs } = this\n\n      this.chart = new Charts($refs['active-ring-chart'])\n    },\n    mergeConfig() {\n      const { defaultConfig, config } = this\n\n      this.mergedConfig = deepMerge(\n        deepClone(defaultConfig, true),\n        config || {}\n      )\n    },\n    setRingOption() {\n      const { getRingOption, chart, ringAnimation } = this\n\n      const option = getRingOption()\n\n      chart.setOption(option, true)\n\n      ringAnimation()\n    },\n    getRingOption() {\n      const { mergedConfig, getRealRadius } = this\n\n      const radius = getRealRadius()\n\n      mergedConfig.data.forEach(dataItem => {\n        dataItem.radius = radius\n      })\n\n      return {\n        series: [\n          {\n            type: 'pie',\n            ...mergedConfig,\n            outsideLabel: {\n              show: false\n            }\n          }\n        ],\n        color: mergedConfig.color\n      }\n    },\n    getRealRadius(active = false) {\n      const { mergedConfig, chart } = this\n\n      const { radius, activeRadius, lineWidth } = mergedConfig\n\n      const maxRadius = Math.min(...chart.render.area) / 2\n\n      const halfLineWidth = lineWidth / 2\n\n      let realRadius = active ? activeRadius : radius\n\n      if (typeof realRadius !== 'number')\n        realRadius = (parseInt(realRadius) / 100) * maxRadius\n\n      const insideRadius = realRadius - halfLineWidth\n      const outSideRadius = realRadius + halfLineWidth\n\n      return [insideRadius, outSideRadius]\n    },\n    ringAnimation() {\n      let { activeIndex, getRingOption, chart, getRealRadius } = this\n\n      const radius = getRealRadius()\n      const active = getRealRadius(true)\n\n      const option = getRingOption()\n\n      const { data } = option.series[0]\n\n      data.forEach((dataItem, i) => {\n        if (i === activeIndex) {\n          dataItem.radius = active\n        } else {\n          dataItem.radius = radius\n        }\n      })\n\n      chart.setOption(option, true)\n\n      const { activeTimeGap } = option.series[0]\n\n      this.animationHandler = setTimeout(foo => {\n        activeIndex += 1\n\n        if (activeIndex >= data.length) activeIndex = 0\n\n        this.activeIndex = activeIndex\n\n        this.ringAnimation()\n      }, activeTimeGap)\n    }\n  },\n  mounted() {\n    const { init } = this\n\n    init()\n  },\n  beforeDestroy() {\n    const { animationHandler } = this\n\n    clearTimeout(animationHandler)\n  }\n}\n</script>"],"mappings":"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"}]}