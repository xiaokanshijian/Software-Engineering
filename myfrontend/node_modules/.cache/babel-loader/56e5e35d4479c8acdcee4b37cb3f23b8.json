{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration1\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration1\\src\\main.vue","mtime":1713594891407},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\babel.config.js","mtime":1713594890607},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlLmpzIjsKaW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0R2RGVjb3JhdGlvbjEnLAogIG1peGluczogW2F1dG9SZXNpemVdLAogIHByb3BzOiB7CiAgICBjb2xvcjogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gW10KICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICBjb25zdCBwb2ludFNpZGVMZW5ndGggPSAyLjU7CiAgICByZXR1cm4gewogICAgICByZWY6ICdkZWNvcmF0aW9uLTEnLAogICAgICBzdmdXSDogWzIwMCwgNTBdLAogICAgICBzdmdTY2FsZTogWzEsIDFdLAogICAgICByb3dOdW06IDQsCiAgICAgIHJvd1BvaW50czogMjAsCiAgICAgIHBvaW50U2lkZUxlbmd0aCwKICAgICAgaGFsZlBvaW50U2lkZUxlbmd0aDogcG9pbnRTaWRlTGVuZ3RoIC8gMiwKICAgICAgcG9pbnRzOiBbXSwKICAgICAgcmVjdHM6IFtdLAogICAgICBkZWZhdWx0Q29sb3I6IFsnI2ZmZicsICcjMGRlN2MyJ10sCiAgICAgIG1lcmdlZENvbG9yOiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjb2xvcigpIHsKICAgICAgY29uc3QgewogICAgICAgIG1lcmdlQ29sb3IKICAgICAgfSA9IHRoaXM7CiAgICAgIG1lcmdlQ29sb3IoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFmdGVyQXV0b1Jlc2l6ZU1peGluSW5pdCgpIHsKICAgICAgY29uc3QgewogICAgICAgIGNhbGNTVkdEYXRhCiAgICAgIH0gPSB0aGlzOwogICAgICBjYWxjU1ZHRGF0YSgpOwogICAgfSwKICAgIGNhbGNTVkdEYXRhKCkgewogICAgICBjb25zdCB7CiAgICAgICAgY2FsY1BvaW50c1Bvc2l0aW9uLAogICAgICAgIGNhbGNSZWN0c1Bvc2l0aW9uLAogICAgICAgIGNhbGNTY2FsZQogICAgICB9ID0gdGhpczsKICAgICAgY2FsY1BvaW50c1Bvc2l0aW9uKCk7CiAgICAgIGNhbGNSZWN0c1Bvc2l0aW9uKCk7CiAgICAgIGNhbGNTY2FsZSgpOwogICAgfSwKICAgIGNhbGNQb2ludHNQb3NpdGlvbigpIHsKICAgICAgY29uc3QgewogICAgICAgIHN2Z1dILAogICAgICAgIHJvd051bSwKICAgICAgICByb3dQb2ludHMKICAgICAgfSA9IHRoaXM7CiAgICAgIGNvbnN0IFt3LCBoXSA9IHN2Z1dIOwogICAgICBjb25zdCBob3Jpem9udGFsR2FwID0gdyAvIChyb3dQb2ludHMgKyAxKTsKICAgICAgY29uc3QgdmVydGljYWxHYXAgPSBoIC8gKHJvd051bSArIDEpOwogICAgICBsZXQgcG9pbnRzID0gbmV3IEFycmF5KHJvd051bSkuZmlsbCgwKS5tYXAoKGZvbywgaSkgPT4gbmV3IEFycmF5KHJvd1BvaW50cykuZmlsbCgwKS5tYXAoKGZvbywgaikgPT4gW2hvcml6b250YWxHYXAgKiAoaiArIDEpLCB2ZXJ0aWNhbEdhcCAqIChpICsgMSldKSk7CiAgICAgIHRoaXMucG9pbnRzID0gcG9pbnRzLnJlZHVjZSgoYWxsLCBpdGVtKSA9PiBbLi4uYWxsLCAuLi5pdGVtXSwgW10pOwogICAgfSwKICAgIGNhbGNSZWN0c1Bvc2l0aW9uKCkgewogICAgICBjb25zdCB7CiAgICAgICAgcG9pbnRzLAogICAgICAgIHJvd1BvaW50cwogICAgICB9ID0gdGhpczsKICAgICAgY29uc3QgcmVjdDEgPSBwb2ludHNbcm93UG9pbnRzICogMiAtIDFdOwogICAgICBjb25zdCByZWN0MiA9IHBvaW50c1tyb3dQb2ludHMgKiAyIC0gM107CiAgICAgIHRoaXMucmVjdHMgPSBbcmVjdDEsIHJlY3QyXTsKICAgIH0sCiAgICBjYWxjU2NhbGUoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICB3aWR0aCwKICAgICAgICBoZWlnaHQsCiAgICAgICAgc3ZnV0gKICAgICAgfSA9IHRoaXM7CiAgICAgIGNvbnN0IFt3LCBoXSA9IHN2Z1dIOwogICAgICB0aGlzLnN2Z1NjYWxlID0gW3dpZHRoIC8gdywgaGVpZ2h0IC8gaF07CiAgICB9LAogICAgb25SZXNpemUoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBjYWxjU1ZHRGF0YQogICAgICB9ID0gdGhpczsKICAgICAgY2FsY1NWR0RhdGEoKTsKICAgIH0sCiAgICBtZXJnZUNvbG9yKCkgewogICAgICBjb25zdCB7CiAgICAgICAgY29sb3IsCiAgICAgICAgZGVmYXVsdENvbG9yCiAgICAgIH0gPSB0aGlzOwogICAgICB0aGlzLm1lcmdlZENvbG9yID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29sb3IsIHRydWUpLCBjb2xvciB8fCBbXSk7CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgY29uc3QgewogICAgICBtZXJnZUNvbG9yCiAgICB9ID0gdGhpczsKICAgIG1lcmdlQ29sb3IoKTsKICB9Cn07"},{"version":3,"names":["autoResize","deepMerge","deepClone","name","mixins","props","color","type","Array","default","data","pointSideLength","ref","svgWH","svgScale","rowNum","rowPoints","halfPointSideLength","points","rects","defaultColor","mergedColor","watch","mergeColor","methods","afterAutoResizeMixinInit","calcSVGData","calcPointsPosition","calcRectsPosition","calcScale","w","h","horizontalGap","verticalGap","fill","map","foo","i","j","reduce","all","item","rect1","rect2","width","height","onResize","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/decoration1/src/main.vue"],"sourcesContent":["<template>\r\n  <div class=\"dv-decoration-1\" :ref=\"ref\">\r\n    <svg :width=\"`${svgWH[0]}px`\" :height=\"`${svgWH[1]}px`\" :style=\"`transform:scale(${svgScale[0]},${svgScale[1]});`\">\r\n\r\n      <template\r\n        v-for=\"(point, i) in points\"\r\n      >\r\n        <rect\r\n          v-if=\"Math.random() > 0.6\"\r\n          :key=\"i\"\r\n          :fill=\"mergedColor[0]\"\r\n          :x=\"point[0] - halfPointSideLength\"\r\n          :y=\"point[1] - halfPointSideLength\"\r\n          :width=\"pointSideLength\"\r\n          :height=\"pointSideLength\"\r\n        >\r\n          <animate\r\n            v-if=\"Math.random() > 0.6\"\r\n            attributeName=\"fill\"\r\n            :values=\"`${mergedColor[0]};transparent`\"\r\n            dur=\"1s\"\r\n            :begin=\"Math.random() * 2\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </rect>\r\n      </template>\r\n\r\n      <rect\r\n        v-if=\"rects[0]\"\r\n        :fill=\"mergedColor[1]\"\r\n        :x=\"rects[0][0] - pointSideLength\"\r\n        :y=\"rects[0][1] - pointSideLength\"\r\n        :width=\"pointSideLength * 2\"\r\n        :height=\"pointSideLength * 2\"\r\n      >\r\n        <animate\r\n          attributeName=\"width\"\r\n          :values=\"`0;${pointSideLength * 2}`\"\r\n          dur=\"2s\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"height\"\r\n          :values=\"`0;${pointSideLength * 2}`\"\r\n          dur=\"2s\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"x\"\r\n          :values=\"`${rects[0][0]};${rects[0][0] - pointSideLength}`\"\r\n          dur=\"2s\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"y\"\r\n          :values=\"`${rects[0][1]};${rects[0][1] - pointSideLength}`\"\r\n          dur=\"2s\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </rect>\r\n\r\n      <rect\r\n        v-if=\"rects[1]\"\r\n        :fill=\"mergedColor[1]\"\r\n        :x=\"rects[1][0] - 40\"\r\n        :y=\"rects[1][1] - pointSideLength\"\r\n        :width=\"40\"\r\n        :height=\"pointSideLength * 2\"\r\n      >\r\n        <animate\r\n          attributeName=\"width\"\r\n          values=\"0;40;0\"\r\n          dur=\"2s\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"x\"\r\n          :values=\"`${rects[1][0]};${rects[1][0] - 40};${rects[1][0]}`\"\r\n          dur=\"2s\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </rect>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvDecoration1',\r\n  mixins: [autoResize],\r\n  props: {\r\n    color: {\r\n      type: Array,\r\n      default: () => ([])\r\n    }\r\n  },\r\n  data () {\r\n    const pointSideLength = 2.5\r\n\r\n    return {\r\n      ref: 'decoration-1',\r\n\r\n      svgWH: [200, 50],\r\n\r\n      svgScale: [1, 1],\r\n\r\n      rowNum: 4,\r\n      rowPoints: 20,\r\n\r\n      pointSideLength,\r\n      halfPointSideLength: pointSideLength / 2,\r\n\r\n      points: [],\r\n\r\n      rects: [],\r\n\r\n      defaultColor: ['#fff', '#0de7c2'],\r\n\r\n      mergedColor: []\r\n    }\r\n  },\r\n  watch: {\r\n    color () {\r\n      const { mergeColor } = this\r\n\r\n      mergeColor()\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    calcSVGData () {\r\n      const { calcPointsPosition, calcRectsPosition, calcScale } = this\r\n\r\n      calcPointsPosition()\r\n\r\n      calcRectsPosition()\r\n\r\n      calcScale()\r\n    },\r\n    calcPointsPosition () {\r\n      const { svgWH, rowNum, rowPoints } = this\r\n\r\n      const [w, h] = svgWH\r\n\r\n      const horizontalGap = w / (rowPoints + 1)\r\n      const verticalGap = h / (rowNum + 1)\r\n\r\n      let points = new Array(rowNum).fill(0).map((foo, i) =>\r\n        new Array(rowPoints).fill(0).map((foo, j) => [\r\n          horizontalGap * (j + 1), verticalGap * (i + 1)\r\n        ]))\r\n\r\n      this.points = points.reduce((all, item) => [...all, ...item], [])\r\n    },\r\n    calcRectsPosition () {\r\n      const { points, rowPoints } = this\r\n\r\n      const rect1 = points[rowPoints * 2 - 1]\r\n      const rect2 = points[rowPoints * 2 - 3]\r\n\r\n      this.rects = [rect1, rect2]\r\n    },\r\n    calcScale () {\r\n      const { width, height, svgWH } = this\r\n\r\n      const [w, h] = svgWH\r\n\r\n      this.svgScale = [width / w, height / h]\r\n    },\r\n    onResize () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    mergeColor () {\r\n      const { color, defaultColor } = this\r\n\r\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\r\n    }\r\n  },\r\n  mounted () {\r\n    const { mergeColor } = this\r\n\r\n    mergeColor()\r\n  }\r\n}\r\n</script>"],"mappings":";AAuFA,OAAAA,UAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAJ,UAAA;EACAK,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,EAAAA,CAAA;IACA;EACA;EACAC,KAAA;IACA,MAAAC,eAAA;IAEA;MACAC,GAAA;MAEAC,KAAA;MAEAC,QAAA;MAEAC,MAAA;MACAC,SAAA;MAEAL,eAAA;MACAM,mBAAA,EAAAN,eAAA;MAEAO,MAAA;MAEAC,KAAA;MAEAC,YAAA;MAEAC,WAAA;IACA;EACA;EACAC,KAAA;IACAhB,MAAA;MACA;QAAAiB;MAAA;MAEAA,UAAA;IACA;EACA;EACAC,OAAA;IACAC,yBAAA;MACA;QAAAC;MAAA;MAEAA,WAAA;IACA;IACAA,YAAA;MACA;QAAAC,kBAAA;QAAAC,iBAAA;QAAAC;MAAA;MAEAF,kBAAA;MAEAC,iBAAA;MAEAC,SAAA;IACA;IACAF,mBAAA;MACA;QAAAd,KAAA;QAAAE,MAAA;QAAAC;MAAA;MAEA,OAAAc,CAAA,EAAAC,CAAA,IAAAlB,KAAA;MAEA,MAAAmB,aAAA,GAAAF,CAAA,IAAAd,SAAA;MACA,MAAAiB,WAAA,GAAAF,CAAA,IAAAhB,MAAA;MAEA,IAAAG,MAAA,OAAAV,KAAA,CAAAO,MAAA,EAAAmB,IAAA,IAAAC,GAAA,EAAAC,GAAA,EAAAC,CAAA,KACA,IAAA7B,KAAA,CAAAQ,SAAA,EAAAkB,IAAA,IAAAC,GAAA,EAAAC,GAAA,EAAAE,CAAA,MACAN,aAAA,IAAAM,CAAA,OAAAL,WAAA,IAAAI,CAAA,MACA;MAEA,KAAAnB,MAAA,GAAAA,MAAA,CAAAqB,MAAA,EAAAC,GAAA,EAAAC,IAAA,SAAAD,GAAA,KAAAC,IAAA;IACA;IACAb,kBAAA;MACA;QAAAV,MAAA;QAAAF;MAAA;MAEA,MAAA0B,KAAA,GAAAxB,MAAA,CAAAF,SAAA;MACA,MAAA2B,KAAA,GAAAzB,MAAA,CAAAF,SAAA;MAEA,KAAAG,KAAA,IAAAuB,KAAA,EAAAC,KAAA;IACA;IACAd,UAAA;MACA;QAAAe,KAAA;QAAAC,MAAA;QAAAhC;MAAA;MAEA,OAAAiB,CAAA,EAAAC,CAAA,IAAAlB,KAAA;MAEA,KAAAC,QAAA,IAAA8B,KAAA,GAAAd,CAAA,EAAAe,MAAA,GAAAd,CAAA;IACA;IACAe,SAAA;MACA;QAAApB;MAAA;MAEAA,WAAA;IACA;IACAH,WAAA;MACA;QAAAjB,KAAA;QAAAc;MAAA;MAEA,KAAAC,WAAA,GAAApB,SAAA,CAAAC,SAAA,CAAAkB,YAAA,SAAAd,KAAA;IACA;EACA;EACAyC,QAAA;IACA;MAAAxB;IAAA;IAEAA,UAAA;EACA;AACA"}]}