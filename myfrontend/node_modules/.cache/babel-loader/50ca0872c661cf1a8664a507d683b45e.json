{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration12\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration12\\src\\main.vue","mtime":1713594891407},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\babel.config.js","mtime":1713594890607},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmltcG9ydCB7IHV1aWQgfSBmcm9tICcuLi8uLi8uLi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcE1lcmdlIH0gZnJvbSAnQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwvaW5kZXgnOwppbXBvcnQgeyBkZWVwQ2xvbmUsIGdldENpcmNsZVJhZGlhblBvaW50IH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwppbXBvcnQgeyBmYWRlIH0gZnJvbSAnQGppYW1pbmdoaS9jb2xvcic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRHZEZWNvcmF0aW9uMTInLAogIG1peGluczogW2F1dG9SZXNpemVdLAogIHByb3BzOiB7CiAgICBjb2xvcjogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gW10KICAgIH0sCiAgICAvKioNCiAgICAgKiBAZGVzY3JpcHRpb24gU2NhbiBhbmltYXRpb24gZHVyDQogICAgICovCiAgICBzY2FuRHVyOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMwogICAgfSwKICAgIC8qKg0KICAgICAqIEBkZXNjcmlwdGlvbiBIYWxvIGFuaW1hdGlvbiBkdXINCiAgICAgKi8KICAgIGhhbG9EdXI6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAyCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgY29uc3QgaWQgPSB1dWlkKCk7CiAgICByZXR1cm4gewogICAgICByZWY6ICdkZWNvcmF0aW9uLTEyJywKICAgICAgZ0lkOiBgZGVjb3JhdGlvbi0xMi1nLSR7aWR9YCwKICAgICAgZ3JhZGllbnRJZDogYGRlY29yYXRpb24tMTItZ3JhZGllbnQtJHtpZH1gLAogICAgICBkZWZhdWx0Q29sb3I6IFsnIzI3ODNjZScsICcjMmNmN2ZlJ10sCiAgICAgIG1lcmdlZENvbG9yOiBbXSwKICAgICAgcGF0aEQ6IFtdLAogICAgICBwYXRoQ29sb3I6IFtdLAogICAgICBjaXJjbGVSOiBbXSwKICAgICAgc3BsaXRMaW5lUG9pbnRzOiBbXSwKICAgICAgYXJjRDogW10sCiAgICAgIHNlZ21lbnQ6IDMwLAogICAgICBzZWN0b3JBbmdsZTogTWF0aC5QSSAvIDMsCiAgICAgIHJpbmdOdW06IDMsCiAgICAgIHJpbmdXaWR0aDogMSwKICAgICAgc2hvd1NwbGl0TGluZTogdHJ1ZQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjb2xvcigpIHsKICAgICAgY29uc3QgewogICAgICAgIG1lcmdlQ29sb3IKICAgICAgfSA9IHRoaXM7CiAgICAgIG1lcmdlQ29sb3IoKTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICB4KCkgewogICAgICBjb25zdCB7CiAgICAgICAgd2lkdGgKICAgICAgfSA9IHRoaXM7CiAgICAgIHJldHVybiB3aWR0aCAvIDI7CiAgICB9LAogICAgeSgpIHsKICAgICAgY29uc3QgewogICAgICAgIGhlaWdodAogICAgICB9ID0gdGhpczsKICAgICAgcmV0dXJuIGhlaWdodCAvIDI7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0KCkgewogICAgICBjb25zdCB7CiAgICAgICAgbWVyZ2VDb2xvciwKICAgICAgICBjYWxjUGF0aEQsCiAgICAgICAgY2FsY1BhdGhDb2xvciwKICAgICAgICBjYWxjQ2lyY2xlUiwKICAgICAgICBjYWxjU3BsaXRMaW5lUG9pbnRzLAogICAgICAgIGNhbGNBcmNECiAgICAgIH0gPSB0aGlzOwogICAgICBtZXJnZUNvbG9yKCk7CiAgICAgIGNhbGNQYXRoRCgpOwogICAgICBjYWxjUGF0aENvbG9yKCk7CiAgICAgIGNhbGNDaXJjbGVSKCk7CiAgICAgIGNhbGNTcGxpdExpbmVQb2ludHMoKTsKICAgICAgY2FsY0FyY0QoKTsKICAgIH0sCiAgICBtZXJnZUNvbG9yKCkgewogICAgICBjb25zdCB7CiAgICAgICAgY29sb3IsCiAgICAgICAgZGVmYXVsdENvbG9yCiAgICAgIH0gPSB0aGlzOwogICAgICB0aGlzLm1lcmdlZENvbG9yID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29sb3IsIHRydWUpLCBjb2xvciB8fCBbXSk7CiAgICB9LAogICAgY2FsY1BhdGhEKCkgewogICAgICBjb25zdCB7CiAgICAgICAgeCwKICAgICAgICB5LAogICAgICAgIHdpZHRoLAogICAgICAgIHNlZ21lbnQsCiAgICAgICAgc2VjdG9yQW5nbGUKICAgICAgfSA9IHRoaXM7CiAgICAgIGNvbnN0IHN0YXJ0QW5nbGUgPSAtTWF0aC5QSSAvIDI7CiAgICAgIGNvbnN0IGFuZ2xlR2FwID0gc2VjdG9yQW5nbGUgLyBzZWdtZW50OwogICAgICBjb25zdCByID0gd2lkdGggLyA0OwogICAgICBsZXQgbGFzdEVuZFBvaW50cyA9IGdldENpcmNsZVJhZGlhblBvaW50KHgsIHksIHIsIHN0YXJ0QW5nbGUpOwogICAgICB0aGlzLnBhdGhEID0gbmV3IEFycmF5KHNlZ21lbnQpLmZpbGwoJycpLm1hcCgoXywgaSkgPT4gewogICAgICAgIGNvbnN0IGVuZFBvaW50cyA9IGdldENpcmNsZVJhZGlhblBvaW50KHgsIHksIHIsIHN0YXJ0QW5nbGUgLSAoaSArIDEpICogYW5nbGVHYXApLm1hcChfID0+IF8udG9GaXhlZCg1KSk7CiAgICAgICAgY29uc3QgZCA9IGBNJHtsYXN0RW5kUG9pbnRzLmpvaW4oJywnKX0gQSR7cn0sICR7cn0gMCAwIDAgJHtlbmRQb2ludHMuam9pbignLCcpfWA7CiAgICAgICAgbGFzdEVuZFBvaW50cyA9IGVuZFBvaW50czsKICAgICAgICByZXR1cm4gZDsKICAgICAgfSk7CiAgICB9LAogICAgY2FsY1BhdGhDb2xvcigpIHsKICAgICAgY29uc3QgewogICAgICAgIG1lcmdlZENvbG9yOiBbY29sb3JdLAogICAgICAgIHNlZ21lbnQKICAgICAgfSA9IHRoaXM7CiAgICAgIGNvbnN0IGNvbG9yR2FwID0gMTAwIC8gKHNlZ21lbnQgLSAxKTsKICAgICAgdGhpcy5wYXRoQ29sb3IgPSBuZXcgQXJyYXkoc2VnbWVudCkuZmlsbChjb2xvcikubWFwKChfLCBpKSA9PiBmYWRlKGNvbG9yLCAxMDAgLSBpICogY29sb3JHYXApKTsKICAgIH0sCiAgICBjYWxjQ2lyY2xlUigpIHsKICAgICAgY29uc3QgewogICAgICAgIHNlZ21lbnQsCiAgICAgICAgcmluZ051bSwKICAgICAgICB3aWR0aCwKICAgICAgICByaW5nV2lkdGgKICAgICAgfSA9IHRoaXM7CiAgICAgIGNvbnN0IHJhZGl1c0dhcCA9ICh3aWR0aCAvIDIgLSByaW5nV2lkdGggLyAyKSAvIHJpbmdOdW07CiAgICAgIHRoaXMuY2lyY2xlUiA9IG5ldyBBcnJheShyaW5nTnVtKS5maWxsKDApLm1hcCgoXywgaSkgPT4gcmFkaXVzR2FwICogKGkgKyAxKSk7CiAgICB9LAogICAgY2FsY1NwbGl0TGluZVBvaW50cygpIHsKICAgICAgY29uc3QgewogICAgICAgIHgsCiAgICAgICAgeSwKICAgICAgICB3aWR0aAogICAgICB9ID0gdGhpczsKICAgICAgY29uc3QgYW5nbGVHYXAgPSBNYXRoLlBJIC8gNjsKICAgICAgY29uc3QgciA9IHdpZHRoIC8gMjsKICAgICAgdGhpcy5zcGxpdExpbmVQb2ludHMgPSBuZXcgQXJyYXkoNikuZmlsbCgnJykubWFwKChfLCBpKSA9PiB7CiAgICAgICAgY29uc3Qgc3RhcnRBbmdsZSA9IGFuZ2xlR2FwICogKGkgKyAxKTsKICAgICAgICBjb25zdCBlbmRBbmdsZSA9IHN0YXJ0QW5nbGUgKyBNYXRoLlBJOwogICAgICAgIGNvbnN0IHN0YXJ0UG9pbnQgPSBnZXRDaXJjbGVSYWRpYW5Qb2ludCh4LCB5LCByLCBzdGFydEFuZ2xlKTsKICAgICAgICBjb25zdCBlbmRQb2ludCA9IGdldENpcmNsZVJhZGlhblBvaW50KHgsIHksIHIsIGVuZEFuZ2xlKTsKICAgICAgICByZXR1cm4gYCR7c3RhcnRQb2ludC5qb2luKCcsJyl9ICR7ZW5kUG9pbnQuam9pbignLCcpfWA7CiAgICAgIH0pOwogICAgfSwKICAgIGNhbGNBcmNEKCkgewogICAgICBjb25zdCB7CiAgICAgICAgeCwKICAgICAgICB5LAogICAgICAgIHdpZHRoCiAgICAgIH0gPSB0aGlzOwogICAgICBjb25zdCBhbmdsZUdhcCA9IE1hdGguUEkgLyA2OwogICAgICBjb25zdCByID0gd2lkdGggLyAyIC0gMTsKICAgICAgdGhpcy5hcmNEID0gbmV3IEFycmF5KDQpLmZpbGwoJycpLm1hcCgoXywgaSkgPT4gewogICAgICAgIGNvbnN0IHN0YXJ0QW5nbGUgPSBhbmdsZUdhcCAqICgzICogaSArIDEpOwogICAgICAgIGNvbnN0IGVuZEFuZ2xlID0gc3RhcnRBbmdsZSArIGFuZ2xlR2FwOwogICAgICAgIGNvbnN0IHN0YXJ0UG9pbnQgPSBnZXRDaXJjbGVSYWRpYW5Qb2ludCh4LCB5LCByLCBzdGFydEFuZ2xlKTsKICAgICAgICBjb25zdCBlbmRQb2ludCA9IGdldENpcmNsZVJhZGlhblBvaW50KHgsIHksIHIsIGVuZEFuZ2xlKTsKICAgICAgICByZXR1cm4gYE0ke3N0YXJ0UG9pbnQuam9pbignLCcpfSBBJHt4fSwgJHt5fSAwIDAgMSAke2VuZFBvaW50LmpvaW4oJywnKX1gOwogICAgICB9KTsKICAgIH0sCiAgICBhZnRlckF1dG9SZXNpemVNaXhpbkluaXQoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBpbml0CiAgICAgIH0gPSB0aGlzOwogICAgICBpbml0KCk7CiAgICB9LAogICAgZmFkZQogIH0KfTs="},{"version":3,"names":["autoResize","uuid","deepMerge","deepClone","getCircleRadianPoint","fade","name","mixins","props","color","type","Array","default","scanDur","Number","haloDur","data","id","ref","gId","gradientId","defaultColor","mergedColor","pathD","pathColor","circleR","splitLinePoints","arcD","segment","sectorAngle","Math","PI","ringNum","ringWidth","showSplitLine","watch","mergeColor","computed","x","width","y","height","methods","init","calcPathD","calcPathColor","calcCircleR","calcSplitLinePoints","calcArcD","startAngle","angleGap","r","lastEndPoints","fill","map","_","i","endPoints","toFixed","d","join","colorGap","radiusGap","endAngle","startPoint","endPoint","afterAutoResizeMixinInit"],"sources":["node_modules/@jiaminghi/data-view/lib/components/decoration12/src/main.vue"],"sourcesContent":["<template>\r\n  <div class=\"dv-decoration-12\" :ref=\"ref\">\r\n    <svg :width=\"width\" :height=\"height\">\r\n      <defs>\r\n        <g :id=\"gId\">\r\n          <path\r\n            :stroke=\"pathColor[i]\"\r\n            :stroke-width=\"width / 2\"\r\n            fill=\"transparent\"\r\n            v-for=\"(d, i) in pathD\"\r\n            :key=\"d\"\r\n            :d=\"d\"\r\n          />\r\n        </g>\r\n\r\n        <radialGradient\r\n          :id=\"gradientId\"\r\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\r\n        >\r\n          <stop offset=\"0%\" stop-color=\"transparent\" stop-opacity=\"1\" />\r\n          <stop offset=\"100%\" :stop-color=\"fade(mergedColor[1] || defaultColor[1], 30)\" stop-opacity=\"1\" />\r\n        </radialGradient>\r\n      </defs>\r\n\r\n      <circle\r\n        v-for=\"r in circleR\"\r\n        :key=\"r\"\r\n        :r=\"r\"\r\n        :cx=\"x\"\r\n        :cy=\"y\"\r\n        :stroke=\"mergedColor[1]\"\r\n        :stroke-width=\"0.5\"\r\n        fill=\"transparent\"\r\n      />\r\n\r\n      <circle\r\n        r=\"1\"\r\n        :cx=\"x\"\r\n        :cy=\"y\"\r\n        stroke=\"transparent\"\r\n        :fill=\"`url(#${gradientId})`\"\r\n      >\r\n        <animate\r\n          attributeName=\"r\"\r\n          :values=\"`1;${width / 2}`\"\r\n          :dur=\"`${haloDur}s`\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"opacity\"\r\n          values=\"1;0\"\r\n          :dur=\"`${haloDur}s`\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </circle>\r\n\r\n      <circle\r\n        r=\"2\"\r\n        :cx=\"x\"\r\n        :cy=\"y\"\r\n        :fill=\"mergedColor[1]\"\r\n      />\r\n\r\n      <g v-if=\"showSplitLine\">\r\n        <polyline\r\n          v-for=\"p in splitLinePoints\"\r\n          :key=\"p\"\r\n          :points=\"p\"\r\n          :stroke=\"mergedColor[1]\"\r\n          :stroke-width=\"0.5\"\r\n          opacity=\"0.5\"\r\n        />\r\n      </g>\r\n\r\n      <path\r\n        v-for=\"d in arcD\"\r\n        :key=\"d\"\r\n        :d=\"d\"\r\n        :stroke=\"mergedColor[1]\"\r\n        stroke-width=\"2\"\r\n        fill=\"transparent\"\r\n      />\r\n\r\n      <use :xlink:href=\"`#${gId}`\">\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          type=\"rotate\"\r\n          :values=\"`0, ${x} ${y};360, ${x} ${y}`\"\r\n          :dur=\"`${scanDur}s`\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </use>\r\n    </svg>\r\n\r\n    <div class=\"decoration-content\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\nimport { uuid } from '../../../util/index'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone, getCircleRadianPoint } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport { fade } from '@jiaminghi/color'\r\n\r\nexport default {\r\n  name: 'DvDecoration12',\r\n  mixins: [autoResize],\r\n  props: {\r\n    color: {\r\n      type: Array,\r\n      default: () => ([])\r\n    },\r\n    /**\r\n     * @description Scan animation dur\r\n     */\r\n    scanDur: {\r\n      type: Number,\r\n      default: 3\r\n    },\r\n    /**\r\n     * @description Halo animation dur\r\n     */\r\n    haloDur: {\r\n      type: Number,\r\n      default: 2\r\n    }\r\n  },\r\n  data () {\r\n    const id = uuid()\r\n    return {\r\n      ref: 'decoration-12',\r\n      gId: `decoration-12-g-${id}`,\r\n      gradientId: `decoration-12-gradient-${id}`,\r\n\r\n      defaultColor: ['#2783ce', '#2cf7fe'],\r\n\r\n      mergedColor: [],\r\n\r\n      pathD: [],\r\n\r\n      pathColor: [],\r\n\r\n      circleR: [],\r\n\r\n      splitLinePoints: [],\r\n\r\n      arcD: [],\r\n\r\n      segment: 30,\r\n\r\n      sectorAngle: Math.PI / 3,\r\n\r\n      ringNum: 3,\r\n\r\n      ringWidth: 1,\r\n\r\n      showSplitLine: true\r\n    }\r\n  },\r\n  watch: {\r\n    color () {\r\n      const { mergeColor } = this\r\n\r\n      mergeColor()\r\n    }\r\n  },\r\n  computed: {\r\n    x () {\r\n      const { width } = this\r\n\r\n      return width / 2\r\n    },\r\n    y () {\r\n      const { height } = this\r\n\r\n      return height / 2\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      const { mergeColor, calcPathD, calcPathColor, calcCircleR, calcSplitLinePoints, calcArcD } = this\r\n\r\n      mergeColor()\r\n\r\n      calcPathD()\r\n\r\n      calcPathColor()\r\n\r\n      calcCircleR()\r\n\r\n      calcSplitLinePoints()\r\n\r\n      calcArcD()\r\n    },\r\n    mergeColor () {\r\n      const { color, defaultColor } = this\r\n\r\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\r\n    },\r\n    calcPathD () {\r\n      const { x, y, width, segment, sectorAngle } = this\r\n\r\n      const startAngle = -Math.PI / 2\r\n      const angleGap = sectorAngle / segment\r\n      const r = width / 4\r\n      let lastEndPoints = getCircleRadianPoint(x, y, r, startAngle)\r\n\r\n      this.pathD = new Array(segment)\r\n        .fill('')\r\n        .map((_, i) => {\r\n          const endPoints = getCircleRadianPoint(x, y, r, startAngle - (i + 1) * angleGap).map(_ => _.toFixed(5))\r\n          const d = `M${lastEndPoints.join(',')} A${r}, ${r} 0 0 0 ${endPoints.join(',')}`\r\n          lastEndPoints = endPoints\r\n\r\n          return d\r\n        })\r\n    },\r\n    calcPathColor () {\r\n      const { mergedColor: [color], segment } = this\r\n\r\n      const colorGap = 100 / (segment - 1)\r\n\r\n      this.pathColor = new Array(segment)\r\n        .fill(color)\r\n        .map((_, i) => fade(color, 100 - i * colorGap))\r\n    },\r\n    calcCircleR () {\r\n      const { segment, ringNum, width, ringWidth } = this\r\n\r\n      const radiusGap = (width / 2 - ringWidth / 2) / ringNum\r\n\r\n      this.circleR = new Array(ringNum)\r\n        .fill(0)\r\n        .map((_, i) => radiusGap * (i + 1))\r\n    },\r\n    calcSplitLinePoints () {\r\n      const { x, y, width } = this\r\n\r\n      const angleGap = Math.PI / 6\r\n      const r = width / 2\r\n\r\n      this.splitLinePoints = new Array(6)\r\n        .fill('')\r\n        .map((_, i) => {\r\n          const startAngle = angleGap * (i + 1)\r\n          const endAngle = startAngle + Math.PI\r\n          const startPoint = getCircleRadianPoint(x, y, r, startAngle)\r\n          const endPoint = getCircleRadianPoint(x, y, r, endAngle)\r\n\r\n          return `${startPoint.join(',')} ${endPoint.join(',')}`\r\n        })\r\n    },\r\n    calcArcD () {\r\n      const { x, y, width } = this\r\n\r\n      const angleGap = Math.PI / 6\r\n      const r = width / 2 - 1\r\n\r\n      this.arcD = new Array(4)\r\n        .fill('')\r\n        .map((_, i) => {\r\n          const startAngle = angleGap * (3 * i + 1)\r\n          const endAngle = startAngle + angleGap\r\n          const startPoint = getCircleRadianPoint(x, y, r, startAngle)\r\n          const endPoint = getCircleRadianPoint(x, y, r, endAngle)\r\n\r\n          return `M${startPoint.join(',')} A${x}, ${y} 0 0 1 ${endPoint.join(',')}`\r\n        })\r\n    },\r\n    afterAutoResizeMixinInit () {\r\n      const { init } = this\r\n\r\n      init()\r\n    },\r\n    fade\r\n  }\r\n}\r\n</script>"],"mappings":"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"}]}