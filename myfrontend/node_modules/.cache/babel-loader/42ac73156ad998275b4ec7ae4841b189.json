{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration5\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration5\\src\\main.vue","mtime":1713594891407},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\babel.config.js","mtime":1713594890607},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1713594897732},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmltcG9ydCB7IGdldFBvbHlsaW5lTGVuZ3RoIH0gZnJvbSAnQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwnOwppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCc7CmltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJ0BqaWFtaW5naGkvYy1yZW5kZXIvbGliL3BsdWdpbi91dGlsJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEdkRlY29yYXRpb241JywKICBtaXhpbnM6IFthdXRvUmVzaXplXSwKICBwcm9wczogewogICAgY29sb3I6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9LAogICAgZHVyOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMS4yCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVmOiAnZGVjb3JhdGlvbi01JywKICAgICAgbGluZTFQb2ludHM6ICcnLAogICAgICBsaW5lMlBvaW50czogJycsCiAgICAgIGxpbmUxTGVuZ3RoOiAwLAogICAgICBsaW5lMkxlbmd0aDogMCwKICAgICAgZGVmYXVsdENvbG9yOiBbJyMzZjk2YTUnLCAnIzNmOTZhNSddLAogICAgICBtZXJnZWRDb2xvcjogW10KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY29sb3IoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBtZXJnZUNvbG9yCiAgICAgIH0gPSB0aGlzOwogICAgICBtZXJnZUNvbG9yKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZnRlckF1dG9SZXNpemVNaXhpbkluaXQoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBjYWxjU1ZHRGF0YQogICAgICB9ID0gdGhpczsKICAgICAgY2FsY1NWR0RhdGEoKTsKICAgIH0sCiAgICBjYWxjU1ZHRGF0YSgpIHsKICAgICAgY29uc3QgewogICAgICAgIHdpZHRoLAogICAgICAgIGhlaWdodAogICAgICB9ID0gdGhpczsKICAgICAgbGV0IGxpbmUxUG9pbnRzID0gW1swLCBoZWlnaHQgKiAwLjJdLCBbd2lkdGggKiAwLjE4LCBoZWlnaHQgKiAwLjJdLCBbd2lkdGggKiAwLjIsIGhlaWdodCAqIDAuNF0sIFt3aWR0aCAqIDAuMjUsIGhlaWdodCAqIDAuNF0sIFt3aWR0aCAqIDAuMjcsIGhlaWdodCAqIDAuNl0sIFt3aWR0aCAqIDAuNzIsIGhlaWdodCAqIDAuNl0sIFt3aWR0aCAqIDAuNzUsIGhlaWdodCAqIDAuNF0sIFt3aWR0aCAqIDAuOCwgaGVpZ2h0ICogMC40XSwgW3dpZHRoICogMC44MiwgaGVpZ2h0ICogMC4yXSwgW3dpZHRoLCBoZWlnaHQgKiAwLjJdXTsKICAgICAgbGV0IGxpbmUyUG9pbnRzID0gW1t3aWR0aCAqIDAuMywgaGVpZ2h0ICogMC44XSwgW3dpZHRoICogMC43LCBoZWlnaHQgKiAwLjhdXTsKICAgICAgY29uc3QgbGluZTFMZW5ndGggPSBnZXRQb2x5bGluZUxlbmd0aChsaW5lMVBvaW50cyk7CiAgICAgIGNvbnN0IGxpbmUyTGVuZ3RoID0gZ2V0UG9seWxpbmVMZW5ndGgobGluZTJQb2ludHMpOwogICAgICBsaW5lMVBvaW50cyA9IGxpbmUxUG9pbnRzLm1hcChwb2ludCA9PiBwb2ludC5qb2luKCcsJykpLmpvaW4oJyAnKTsKICAgICAgbGluZTJQb2ludHMgPSBsaW5lMlBvaW50cy5tYXAocG9pbnQgPT4gcG9pbnQuam9pbignLCcpKS5qb2luKCcgJyk7CiAgICAgIHRoaXMubGluZTFQb2ludHMgPSBsaW5lMVBvaW50czsKICAgICAgdGhpcy5saW5lMlBvaW50cyA9IGxpbmUyUG9pbnRzOwogICAgICB0aGlzLmxpbmUxTGVuZ3RoID0gbGluZTFMZW5ndGg7CiAgICAgIHRoaXMubGluZTJMZW5ndGggPSBsaW5lMkxlbmd0aDsKICAgIH0sCiAgICBvblJlc2l6ZSgpIHsKICAgICAgY29uc3QgewogICAgICAgIGNhbGNTVkdEYXRhCiAgICAgIH0gPSB0aGlzOwogICAgICBjYWxjU1ZHRGF0YSgpOwogICAgfSwKICAgIG1lcmdlQ29sb3IoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBjb2xvciwKICAgICAgICBkZWZhdWx0Q29sb3IKICAgICAgfSA9IHRoaXM7CiAgICAgIHRoaXMubWVyZ2VkQ29sb3IgPSBkZWVwTWVyZ2UoZGVlcENsb25lKGRlZmF1bHRDb2xvciwgdHJ1ZSksIGNvbG9yIHx8IFtdKTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICBjb25zdCB7CiAgICAgIG1lcmdlQ29sb3IKICAgIH0gPSB0aGlzOwogICAgbWVyZ2VDb2xvcigpOwogIH0KfTs="},{"version":3,"names":["autoResize","getPolylineLength","deepMerge","deepClone","name","mixins","props","color","type","Array","default","dur","Number","data","ref","line1Points","line2Points","line1Length","line2Length","defaultColor","mergedColor","watch","mergeColor","methods","afterAutoResizeMixinInit","calcSVGData","width","height","map","point","join","onResize","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/decoration5/src/main.vue"],"sourcesContent":["<template>\r\n  <div class=\"dv-decoration-5\" :ref=\"ref\">\r\n    <svg :width=\"width\" :height=\"height\">\r\n      <polyline\r\n        fill=\"transparent\"\r\n        :stroke=\"mergedColor[0]\"\r\n        stroke-width=\"3\"\r\n        :points=\"line1Points\"\r\n      >\r\n        <animate\r\n          attributeName=\"stroke-dasharray\"\r\n          attributeType=\"XML\"\r\n          :from=\"`0, ${line1Length / 2}, 0, ${line1Length / 2}`\"\r\n          :to=\"`0, 0, ${line1Length}, 0`\"\r\n          :dur=\"`${dur}s`\"\r\n          begin=\"0s\"\r\n          calcMode=\"spline\"\r\n          keyTimes=\"0;1\"\r\n          keySplines=\"0.4,1,0.49,0.98\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </polyline>\r\n      <polyline\r\n        fill=\"transparent\"\r\n        :stroke=\"mergedColor[1]\"\r\n        stroke-width=\"2\"\r\n        :points=\"line2Points\"\r\n      >\r\n        <animate\r\n          attributeName=\"stroke-dasharray\"\r\n          attributeType=\"XML\"\r\n          :from=\"`0, ${line2Length / 2}, 0, ${line2Length / 2}`\"\r\n          :to=\"`0, 0, ${line2Length}, 0`\"\r\n          :dur=\"`${dur}s`\"\r\n          begin=\"0s\"\r\n          calcMode=\"spline\"\r\n          keyTimes=\"0;1\"\r\n          keySplines=\".4,1,.49,.98\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </polyline>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport { getPolylineLength } from '@jiaminghi/charts/lib/util'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvDecoration5',\r\n  mixins: [autoResize],\r\n  props: {\r\n    color: {\r\n      type: Array,\r\n      default: () => ([])\r\n    },\r\n    dur: {\r\n      type: Number,\r\n      default: 1.2\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      ref: 'decoration-5',\r\n\r\n      line1Points: '',\r\n      line2Points: '',\r\n\r\n      line1Length: 0,\r\n      line2Length: 0,\r\n\r\n      defaultColor: ['#3f96a5', '#3f96a5'],\r\n\r\n      mergedColor: []\r\n    }\r\n  },\r\n  watch: {\r\n    color () {\r\n      const { mergeColor } = this\r\n\r\n      mergeColor()\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    calcSVGData () {\r\n      const { width, height } = this\r\n\r\n      let line1Points = [\r\n        [0, height * 0.2], [width * 0.18, height * 0.2], [width * 0.2, height * 0.4], [width * 0.25, height * 0.4],\r\n        [width * 0.27, height * 0.6], [width * 0.72, height * 0.6], [width * 0.75, height * 0.4],\r\n        [width * 0.8, height * 0.4], [width * 0.82, height * 0.2], [width, height * 0.2]\r\n      ]\r\n\r\n      let line2Points = [\r\n        [width * 0.3, height * 0.8], [width * 0.7, height * 0.8]\r\n      ]\r\n\r\n      const line1Length = getPolylineLength(line1Points)\r\n      const line2Length = getPolylineLength(line2Points)\r\n\r\n      line1Points = line1Points.map(point => point.join(',')).join(' ')\r\n      line2Points = line2Points.map(point => point.join(',')).join(' ')\r\n\r\n      this.line1Points = line1Points\r\n      this.line2Points = line2Points\r\n\r\n      this.line1Length = line1Length\r\n      this.line2Length = line2Length\r\n    },\r\n    onResize () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    mergeColor () {\r\n      const { color, defaultColor } = this\r\n\r\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\r\n    }\r\n  },\r\n  mounted () {\r\n    const { mergeColor } = this\r\n\r\n    mergeColor()\r\n  }\r\n}\r\n</script>"],"mappings":"AA8CA,OAAAA,UAAA;AAEA,SAAAC,iBAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAL,UAAA;EACAM,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,EAAAA,CAAA;IACA;IACAC,GAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,GAAA;MAEAC,WAAA;MACAC,WAAA;MAEAC,WAAA;MACAC,WAAA;MAEAC,YAAA;MAEAC,WAAA;IACA;EACA;EACAC,KAAA;IACAd,MAAA;MACA;QAAAe;MAAA;MAEAA,UAAA;IACA;EACA;EACAC,OAAA;IACAC,yBAAA;MACA;QAAAC;MAAA;MAEAA,WAAA;IACA;IACAA,YAAA;MACA;QAAAC,KAAA;QAAAC;MAAA;MAEA,IAAAZ,WAAA,IACA,IAAAY,MAAA,UAAAD,KAAA,SAAAC,MAAA,UAAAD,KAAA,QAAAC,MAAA,UAAAD,KAAA,SAAAC,MAAA,SACA,CAAAD,KAAA,SAAAC,MAAA,UAAAD,KAAA,SAAAC,MAAA,UAAAD,KAAA,SAAAC,MAAA,SACA,CAAAD,KAAA,QAAAC,MAAA,UAAAD,KAAA,SAAAC,MAAA,UAAAD,KAAA,EAAAC,MAAA,QACA;MAEA,IAAAX,WAAA,IACA,CAAAU,KAAA,QAAAC,MAAA,UAAAD,KAAA,QAAAC,MAAA,QACA;MAEA,MAAAV,WAAA,GAAAhB,iBAAA,CAAAc,WAAA;MACA,MAAAG,WAAA,GAAAjB,iBAAA,CAAAe,WAAA;MAEAD,WAAA,GAAAA,WAAA,CAAAa,GAAA,CAAAC,KAAA,IAAAA,KAAA,CAAAC,IAAA,OAAAA,IAAA;MACAd,WAAA,GAAAA,WAAA,CAAAY,GAAA,CAAAC,KAAA,IAAAA,KAAA,CAAAC,IAAA,OAAAA,IAAA;MAEA,KAAAf,WAAA,GAAAA,WAAA;MACA,KAAAC,WAAA,GAAAA,WAAA;MAEA,KAAAC,WAAA,GAAAA,WAAA;MACA,KAAAC,WAAA,GAAAA,WAAA;IACA;IACAa,SAAA;MACA;QAAAN;MAAA;MAEAA,WAAA;IACA;IACAH,WAAA;MACA;QAAAf,KAAA;QAAAY;MAAA;MAEA,KAAAC,WAAA,GAAAlB,SAAA,CAAAC,SAAA,CAAAgB,YAAA,SAAAZ,KAAA;IACA;EACA;EACAyB,QAAA;IACA;MAAAV;IAAA;IAEAA,UAAA;EACA;AACA"}]}