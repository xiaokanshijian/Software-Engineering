{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChartEnhanced\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChartEnhanced\\src\\main.vue","mtime":1713594891423},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";AAyfile":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/flylineChartEnhanced/src","sourcesContent":["<template>\r\n  <div\r\n    class=\"dv-flyline-chart-enhanced\"\r\n    :style=\"`background-image: url(${mergedConfig ? mergedConfig.bgImgSrc : ''})`\"\r\n    :ref=\"ref\"\r\n    @click=\"consoleClickPos\"\r\n  >\r\n    <svg v-if=\"flylines.length\" :width=\"width\" :height=\"height\">\r\n      <defs>\r\n        <radialGradient\r\n          :id=\"flylineGradientId\"\r\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\r\n        >\r\n          <stop\r\n            offset=\"0%\" stop-color=\"#fff\"\r\n            stop-opacity=\"1\"\r\n          />\r\n          <stop\r\n            offset=\"100%\" stop-color=\"#fff\"\r\n            stop-opacity=\"0\"\r\n          />\r\n        </radialGradient>\r\n\r\n        <radialGradient\r\n          :id=\"haloGradientId\"\r\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\r\n        >\r\n          <stop\r\n            offset=\"0%\" stop-color=\"#fff\"\r\n            stop-opacity=\"0\"\r\n          />\r\n          <stop\r\n            offset=\"100%\" stop-color=\"#fff\"\r\n            stop-opacity=\"1\"\r\n          />\r\n        </radialGradient>\r\n      </defs>\r\n\r\n      <!-- points -->\r\n      <g v-for=\"point in flylinePoints\" :key=\"point.key + Math.random()\">\r\n        <defs>\r\n          <circle\r\n            v-if=\"point.halo.show\"\r\n            :id=\"`halo${unique}${point.key}`\"\r\n            :cx=\"point.coordinate[0]\"\r\n            :cy=\"point.coordinate[1]\"\r\n          >\r\n            <animate\r\n              attributeName=\"r\"\r\n              :values=\"`1;${point.halo.radius}`\"\r\n              :dur=\"`${point.halo.time}s`\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n            <animate\r\n              attributeName=\"opacity\"\r\n              values=\"1;0\"\r\n              :dur=\"`${point.halo.time}s`\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </circle>\r\n        </defs>\r\n\r\n        <!-- halo gradient mask -->\r\n        <mask :id=\"`mask${unique}${point.key}`\">\r\n          <use\r\n            v-if=\"point.halo.show\"\r\n            :xlink:href=\"`#halo${unique}${point.key}`\"\r\n            :fill=\"`url(#${haloGradientId})`\"\r\n          />\r\n        </mask>\r\n\r\n        <!-- point halo -->\r\n        <use\r\n          v-if=\"point.halo.show\"\r\n          :xlink:href=\"`#halo${unique}${point.key}`\"\r\n          :fill=\"point.halo.color\"\r\n          :mask=\"`url(#mask${unique}${point.key})`\"\r\n        />\r\n\r\n        <!-- point icon -->\r\n        <image\r\n          v-if=\"point.icon.show\"\r\n          :xlink:href=\"point.icon.src\"\r\n          :width=\"point.icon.width\"\r\n          :height=\"point.icon.height\"\r\n          :x=\"point.icon.x\"\r\n          :y=\"point.icon.y\"\r\n        />\r\n\r\n        <!-- point text -->\r\n        <text\r\n          v-if=\"point.text.show\"\r\n          :style=\"`fontSize:${point.text.fontSize}px;color:${point.text.color}`\"\r\n          :fill=\"point.text.color\"\r\n          :x=\"point.text.x\"\r\n          :y=\"point.text.y\"\r\n        >\r\n          {{ point.name }}\r\n        </text>\r\n      </g>\r\n\r\n      <!-- flylines -->\r\n      <g v-for=\"(line, i) in flylines\" :key=\"line.key + Math.random()\">\r\n        <defs>\r\n          <path\r\n            :id=\"line.key\"\r\n            :ref=\"line.key\"\r\n            :d=\"line.d\"\r\n            fill=\"transparent\"\r\n          />\r\n        </defs>\r\n\r\n        <!-- orbit line -->\r\n        <use\r\n          :xlink:href=\"`#${line.key}`\"\r\n          :stroke-width=\"line.width\"\r\n          :stroke=\"line.orbitColor\"\r\n        />\r\n\r\n        <!-- fly line gradient mask -->\r\n        <mask :id=\"`mask${unique}${line.key}`\">\r\n          <circle cx=\"0\" cy=\"0\" :r=\"line.radius\" :fill=\"`url(#${flylineGradientId})`\">\r\n            <animateMotion\r\n              :dur=\"line.time\"\r\n              :path=\"line.d\"\r\n              rotate=\"auto\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </circle>\r\n        </mask>\r\n\r\n        <!-- fly line -->\r\n        <use\r\n          v-if=\"flylineLengths[i]\"\r\n          :xlink:href=\"`#${line.key}`\"\r\n          :stroke-width=\"line.width\"\r\n          :stroke=\"line.color\"\r\n          :mask=\"`url(#mask${unique}${line.key})`\"\r\n        >\r\n          <animate\r\n            attributeName=\"stroke-dasharray\"\r\n            :from=\"`0, ${flylineLengths[i]}`\"\r\n            :to=\"`${flylineLengths[i]}, 0`\"\r\n            :dur=\"line.time\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </use>\r\n      </g>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport { randomExtend, getPointDistance, uuid } from '../../../util/index'\r\n\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nexport default {\r\n  name: 'DvFlylineChartEnhanced',\r\n  mixins: [autoResize],\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    dev: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data () {\r\n    const id = uuid()\r\n    return {\r\n      ref: 'dv-flyline-chart-enhanced',\r\n      unique: Math.random(),\r\n      flylineGradientId: `flyline-gradient-id-${id}`,\r\n      haloGradientId: `halo-gradient-id-${id}`,\r\n      /**\r\n       * @description Type Declaration\r\n       * \r\n       * interface Halo {\r\n       *    show?: boolean\r\n       *    duration?: [number, number]\r\n       *    color?: string\r\n       *    radius?: number\r\n       * }\r\n       * \r\n       * interface Text {\r\n       *    show?: boolean\r\n       *    offset?: [number, number]\r\n       *    color?: string\r\n       *    fontSize?: number\r\n       * }\r\n       * \r\n       * interface Icon {\r\n       *    show?: boolean\r\n       *    src?: string\r\n       *    width?: number\r\n       *    height?: number\r\n       * }\r\n       * \r\n       * interface Point {\r\n       *    name: string\r\n       *    coordinate: [number, number]\r\n       *    halo?: Halo\r\n       *    text?: Text\r\n       *    icon?: Icon\r\n       * }\r\n       * \r\n       * interface Line {\r\n       *    width?: number\r\n       *    color?: string\r\n       *    orbitColor?: string\r\n       *    duration?: [number, number]\r\n       *    radius?: string\r\n       * }\r\n       * \r\n       * interface Flyline extends Line {\r\n       *    source: string\r\n       *    target: string\r\n       * }\r\n       * \r\n       * interface FlylineWithPath extends Flyline {\r\n       *    d: string\r\n       *    path: [[number, number], [number, number], [number, number]]\r\n       *    key: string\r\n       * }\r\n       */\r\n      defaultConfig: {\r\n        /**\r\n         * @description Flyline chart points\r\n         * @type {Point[]}\r\n         * @default points = []\r\n         */\r\n        points: [],\r\n        /**\r\n         * @description Lines\r\n         * @type {Flyline[]}\r\n         * @default lines = []\r\n         */\r\n        lines: [],\r\n        /**\r\n         * @description Global halo configuration\r\n         * @type {Halo}\r\n         */\r\n        halo: {\r\n          /**\r\n           * @description Whether to show halo\r\n           * @type {Boolean}\r\n           * @default show = false\r\n           */\r\n          show: false,\r\n          /**\r\n           * @description Halo animation duration (1s = 10)\r\n           * @type {[number, number]}\r\n           */\r\n          duration: [20, 30],\r\n          /**\r\n           * @description Halo color\r\n           * @type {String}\r\n           * @default color = '#fb7293'\r\n           */\r\n          color: '#fb7293',\r\n          /**\r\n           * @description Halo radius\r\n           * @type {Number}\r\n           * @default radius = 120\r\n           */\r\n          radius: 120\r\n        },\r\n        /**\r\n         * @description Global text configuration\r\n         * @type {Text}\r\n         */\r\n        text: {\r\n          /**\r\n           * @description Whether to show text\r\n           * @type {Boolean}\r\n           * @default show = false\r\n           */\r\n          show: false,\r\n          /**\r\n           * @description Text offset\r\n           * @type {[number, number]}\r\n           * @default offset = [0, 15]\r\n           */\r\n          offset: [0, 15],\r\n          /**\r\n           * @description Text color\r\n           * @type {String}\r\n           * @default color = '#ffdb5c'\r\n           */\r\n          color: '#ffdb5c',\r\n          /**\r\n           * @description Text font size\r\n           * @type {Number}\r\n           * @default fontSize = 12\r\n           */\r\n          fontSize: 12\r\n        },\r\n        /**\r\n         * @description Global icon configuration\r\n         * @type {Icon}\r\n         */\r\n        icon: {\r\n          /**\r\n           * @description Whether to show icon\r\n           * @type {Boolean}\r\n           * @default show = false\r\n           */\r\n          show: false,\r\n          /**\r\n           * @description Icon src\r\n           * @type {String}\r\n           * @default src = ''\r\n           */\r\n          src: '',\r\n          /**\r\n           * @description Icon width\r\n           * @type {Number}\r\n           * @default width = 15\r\n           */\r\n          width: 15,\r\n          /**\r\n           * @description Icon height\r\n           * @type {Number}\r\n           * @default width = 15\r\n           */\r\n          height: 15\r\n        },\r\n        /**\r\n         * @description Global line configuration\r\n         * @type {Line}\r\n         */\r\n        line: {\r\n          /**\r\n           * @description Line width\r\n           * @type {Number}\r\n           * @default width = 1\r\n           */\r\n          width: 1,\r\n          /**\r\n           * @description Flyline color\r\n           * @type {String}\r\n           * @default color = '#ffde93'\r\n           */\r\n          color: '#ffde93',\r\n          /**\r\n           * @description Orbit color\r\n           * @type {String}\r\n           * @default orbitColor = 'rgba(103, 224, 227, .2)'\r\n           */\r\n          orbitColor: 'rgba(103, 224, 227, .2)',\r\n          /**\r\n           * @description Flyline animation duration\r\n           * @type {[number, number]}\r\n           * @default duration = [20, 30]\r\n           */\r\n          duration: [20, 30],\r\n          /**\r\n           * @description Flyline radius\r\n           * @type {Number}\r\n           * @default radius = 100\r\n           */\r\n          radius: 100\r\n        },\r\n        /**\r\n         * @description Back ground image url\r\n         * @type {String}\r\n         * @default bgImgSrc = ''\r\n         */\r\n        bgImgSrc: '',\r\n        /**\r\n         * @description K value\r\n         * @type {Number}\r\n         * @default k = -0.5\r\n         * @example k = -1 ~ 1\r\n         */\r\n        k: -0.5,\r\n        /**\r\n         * @description Flyline curvature\r\n         * @type {Number}\r\n         * @default curvature = 5\r\n         */\r\n        curvature: 5,\r\n        /**\r\n         * @description Relative points position\r\n         * @type {Boolean}\r\n         * @default relative = true\r\n         */\r\n        relative: true\r\n      },\r\n      /**\r\n       * @description Fly line data\r\n       * @type {FlylineWithPath[]}\r\n       * @default flylines = []\r\n       */\r\n      flylines: [],\r\n      /**\r\n       * @description Fly line lengths\r\n       * @type {Number[]}\r\n       * @default flylineLengths = []\r\n       */\r\n      flylineLengths: [],\r\n      /**\r\n       * @description Fly line points\r\n       * @default flylinePoints = []\r\n       */\r\n      flylinePoints: [],\r\n\r\n      mergedConfig: null\r\n    }\r\n  },\r\n  watch: {\r\n    config () {\r\n      const { calcData } = this\r\n\r\n      calcData()\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { calcData } = this\r\n\r\n      calcData()\r\n    },\r\n    onResize () {\r\n      const { calcData } = this\r\n\r\n      calcData()\r\n    },\r\n    async calcData () {\r\n      const { mergeConfig, calcflylinePoints, calcLinePaths } = this\r\n\r\n      mergeConfig()\r\n\r\n      calcflylinePoints()\r\n\r\n      calcLinePaths()\r\n\r\n      const { calcLineLengths } = this\r\n\r\n      await calcLineLengths()\r\n    },\r\n    mergeConfig () {\r\n      let { config, defaultConfig } = this\r\n\r\n      const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n\r\n      const { points, lines, halo, text, icon, line } = mergedConfig\r\n\r\n      mergedConfig.points = points.map(item => {\r\n        item.halo = deepMerge(deepClone(halo, true), item.halo || {})\r\n        item.text = deepMerge(deepClone(text, true), item.text || {})\r\n        item.icon = deepMerge(deepClone(icon, true), item.icon || {})\r\n\r\n        return item\r\n      })\r\n\r\n      mergedConfig.lines = lines.map(item => {\r\n        return deepMerge(deepClone(line, true), item)\r\n      })\r\n\r\n      this.mergedConfig = mergedConfig\r\n    },\r\n    calcflylinePoints () {\r\n      const { mergedConfig, width, height } = this\r\n\r\n      const { relative, points } = mergedConfig\r\n\r\n      this.flylinePoints = points.map((item, i) => {\r\n        const { coordinate: [x, y], halo, icon, text } = item\r\n\r\n        if (relative) item.coordinate = [x * width, y * height]\r\n\r\n        item.halo.time = randomExtend(...halo.duration) / 10\r\n\r\n        const { width: iw, height: ih } = icon\r\n        item.icon.x = item.coordinate[0] - iw / 2\r\n        item.icon.y = item.coordinate[1] - ih / 2\r\n\r\n        const [ox, oy] = text.offset\r\n        item.text.x = item.coordinate[0] + ox\r\n        item.text.y = item.coordinate[1] + oy\r\n\r\n        item.key = `${item.coordinate.toString()}${i}`\r\n\r\n        return item\r\n      })\r\n    },\r\n    calcLinePaths () {\r\n      const { getPath, mergedConfig } = this\r\n\r\n      const { points, lines } = mergedConfig\r\n\r\n      this.flylines = lines.map(item => {\r\n        const { source, target, duration } = item\r\n\r\n        const sourcePoint = points.find(({ name }) => name === source).coordinate\r\n        const targetPoint = points.find(({ name }) => name === target).coordinate\r\n\r\n        const path = getPath(sourcePoint, targetPoint).map(item => item.map(v => parseFloat(v.toFixed(10))))\r\n        const d = `M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\r\n        const key = `path${path.toString()}`\r\n        const time = randomExtend(...duration) / 10\r\n\r\n        return { ...item, path, key, d, time }\r\n      })\r\n    },\r\n    getPath (start, end) {\r\n      const { getControlPoint } = this\r\n\r\n      const controlPoint = getControlPoint(start, end)\r\n\r\n      return [start, controlPoint, end]\r\n    },\r\n    getControlPoint ([sx, sy], [ex, ey]) {\r\n      const { getKLinePointByx, mergedConfig } = this\r\n\r\n      const { curvature, k } = mergedConfig\r\n\r\n      const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\r\n\r\n      const distance = getPointDistance([sx, sy], [ex, ey])\r\n\r\n      const targetLength = distance / curvature\r\n      const disDived = targetLength / 2\r\n\r\n      let [dx, dy] = [mx, my]\r\n\r\n      do {\r\n        dx += disDived\r\n        dy = getKLinePointByx(k, [mx, my], dx)[1]\r\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\r\n\r\n      return [dx, dy]\r\n    },\r\n    getKLinePointByx (k, [lx, ly], x) {\r\n      const y = ly - k * lx + k * x\r\n\r\n      return [x, y]\r\n    },\r\n    async calcLineLengths () {\r\n      const { $nextTick, flylines, $refs } = this\r\n\r\n      await $nextTick()\r\n\r\n      this.flylineLengths = flylines.map(({ key }) => $refs[key][0].getTotalLength())\r\n    },\r\n    consoleClickPos ({ offsetX, offsetY }) {\r\n      const { width, height, dev } = this\r\n\r\n      if (!dev) return\r\n\r\n      const relativeX = (offsetX / width).toFixed(2)\r\n      const relativeY = (offsetY / height).toFixed(2)\r\n\r\n      console.warn(`dv-flyline-chart-enhanced DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\r\n    }\r\n  }\r\n}\r\n</script>"]}]}