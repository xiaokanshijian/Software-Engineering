{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\digitalFlop\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\digitalFlop\\src\\main.vue","mtime":1713594891423},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgQ1JlbmRlciBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyJw0KDQppbXBvcnQgJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi9leHRlbmQvaW5kZXgnDQoNCmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4Jw0KDQppbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyL2xpYi9wbHVnaW4vdXRpbCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnRHZEaWdpdGFsRmxvcCcsDQogIHByb3BzOiB7DQogICAgY29uZmlnOiB7DQogICAgICB0eXBlOiBPYmplY3QsDQogICAgICBkZWZhdWx0OiAoKSA9PiAoe30pDQogICAgfQ0KICB9LA0KICBkYXRhICgpIHsNCiAgICByZXR1cm4gew0KICAgICAgcmVuZGVyZXI6IG51bGwsDQoNCiAgICAgIGRlZmF1bHRDb25maWc6IHsNCiAgICAgICAgLyoqDQogICAgICAgICAqIEBkZXNjcmlwdGlvbiBOdW1iZXIgZm9yIGRpZ2l0YWwgZmxvcA0KICAgICAgICAgKiBAdHlwZSB7QXJyYXk8TnVtYmVyPn0NCiAgICAgICAgICogQGRlZmF1bHQgbnVtYmVyID0gW10NCiAgICAgICAgICogQGV4YW1wbGUgbnVtYmVyID0gWzEwXQ0KICAgICAgICAgKi8NCiAgICAgICAgbnVtYmVyOiBbXSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDb250ZW50IGZvcm1hdHRlcg0KICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQ0KICAgICAgICAgKiBAZGVmYXVsdCBjb250ZW50ID0gJycNCiAgICAgICAgICogQGV4YW1wbGUgY29udGVudCA9ICd7bnR95LiqJw0KICAgICAgICAgKi8NCiAgICAgICAgY29udGVudDogJycsDQogICAgICAgIC8qKg0KICAgICAgICAgKiBAZGVzY3JpcHRpb24gTnVtYmVyIHRvRml4ZWQNCiAgICAgICAgICogQHR5cGUge051bWJlcn0NCiAgICAgICAgICogQGRlZmF1bHQgdG9GaXhlZCA9IDANCiAgICAgICAgICovDQogICAgICAgIHRvRml4ZWQ6IDAsDQogICAgICAgIC8qKg0KICAgICAgICAgKiBAZGVzY3JpcHRpb24gVGV4dCBhbGlnbg0KICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfQ0KICAgICAgICAgKiBAZGVmYXVsdCB0ZXh0QWxpZ24gPSAnY2VudGVyJw0KICAgICAgICAgKiBAZXhhbXBsZSB0ZXh0QWxpZ24gPSAnY2VudGVyJyB8ICdsZWZ0JyB8ICdyaWdodCcNCiAgICAgICAgICovDQogICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsDQogICAgICAgIC8qKg0KICAgICAgICAgKiBAZGVzY3JpcHRpb24gcm93R2FwDQogICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9DQogICAgICAgICBAZGVmYXVsdCByb3dHYXAgPSAwDQogICAgICAgICAqLw0KICAgICAgICByb3dHYXA6IDAsDQogICAgICAgIC8qKg0KICAgICAgICAgKiBAZGVzY3JpcHRpb24gVGV4dCBzdHlsZSBjb25maWd1cmF0aW9uDQogICAgICAgICAqIEB0eXBlIHtPYmplY3R9IHtDUmVuZGVyIENsYXNzIFN0eWxlfQ0KICAgICAgICAgKi8NCiAgICAgICAgc3R5bGU6IHsNCiAgICAgICAgICBmb250U2l6ZTogMzAsDQogICAgICAgICAgZmlsbDogJyMzZGU3YzknDQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBAZGVzY3JpcHRpb24gTnVtYmVyIGZvcm1hdHRlcg0KICAgICAgICAgKiBAdHlwZSB7TnVsbHxGdW5jdGlvbn0NCiAgICAgICAgICovDQogICAgICAgIGZvcm1hdHRlcjogdW5kZWZpbmVkLA0KICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENSZW5kZXIgYW5pbWF0aW9uQ3VydmUNCiAgICAgICAgICogQHR5cGUge1N0cmluZ30NCiAgICAgICAgICogQGRlZmF1bHQgYW5pbWF0aW9uQ3VydmUgPSAnZWFzZU91dEN1YmljJw0KICAgICAgICAgKi8NCiAgICAgICAgYW5pbWF0aW9uQ3VydmU6ICdlYXNlT3V0Q3ViaWMnLA0KICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENSZW5kZXIgYW5pbWF0aW9uRnJhbWUNCiAgICAgICAgICogQHR5cGUge1N0cmluZ30NCiAgICAgICAgICogQGRlZmF1bHQgYW5pbWF0aW9uRnJhbWUgPSA1MA0KICAgICAgICAgKi8NCiAgICAgICAgYW5pbWF0aW9uRnJhbWU6IDUwDQogICAgICB9LA0KDQogICAgICBtZXJnZWRDb25maWc6IG51bGwsDQoNCiAgICAgIGdyYXBoOiBudWxsDQogICAgfQ0KICB9LA0KICB3YXRjaDogew0KICAgIGNvbmZpZyAoKSB7DQogICAgICBjb25zdCB7IHVwZGF0ZSB9ID0gdGhpcw0KDQogICAgICB1cGRhdGUoKQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGluaXQgKCkgew0KICAgICAgY29uc3QgeyBpbml0UmVuZGVyLCBtZXJnZUNvbmZpZywgaW5pdEdyYXBoIH0gPSB0aGlzDQoNCiAgICAgIGluaXRSZW5kZXIoKQ0KDQogICAgICBtZXJnZUNvbmZpZygpDQoNCiAgICAgIGluaXRHcmFwaCgpDQogICAgfSwNCiAgICBpbml0UmVuZGVyICgpIHsNCiAgICAgIGNvbnN0IHsgJHJlZnMgfSA9IHRoaXMNCg0KICAgICAgdGhpcy5yZW5kZXJlciA9IG5ldyBDUmVuZGVyKCRyZWZzWydkaWdpdGFsLWZsb3AnXSkNCiAgICB9LA0KICAgIG1lcmdlQ29uZmlnICgpIHsNCiAgICAgIGNvbnN0IHsgZGVmYXVsdENvbmZpZywgY29uZmlnIH0gPSB0aGlzDQoNCiAgICAgIHRoaXMubWVyZ2VkQ29uZmlnID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29uZmlnLCB0cnVlKSwgY29uZmlnIHx8IHt9KQ0KICAgIH0sDQogICAgaW5pdEdyYXBoICgpIHsNCiAgICAgIGNvbnN0IHsgZ2V0U2hhcGUsIGdldFN0eWxlLCByZW5kZXJlciwgbWVyZ2VkQ29uZmlnIH0gPSB0aGlzDQoNCiAgICAgIGNvbnN0IHsgYW5pbWF0aW9uQ3VydmUsIGFuaW1hdGlvbkZyYW1lIH0gPSBtZXJnZWRDb25maWcNCg0KICAgICAgY29uc3Qgc2hhcGUgPSBnZXRTaGFwZSgpDQogICAgICBjb25zdCBzdHlsZSA9IGdldFN0eWxlKCkNCg0KICAgICAgdGhpcy5ncmFwaCA9IHJlbmRlcmVyLmFkZCh7DQogICAgICAgIG5hbWU6ICdudW1iZXJUZXh0JywNCiAgICAgICAgYW5pbWF0aW9uQ3VydmUsDQogICAgICAgIGFuaW1hdGlvbkZyYW1lLA0KICAgICAgICBzaGFwZSwNCiAgICAgICAgc3R5bGUNCiAgICAgIH0pDQogICAgfSwNCiAgICBnZXRTaGFwZSAoKSB7DQogICAgICBjb25zdCB7IG51bWJlciwgY29udGVudCwgdG9GaXhlZCwgdGV4dEFsaWduLCByb3dHYXAsIGZvcm1hdHRlciB9ID0gdGhpcy5tZXJnZWRDb25maWcNCg0KICAgICAgY29uc3QgW3csIGhdID0gdGhpcy5yZW5kZXJlci5hcmVhDQoNCiAgICAgIGNvbnN0IHBvc2l0aW9uID0gW3cgLyAyLCBoIC8gMl0NCg0KICAgICAgaWYgKHRleHRBbGlnbiA9PT0gJ2xlZnQnKSBwb3NpdGlvblswXSA9IDANCiAgICAgIGlmICh0ZXh0QWxpZ24gPT09ICdyaWdodCcpIHBvc2l0aW9uWzBdID0gdw0KDQogICAgICByZXR1cm4gew0KICAgICAgICBudW1iZXIsDQogICAgICAgIGNvbnRlbnQsDQogICAgICAgIHRvRml4ZWQsDQogICAgICAgIHBvc2l0aW9uLA0KICAgICAgICByb3dHYXAsDQogICAgICAgIGZvcm1hdHRlcg0KICAgICAgfQ0KICAgIH0sDQogICAgZ2V0U3R5bGUgKCkgew0KICAgICAgY29uc3QgeyBzdHlsZSwgdGV4dEFsaWduIH0gPSB0aGlzLm1lcmdlZENvbmZpZw0KDQogICAgICByZXR1cm4gZGVlcE1lcmdlKHN0eWxlLCB7DQogICAgICAgIHRleHRBbGlnbiwNCiAgICAgICAgdGV4dEJhc2VsaW5lOiAnbWlkZGxlJw0KICAgICAgfSkNCiAgICB9LA0KICAgIHVwZGF0ZSAoKSB7DQogICAgICBjb25zdCB7IG1lcmdlQ29uZmlnLCBtZXJnZVNoYXBlLCBnZXRTaGFwZSwgZ2V0U3R5bGUsIGdyYXBoLCBtZXJnZWRDb25maWcgfSA9IHRoaXMNCg0KICAgICAgZ3JhcGguYW5pbWF0aW9uRW5kKCkNCg0KICAgICAgbWVyZ2VDb25maWcoKQ0KDQogICAgICBpZiAoIWdyYXBoKSByZXR1cm4NCg0KICAgICAgY29uc3QgeyBhbmltYXRpb25DdXJ2ZSwgYW5pbWF0aW9uRnJhbWUgfSA9IG1lcmdlZENvbmZpZw0KDQogICAgICBjb25zdCBzaGFwZSA9IGdldFNoYXBlKCkNCiAgICAgIGNvbnN0IHN0eWxlID0gZ2V0U3R5bGUoKQ0KDQogICAgICBtZXJnZVNoYXBlKGdyYXBoLCBzaGFwZSkNCg0KICAgICAgZ3JhcGguYW5pbWF0aW9uQ3VydmUgPSBhbmltYXRpb25DdXJ2ZQ0KICAgICAgZ3JhcGguYW5pbWF0aW9uRnJhbWUgPSBhbmltYXRpb25GcmFtZQ0KDQogICAgICBncmFwaC5hbmltYXRpb24oJ3N0eWxlJywgc3R5bGUsIHRydWUpDQogICAgICBncmFwaC5hbmltYXRpb24oJ3NoYXBlJywgc2hhcGUpDQogICAgfSwNCiAgICBtZXJnZVNoYXBlIChncmFwaCwgc2hhcGUpIHsNCiAgICAgIGNvbnN0IGNhY2hlTnVtID0gZ3JhcGguc2hhcGUubnVtYmVyLmxlbmd0aA0KICAgICAgY29uc3Qgc2hhcGVOdW0gPSBzaGFwZS5udW1iZXIubGVuZ3RoDQoNCiAgICAgIGlmIChjYWNoZU51bSAhPT0gc2hhcGVOdW0pIGdyYXBoLnNoYXBlLm51bWJlciA9IHNoYXBlLm51bWJlcg0KICAgIH0NCiAgfSwNCiAgbW91bnRlZCAoKSB7DQogICAgY29uc3QgeyBpbml0IH0gPSB0aGlzDQoNCiAgICBpbml0KCkNCiAgfQ0KfQ0K"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";AAOA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/digitalFlop/src","sourcesContent":["<template>\r\n  <div class=\"dv-digital-flop\">\r\n    <canvas ref=\"digital-flop\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CRender from '@jiaminghi/c-render'\r\n\r\nimport '@jiaminghi/charts/lib/extend/index'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvDigitalFlop',\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      renderer: null,\r\n\r\n      defaultConfig: {\r\n        /**\r\n         * @description Number for digital flop\r\n         * @type {Array<Number>}\r\n         * @default number = []\r\n         * @example number = [10]\r\n         */\r\n        number: [],\r\n        /**\r\n         * @description Content formatter\r\n         * @type {String}\r\n         * @default content = ''\r\n         * @example content = '{nt}个'\r\n         */\r\n        content: '',\r\n        /**\r\n         * @description Number toFixed\r\n         * @type {Number}\r\n         * @default toFixed = 0\r\n         */\r\n        toFixed: 0,\r\n        /**\r\n         * @description Text align\r\n         * @type {String}\r\n         * @default textAlign = 'center'\r\n         * @example textAlign = 'center' | 'left' | 'right'\r\n         */\r\n        textAlign: 'center',\r\n        /**\r\n         * @description rowGap\r\n         * @type {Number}\r\n         @default rowGap = 0\r\n         */\r\n        rowGap: 0,\r\n        /**\r\n         * @description Text style configuration\r\n         * @type {Object} {CRender Class Style}\r\n         */\r\n        style: {\r\n          fontSize: 30,\r\n          fill: '#3de7c9'\r\n        },\r\n        /**\r\n         * @description Number formatter\r\n         * @type {Null|Function}\r\n         */\r\n        formatter: undefined,\r\n        /**\r\n         * @description CRender animationCurve\r\n         * @type {String}\r\n         * @default animationCurve = 'easeOutCubic'\r\n         */\r\n        animationCurve: 'easeOutCubic',\r\n        /**\r\n         * @description CRender animationFrame\r\n         * @type {String}\r\n         * @default animationFrame = 50\r\n         */\r\n        animationFrame: 50\r\n      },\r\n\r\n      mergedConfig: null,\r\n\r\n      graph: null\r\n    }\r\n  },\r\n  watch: {\r\n    config () {\r\n      const { update } = this\r\n\r\n      update()\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      const { initRender, mergeConfig, initGraph } = this\r\n\r\n      initRender()\r\n\r\n      mergeConfig()\r\n\r\n      initGraph()\r\n    },\r\n    initRender () {\r\n      const { $refs } = this\r\n\r\n      this.renderer = new CRender($refs['digital-flop'])\r\n    },\r\n    mergeConfig () {\r\n      const { defaultConfig, config } = this\r\n\r\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n    },\r\n    initGraph () {\r\n      const { getShape, getStyle, renderer, mergedConfig } = this\r\n\r\n      const { animationCurve, animationFrame } = mergedConfig\r\n\r\n      const shape = getShape()\r\n      const style = getStyle()\r\n\r\n      this.graph = renderer.add({\r\n        name: 'numberText',\r\n        animationCurve,\r\n        animationFrame,\r\n        shape,\r\n        style\r\n      })\r\n    },\r\n    getShape () {\r\n      const { number, content, toFixed, textAlign, rowGap, formatter } = this.mergedConfig\r\n\r\n      const [w, h] = this.renderer.area\r\n\r\n      const position = [w / 2, h / 2]\r\n\r\n      if (textAlign === 'left') position[0] = 0\r\n      if (textAlign === 'right') position[0] = w\r\n\r\n      return {\r\n        number,\r\n        content,\r\n        toFixed,\r\n        position,\r\n        rowGap,\r\n        formatter\r\n      }\r\n    },\r\n    getStyle () {\r\n      const { style, textAlign } = this.mergedConfig\r\n\r\n      return deepMerge(style, {\r\n        textAlign,\r\n        textBaseline: 'middle'\r\n      })\r\n    },\r\n    update () {\r\n      const { mergeConfig, mergeShape, getShape, getStyle, graph, mergedConfig } = this\r\n\r\n      graph.animationEnd()\r\n\r\n      mergeConfig()\r\n\r\n      if (!graph) return\r\n\r\n      const { animationCurve, animationFrame } = mergedConfig\r\n\r\n      const shape = getShape()\r\n      const style = getStyle()\r\n\r\n      mergeShape(graph, shape)\r\n\r\n      graph.animationCurve = animationCurve\r\n      graph.animationFrame = animationFrame\r\n\r\n      graph.animation('style', style, true)\r\n      graph.animation('shape', shape)\r\n    },\r\n    mergeShape (graph, shape) {\r\n      const cacheNum = graph.shape.number.length\r\n      const shapeNum = shape.number.length\r\n\r\n      if (cacheNum !== shapeNum) graph.shape.number = shape.number\r\n    }\r\n  },\r\n  mounted () {\r\n    const { init } = this\r\n\r\n    init()\r\n  }\r\n}\r\n</script>"]}]}