{"remainingRequest":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\src\\views\\Index.vue?vue&type=style&index=0&id=23543608&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\src\\views\\Index.vue","mtime":1704462006746},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1704126242942},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1704126245443},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\postcss-loader\\src\\index.js","mtime":1704126243595},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\less-loader\\dist\\cjs.js","mtime":1704126244172},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704126242450},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\vue-loader\\lib\\index.js","mtime":1704126244757}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5sb2FkaW5nIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbGVmdDogNTAlOwogIHRvcDogNTAlOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwp9Ci5jZW50LTEtY29udGVudCB7CiAgcGFkZGluZzogMjBweDsKICBkaXNwbGF5OiBmbGV4Owp9Ci5yaWdodC1jb250ZW50IHsKICBtYXJnaW4tbGVmdDogMzBweDsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7Cn0KLnJpZ2h0LWNvbnRlbnQgZGl2IHsKICBkaXNwbGF5OiBmbGV4OwogIGZvbnQtc2l6ZTogMTVweDsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9Ci5mYWRlLWVudGVyLWFjdGl2ZSwKLmZhZGUtbGVhdmUtYWN0aXZlIHsKICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXM7Cn0KLmZhZGUtZW50ZXIsCi5mYWRlLWxlYXZlLXRvIHsKICBvcGFjaXR5OiAwOwp9Ci5jZW50cyB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwp9Ci5hYm92ZSB7CiAgZGlzcGxheTogZmxleDsKfQouYWJvdmVPbmUgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKfQouYWJvdmVUd28gewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKfQouY2VudCB7CiAgd2lkdGg6IDg1MHB4OwogIGhlaWdodDogMzAwcHg7Cn0KCi5jZW50LTEgewogIG1hcmdpbjogMTBweDsKICBjb2xvcjogYWxpY2VibHVlOwogIHdpZHRoOiA1MDBweDsKICBoZWlnaHQ6IDIyMHB4OwogIC8qIGJhY2tncm91bmQtY29sb3I6IHJnYigyNiwgMjYsIDEzMyk7ICovCn0KCi5sZWZ0IHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47Cn0KCi5sZWZ0LTEgewogIG1hcmdpbjogMTVweDsKICBjb2xvcjogYWxpY2VibHVlOwogIHdpZHRoOiA1NTBweDsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47Cn0KLmxlZnQtMiB7CiAgbWFyZ2luOiAxNXB4OwogIGNvbG9yOiBhbGljZWJsdWU7CiAgd2lkdGg6IDUzMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKfQoKLm5hY2EgewogIC8vIHBhZGRpbmc6IDM1cHggMTVweCAwIDE1cHg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICB3aWR0aDogMTAwJTsKICAvLyBoZWlnaHQ6IDQwcmVtOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKfQoubmFjYSAuaW5kZXgtaGVhZGVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoubmFjYSAuaW5kZXgtaGVhZGVyIGRpdiB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9Ci5uYWNhIC5pbmRleC1jb250ZW50IHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmJnIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDQ1cmVtOwogIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoudGl0bGUgewogIGNvbG9yOiAjM2Y5NmE1OwogIGZvbnQtc2l6ZTogMThweDsKICBtYXJnaW4tdG9wOiAtMjBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KLmNvbnRlbnQgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQouY29udGVudC13b3JkIHsKICB3aWR0aDogMTQwcHg7CiAgaGVpZ2h0OiAxMzBweDsKICBiYWNrZ3JvdW5kOiAjMTExOTNlOwogIGJvcmRlci1yYWRpdXM6IDQwcHg7CiAgYm9yZGVyOiAxcHggc29saWQgIzNkM2QzZDsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7Cn0KLmNvbnRlbnQtd29yZC1pdGVtIHsKICBtYXJnaW4tbGVmdDogMTlweDsKICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIGltZyB7CiAgICB3aWR0aDogMjBweDsKICAgIGhlaWdodDogMjBweDsKICB9Cn0KLmNvbnRlbnQtd29yZC1pdGVtLXRpdGxlIHsKICBmb250LXNpemU6IDE4cHg7Cn0KLmNvbnRlbnQtd29yZC1pdGVtLWNvbnRlbnQgewogIG1hcmdpbi10b3A6IDVweDsKCiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9Ci5yb3dfbGlzdCB7CiAgbGlzdC1zdHlsZTogbm9uZTsKfQouY2FzZXNfbGlzdDo6LXdlYmtpdC1zY3JvbGxiYXIgewogIGRpc3BsYXk6IG5vbmU7Cn0KCi5jYXNlc19saXN0IGxpIHsKICBkaXNwbGF5OiBncmlkOwogIC1tcy1ncmlkLWNvbHVtbnM6IDMwcHggMTEwcHggNjBweCA2MHB4IDYwcHggNTBweCAxMDBweDsKICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDMwcHggMTEwcHggNjBweCA2MHB4IDYwcHggNTBweCAxMDBweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgbWFyZ2luLWxlZnQ6IDIzcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGxpbmUtaGVpZ2h0OiAzMHB4OwogIGNvbG9yOiByZ2IoMjM4LCAyMzYsIDIzNik7Cn0KLmxpc3RfdGltZSB7CiAgaGVpZ2h0OiAzMHB4OwogIG92ZXJmbG93OiBhdXRvOwp9Ci5saXN0X3RpbWU6Oi13ZWJraXQtc2Nyb2xsYmFyIHsKICBkaXNwbGF5OiBub25lOwp9Cg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";AA0+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <transition name=\"fade\" mode=\"out-in\">\n      <dv-loading v-if=\"!casesData.length\">\n        <div style=\"color: #fff\">Loading...</div>\n      </dv-loading>\n      <dv-border-box-10\n        ><div class=\"naca\">\n          <div class=\"index-header\" style=\"margin-top: 5px\">\n            <div>\n              <dv-decoration-10\n                style=\"width: 450px; height: 1px; margin-bottom: 45px\"\n              />\n              <dv-decoration-8\n                style=\"width: 180px; height: 50px\"\n                :color=\"['#568aea', '#000000']\"\n              />\n              <div\n                style=\"\n                  width: 150px;\n                  color: #eeecec;\n                  font-size: 18px;\n                  padding: 0 15px;\n                  font-weight: bold;\n                \"\n              >\n                可视化化平台\n              </div>\n              <dv-decoration-8\n                :reverse=\"true\"\n                style=\"width: 180px; height: 50px\"\n                :color=\"['#568aea', '#000000']\"\n              />\n              <dv-decoration-10\n                style=\"\n                  width: 450px;\n                  height: 1px;\n                  transform: rotateY(180deg);\n                  margin-bottom: 45px;\n                \"\n              />\n            </div>\n            <dv-decoration-5\n              style=\"width: 10%; height: 20px\"\n              :color=\"['#568aea', '#000000']\"\n            />\n          </div>\n\n          <div class=\"index-content\">\n            <div class=\"left\">\n              <div class=\"left-1\" style=\"\">\n               \n                <dv-border-box-12><div style=\"padding: 5px\">\n                  <div class=\"title\" style=\"margin-top: 5px\">\n                    各年龄段患病占比\n                  </div>\n\n                  <div ref=\"mains\" style=\"width: 100%; height: 120px\"></div>\n                </div></dv-border-box-12>\n                <dv-border-box-8><div style=\"padding: 5px;padding-bottom:30px\">\n                  <div class=\"title\" style=\"margin-top: 1px\">疾病类型分布</div>\n                  <dv-capsule-chart\n                    :config=\"config1\"\n                    style=\"width: 80%; height: 110px\"\n                  />\n                </div></dv-border-box-8>\n                \n                <dv-border-box-3><div style=\"padding: 15px\">\n                  <div class=\"title\" style=\"margin-top: 5px\">病例列表</div>\n                  <!-- <div ref=\"timeZhou\" style=\"width: 100%; height: 350px\"></div> -->\n                  <div class=\"row_list\" style=\"\">\n                    <ul\n                      class=\"cases_list\"\n                      style=\"width: 100%; height: 159px; overflow: auto\"\n                    >\n                      <li style=\"font-size: 15px; \">\n                        <div>编号</div>\n                        <div>求诊类型</div>\n                        <div>性别</div>\n                        <div>年龄</div>\n                        <div>身高</div>\n                        <div>体重</div>\n                        <div>患病时长</div>\n                      </li>\n                      <li v-for=\"cases in casesData\">\n                        <div>{{ cases[0] }}</div>\n                        <div>{{ cases[1] }}</div>\n                        <div>{{ cases[2] }}</div>\n                        <div>{{ cases[3] }}</div>\n                        <div>{{ cases[10] }}</div>\n                        <div>{{ cases[11] }}</div>\n                        <div\n                          class=\"list_time\"\n                          style=\"height: 30px; overflow: auto\"\n                        >\n                          {{ cases[12] }}\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div></dv-border-box-3>\n               \n\n                \n              </div>\n            </div>\n            <div class=\"cents\">\n              <div class=\"above\">\n                <div class=\"aboveOne\">\n                  <div style=\"padding: 15px\">\n                    <div class=\"title\">疾病数据信息</div>\n                    <div\n                      style=\"\n                        display: flex;\n                        flex-direction: column;\n                        width: 100%;\n                        height: 120px;\n                        color: #eeecec;\n                      \"\n                    >\n                      <div style=\"display: flex; flex: 1\">\n                        <dv-decoration-11\n                          style=\"height: 60px; text-align: center\"\n                          ><div style=\"flex: 1\">\n                            数据数量:{{ centerData.maxNum }}\n                          </div></dv-decoration-11\n                        >\n\n                        <dv-decoration-11\n                          style=\"height: 60px; text-align: center\"\n                          ><div style=\"flex: 1\">\n                            最多疾病类型: <br />{{ centerData.maxType }}\n                          </div></dv-decoration-11\n                        >\n\n                        <dv-decoration-11\n                          style=\"height: 60px; text-align: center\"\n                          ><div style=\"flex: 1\">\n                            求诊最多科室:{{ centerData.maxDep }}\n                          </div></dv-decoration-11\n                        >\n                      </div>\n                      <div style=\"display: flex; flex: 1\">\n                        <dv-decoration-11\n                          style=\"height: 60px; text-align: center\"\n                          ><div style=\"flex: 1\">\n                            最大患者年龄:{{ centerData.maxAge }}\n                          </div></dv-decoration-11\n                        >\n\n                        <dv-decoration-11\n                          style=\"height: 60px; text-align: center\"\n                          ><div style=\"flex: 1\">\n                            最小患者年龄:{{ centerData.minAge }}\n                          </div></dv-decoration-11\n                        >\n\n                        <dv-decoration-11\n                          style=\"height: 60px; text-align: center\"\n                          ><div style=\"flex: 1\">\n                            热门医院: {{ centerData.maxHos }}\n                          </div></dv-decoration-11\n                        >\n                      </div>\n                    </div>\n                  </div>\n                  <div style=\"padding: 15px\">\n                    <div class=\"title\" style=\"margin-top: -30px\">\n                      男女性别患病对比\n                    </div>\n                    <div class=\"content\">\n                      <dv-active-ring-chart\n                        :config=\"config2\"\n                        style=\"width: 150px; height: 100px\"\n                      />\n\n                      <dv-water-level-pond\n                        :config=\"config8\"\n                        style=\"width: 100px; height: 90px\"\n                      />\n                      <dv-active-ring-chart\n                        :config=\"config3\"\n                        style=\"width: 150px; height: 100px\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"aboveTwo\">\n                  <dv-border-box-9 :color=\"['#568aea']\"> <div style=\"padding: 15px\">\n                  <div class=\"title\" style=\"margin-top: 5px\">\n                    医院科室环形图\n                  </div>\n                  <div id=\"mainRight\" style=\"width: 100%; height: 110px\"></div>\n                </div></dv-border-box-9>\n                  <dv-border-box-1><div style=\"padding: 5px\">\n                    <div class=\"title\" style=\"margin-top: 5px\">\n                      疾病关键词云图\n                    </div>\n                    <div\n                      ref=\"mainRightBottom\"\n                      style=\"width: 400px; height: 90px\"\n                    ></div>\n                  </div></dv-border-box-1>\n                  \n                </div>\n              </div>\n              <div class=\"below\">\n                \n                  <dv-border-box-13>\n                    <div style=\"padding: 7px\">\n                      <div class=\"title\" style=\"margin-top: 5px\">\n                        患病身高体重平均数图\n                      </div>\n                      <div\n                        ref=\"mainRightTop\"\n                        style=\"width: 100%; height: 200px; margin-top: 25px\"\n                      ></div>\n                    </div>\n                  </dv-border-box-13>\n                \n              </div>\n            </div>\n          </div></div\n      ></dv-border-box-10>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport $ from \"jquery\";\nimport mapJson from \"@/assets/mapData/china.json\";\nimport LeftTop from \"@/components/LeftTop.vue\";\nfunction formatter(number) {\n  const numbers = number.toString().split(\"\").reverse();\n  const segs = [];\n\n  while (numbers.length) segs.push(numbers.splice(0, 3).join(\"\"));\n\n  return segs.join(\",\").split(\"\").reverse().join(\"\");\n}\nexport default {\n  name: \"Index\",\n  data() {\n    return {\n      casesData: \"\",\n      index1: 6,\n      index2: 8,\n      index3: 8,\n      index4: 8,\n      index5: 8,\n      index6: 5,\n      index7: 5,\n      index10: 80,\n      config1Data: [],\n      config2Data: [],\n      config3Data: [],\n      config4Data: [],\n      boyRatio:0,\n      girlRatio:0,\n      currentIndex: 0,\n      config5Data: [],\n      config6Data: [],\n      config7Data: [],\n      config10Data: [],\n      centerData: {\n        maxNum: \"\",\n        maxType: \"\",\n        maxDep: \"\",\n        maxHos: \"\",\n        maxAge: \"\",\n        minAge: \"\",\n      },\n      config1: {\n        data: [],\n        colors: [\"#e062ae\", \"#fb7293\", \"#e690d1\", \"#32c5e9\", \"#96bfff\"],\n        showValue: true,\n      },\n      config2: {\n        lineWidth: 20,\n        radius: \"55%\",\n        activeTimeGap: 2000,\n        digitalFlopStyle: {\n          fontSize: 13,\n        },\n        activeRadius: \"60%\",\n        data: [],\n      },\n      config3: {\n        lineWidth: 20,\n        radius: \"55%\",\n        activeTimeGap: 3000,\n        activeRadius: \"60%\",\n        data: [],\n        digitalFlopStyle: {\n          fontSize: 13,\n        },\n      },\n      config4: [],\n      config5: [],\n      config6: {},\n      config7: [],\n      config8: {\n        data: [54, 30],\n        shape: \"roundRect\",\n      },\n      // config9: {\n      //   number: [81473111], //初始数据\n      //   content: \"{nt}\",\n      //   style: {\n      //     fontSize: 20, //字体大小\n      //   },\n      //   formatter,\n      // },\n      config10: [],\n    };\n  },\n  // mounted() {\n  //   this.$echarts.registerMap(\"china\", mapJson);\n  // },\n  async created() {\n    $(document).ready(async () => {\n      // await this.getHomeDataAxios();\n      // setTimeout(() => {\n      //   this.setTimeZhou();\n      // }, 1000);\n      setInterval(() => {\n       this.setConfig5Data();\n        // this.setConfig3Data();\n        this.setConfig4Data();\n      }, 1000);\n       \n      setInterval(() => {\n        this.setConfig7Data();\n      }, 3000);\n      setInterval(() => {\n        this.setConfig1Data();\n        this.setConfig6Data();\n      }, 2000);\n\n      // setInterval(() => {\n      //   this.setConfig2Data();\n      // }, 8000);\n      // setInterval(() => {\n      //   this.power(10000000);\n      // }, 3000);\n    });\n  },\n  async mounted() {\n    // this.updateBarChart()\n     await this.delay(1500);\n      const res = await this.$http.get(\"/getHomeData\");\n      // 左上数据\n      this.config1.data = res.data.top20CityNum.slice(0, this.index1);\n      this.config1Data = res.data.top20CityNum;\n      this.config5Data = res.data.top20CityNum;\n      // 右下数据\n      // this.config5 = res.data.top20CityNum.slice(0, this.index5);\n      this.config5 = res.data.top20CityNum.slice(0, 10);\n      // 左中数据\n      this.config2.data = res.data.cityDicResult.slice(0, this.index2);\n      this.config2Data = res.data.cityDicResult;\n      this.config3.data = res.data.cityDicTwoResult;\n      this.config3Data = res.data.cityDicTwoResult;\n      this.boyRatio = res.data.boyRatio\n      this.girlRatio = res.data.girlRatio\n      this.config8.data = res.data.ratioData\n      \n      // 左下数据\n      this.config4Data = res.data.mvaData;\n      this.config4 = res.data.mvaData.slice(0, this.index4);\n      // 右上数据\n      this.config6Data = res.data.MVData;\n      this.config6.xData = res.data.MVData.xData.slice(0, this.index6);\n      this.config6.y1Data = res.data.MVData.y1Data.slice(0, this.index6);\n      this.config6.y2Data = res.data.MVData.y2Data.slice(0, this.index6);\n      // 右中数据\n      this.config7Data = res.data.cityPrice;\n      this.config7 = res.data.cityPrice.slice(0, this.index7);\n      // 中部地图数据\n      // this.config10Data = res.data.mw2;\n      // this.config10 = res.data.mw2;\n      this.centerData.maxNum = res.data.maxNum;\n      this.centerData.maxType = res.data.maxType;\n      this.centerData.maxDep = res.data.maxDep;\n      this.centerData.maxHos = res.data.maxHos;\n      this.centerData.maxAge = res.data.maxAge;\n      this.centerData.minAge = res.data.minAge;\n      this.casesData = res.data.casesData;\n  },\n  methods: {\n    power(n) {\n      this.config9.number[0] = Math.floor(Math.random() * n + 1);\n      this.config9 = { ...this.config9 }; //对象解构，更新props\n    },\n    // setTimeZhou() {\n    //   var chartDom = this.$refs.timeZhou;\n    //   var myChart = this.$echarts.init(chartDom);\n    //   var yearArr = [\"2019\", \"2020\", \"2021\"];\n    //   var option = {\n    //     timeline: {\n    //       data: yearArr,\n    //       axisType: \"category\",\n    //       autoPlay: true,\n    //       playInterval: 3000,\n    //       left: \"10%\",\n    //       right: \"10%\",\n    //       bottom: \"10%\",\n    //       width: \"80%\",\n    //       label: {\n    //         normal: {\n    //           textStyle: {\n    //             color: \"#ddd\",\n    //           },\n    //         },\n    //         emphasis: {\n    //           textStyle: {\n    //             color: \"#fff\",\n    //           },\n    //         },\n    //       },\n    //       symbolSize: 10,\n    //       lineStyle: {\n    //         color: \"#555\",\n    //       },\n    //       checkpointStyle: {\n    //         borderColor: \"#888\",\n    //         borderWidth: 2,\n    //       },\n    //       controlStyle: {\n    //         showNextBtn: true,\n    //         showPrevBtn: true,\n    //         normal: {\n    //           color: \"#666\",\n    //           borderColor: \"#666\",\n    //         },\n    //         emphasis: {\n    //           color: \"#aaa\",\n    //           borderColor: \"#aaa\",\n    //         },\n    //       },\n    //     },\n    //     baseOption: {\n    //       geo: {\n    //         show: true,\n    //         map: \"china\",\n    //         roam: true,\n    //         zoom: 1,\n    //         center: [105, 30],\n    //         itemStyle: {\n    //           normal: {\n    //             borderColor: \"rgba(147,235,248,1)\",\n    //             borderWidth: 1,\n    //             areaColor: {\n    //               type: \"radial\",\n    //               x: 0.5,\n    //               y: 0.5,\n    //               r: 0.5,\n    //               colorStops: [\n    //                 {\n    //                   offset: 0,\n    //                   color: \"rgba(147,238,248,0)\",\n    //                 },\n    //                 {\n    //                   offset: 1,\n    //                   color: \"rgba(147,235,248,.2)\",\n    //                 },\n    //               ],\n    //             },\n    //           },\n    //         },\n    //         emphasis: {\n    //           areaColor: \"#389BB7\",\n    //           borderWidth: 0,\n    //         },\n    //       },\n    //     },\n    //     options: [],\n    //   };\n    //   var colorsIndex = [\"#e062ae\", \"#fb7293\", \"#e690d1\", \"#32c5e9\", \"#96bfff\"];\n    //   yearArr.forEach((item, index) => {\n    //     option.options.push({\n    //       series: [\n    //         {\n    //           type: \"effectScatter\",\n    //           coordinateSystem: \"geo\",\n    //           data: this.config10[item],\n    //           symbolSize: function (val) {\n    //             return val[2] / 4;\n    //           },\n    //           showEffectOn: \"render\",\n    //           rippleEffect: {\n    //             brushType: \"stroke\",\n    //           },\n    //           label: {\n    //             normal: {\n    //               formatter: \"{b}\",\n    //               position: \"right\",\n    //               show: true,\n    //             },\n    //           },\n    //           itemStyle: {\n    //             normal: {\n    //               color: colorsIndex[index],\n    //               shadowBlur: 5,\n    //               shadowColor: colorsIndex[index],\n    //             },\n    //           },\n    //           zlevel: 1,\n    //         },\n    //       ],\n    //     });\n    //   });\n\n    //   option && myChart.setOption(option);\n    // },\n    randomRGB() {\n      const r = Math.floor(Math.random() * 255);\n      const g = Math.floor(Math.random() * 255);\n      const b = Math.floor(Math.random() * 255);\n      return `rgb(${r},${g},${b})`;\n    },\n    getSeriesData() {\n      const series = [];\n      this.config7.forEach((item, index) => {\n        series.push({\n          name: item.name,\n          type: \"pie\",\n          clockWise: false,\n          hoverAnimation: false,\n          radius: [73 - index * 15 + \"%\", 68 - index * 15 + \"%\"],\n          center: [\"50%\", \"50%\"],\n          label: {\n            show: false,\n          },\n          data: [\n            {\n              value: item.value,\n              name: item.name,\n            },\n            {\n              value: 3,\n              itemStyle: {\n                color: \"rgba(0,0,0,0)\",\n                borderWidth: 0,\n              },\n              tooltip: {\n                show: false,\n              },\n              hoverAnimation: false,\n            },\n          ],\n        });\n\n        series.push({\n          name: item.name,\n          type: \"pie\",\n          silent: true,\n          z: 1,\n          clockWise: false,\n          hoverAnimation: false,\n          radius: [73 - index * 15 + \"%\", 68 - index * 15 + \"%\"],\n          center: [\"50%\", \"45%\"],\n          label: {\n            show: false,\n          },\n          data: [\n            {\n              value: 7.5,\n              itemStyle: {\n                color: \"rgb(3,31,62)\",\n                borderWidth: 0,\n              },\n              tooltip: {\n                show: false,\n              },\n              hoverAnimation: false,\n            },\n            {\n              value: 2.5,\n              itemStyle: {\n                color: \"rgba(0,0,0,0)\",\n                borderWidth: 0,\n              },\n              tooltip: {\n                show: false,\n              },\n              hoverAnimation: false,\n            },\n          ],\n        });\n      });\n      return series;\n    },\n    delay(ms) {\n      return new Promise((resolve) => setTimeout(resolve, ms));\n    },\n    async getHomeDataAxios() {\n     \n    },\n    setConfig1Data() {\n      if (this.index1 >= this.config1Data.length) {\n        this.index1 = 0;\n      }\n      var newData = this.config1.data;\n      // newData.shift();\n      // newData.push(this.config1Data[this.index1]);\n       this.changeData(newData);\n      this.config1 = {\n        data: newData,\n        showValue: true,\n      };\n      // this.index1 = ++this.index1;\n    },\n    // setConfig2Data() {\n    //   if (this.index2 >= this.config2Data.length) {\n    //     this.index2 = 0;\n    //   }\n    //   var newData = this.config2.data;\n    //   newData.shift();\n    //   newData.push(this.config2Data[this.index2]);\n    //   this.config2 = {\n    //     data: newData,\n    //     lineWidth: 20,\n    //     radius: \"55%\",\n    //     activeTimeGap: 2000,\n    //     digitalFlopStyle: {\n    //       fontSize: 15,\n    //     },\n    //     activeRadius: \"60%\",\n    //   };\n    //   this.index2 = ++this.index2;\n    // },\n    // setConfig3Data() {\n    //   if (this.index3 >= this.config3Data.length) {\n    //     this.index3 = 0;\n    //   }\n    //   var newData = this.config3.data;\n    //   // newData.shift();\n    //   // newData.push(this.config3Data[this.index3]);\n    //   this.config3 = {\n    //     data: newData,\n    //     lineWidth: 20,\n    //     radius: \"55%\",\n    //     activeTimeGap: 3000,\n    //     activeRadius: \"60%\",\n    //     digitalFlopStyle: {\n    //       fontSize: 15,\n    //     },\n    //   };\n    //   this.index3 = ++this.index3;\n    // },\n    loopAnimation() {\n      setInterval(() => {}, 2000);\n    },\n    setConfig4Data() {\n      $(document).ready(() => {\n        var chartDom = this.$refs.mains;\n        var myChart = this.$echarts.init(chartDom);\n        var option;\n        myChart.dispatchAction({\n          type: \"downplay\",\n          seriesIndex: 0,\n          dataIndex: this.currentIndex,\n        });\n        this.currentIndex = (this.currentIndex + 1) % this.config4.length;\n\n        myChart.dispatchAction({\n          type: \"highlight\",\n          seriesIndex: 0,\n          dataIndex: this.currentIndex,\n        });\n        var newData = this.config4;\n        // newData.shift();\n        // newData.push(this.config4Data[this.index4]);\n        this.config4 = newData;\n        // this.index4 = ++this.index4;\n        var option = {\n          color: [\n            \"#37a2da\",\n            \"#32c5e9\",\n            \"#9fe6b8\",\n            \"#ffdb5c\",\n            \"#ff9f7f\",\n            \"#fb7293\",\n            \"#e7bcf3\",\n            \"#8378ea\",\n          ],\n\n          tooltip: {\n            trigger: \"item\",\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\",\n          },\n          toolbox: {\n            show: true,\n          },\n          calculable: true,\n          legend: {\n            orient: 'vertical',\n            icon: \"circle\",\n            left: 0,\n            x: \"center\",\n            data: this.config4.map((item) => item.name),\n            textStyle: {\n              color: \"#fff\",\n            },\n          },\n          series: [\n            {\n              name: \"销量总占比\",\n              type: \"pie\",\n              radius: [20, 50],\n              roseType: \"area\",\n              center: [\"50%\", \"55%\"],\n              data: this.config4,\n              emphasis: {\n                itemStyle: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  lable: {\n                    show: true,\n                  },\n                },\n              },\n            },\n          ],\n        };\n        option && myChart.setOption(option);\n      });\n    },\n    setConfig5Data() {\n      $(document).ready(() => {\n        if (this.index5 >= this.config5Data.length) {\n          this.index5 = 8;\n        }\n        // var newData = this.config5Data.slice(0, this.index5);\n        var newData = this.config5Data;\n        \n        // newData.shift();\n        // newData.push(this.config5Data[this.index5]);\n        this.config5 = newData;\n        console.log(newData);\n        this.index5 = ++this.index5;\n\n        var chartDom = this.$refs.mainRightBottom;\n        var myChart = this.$echarts.init(chartDom);\n        var option = {\n          series: [\n            {\n              type: \"wordCloud\",\n              sizeRange: [10, 30],\n              rotationRange: [0, 0],\n              gridSize: 0,\n              layoutAnimation: true,\n              textStyle: {\n                color: this.randomRGB,\n              },\n              emphasis: {\n                textStyle: {\n                  fontWeight: \"bold\",\n                  color: \"#fff\",\n                },\n              },\n              data: this.config5,\n            },\n          ],\n        };\n        option && myChart.setOption(option);\n      });\n    },\n    changeData(x) {\n      var st = x[0];\n      for (var i = 0; i < x.length - 1; i++) {\n        x[i] = x[i + 1];\n      }\n      x[x.length - 1] = st;\n    },\n    updateBarChart() {\n      this.changeData(this.config6.xData);\n      this.changeData(this.config6.y1Data);\n      this.changeData(this.config6.y2Data);\n      // console.log(this.cdata.category)\n      this.myChart.setOption({\n        xAxis: {\n          data: this.config6.xData,\n        },\n        series: [\n          {\n            data: this.config6.y1Data,\n          },\n          {\n            data: this.config6.y2Data,\n          },\n        ],\n      });\n    },\n    stratDataUpdateInterval() {\n      if (this.isHovered == true) {\n        const interval = 3000;\n        clearInterval(this.timer);\n        setInterval(this.updateBarChart, interval);\n      }\n    },\n    setConfig6Data() {\n      $(document).ready(() => {\n        // if (this.index6 >= this.config6Data.xData.length - 1) {\n        //   this.index6 = 0;\n        // }\n        var newData = this.config6Data;\n        console.log(newData);\n        // newData.xData.shift();\n        // newData.y1Data.shift();\n        // newData.y2Data.shift();\n        // newData.xData.push(this.config6Data.xData[this.index6]);\n        // newData.y1Data.push(this.config6Data.y1Data[this.index6]);\n        // newData.y2Data.push(this.config6Data.y2Data[this.index6]);\n        this.changeData(newData.xData);\n        this.changeData(newData.y1Data);\n        this.changeData(newData.y2Data);\n        console.log(newData.xData);\n        this.config6 = newData;\n        // this.index6 = ++this.index6;\n        console.log(this.config6);\n        var chartDom = this.$refs.mainRightTop;\n        var myChart = this.$echarts.init(chartDom);\n        var option = {\n          tooltip: {\n            trigger: \"axis\",\n            backgroundColor: \"rgba(255,255,255,0.1)\",\n            axisPointer: {\n              type: \"shadow\",\n              label: {\n                show: true,\n                backgroundColor: \"#7B7DDC\",\n              },\n            },\n          },\n          dataZoom: [\n            {\n              type: \"slider\",\n              start: 0,\n              end: 80,\n              show: false,\n            },\n          ],\n          legend: {\n            data: [\"身高\", \"体重\"],\n            textStyle: {\n              color: \"#B4B4B4\",\n            },\n            top: \"0%\",\n          },\n          grid: {\n            x: \"8%\",\n            width: \"85%\",\n            height: \"87%\",\n            y: \"4%\",\n          },\n\n          xAxis: {\n            data: this.config6.xData,\n            axisLine: {\n              lineStyle: {\n                color: \"#B4B4B4\",\n              },\n            },\n            axisLabel: {\n              show: true,\n              interval: 0,\n            },\n            axisTick: {\n              show: false,\n            },\n          },\n          yAxis: [\n            {\n              splitLine: { show: false },\n              axisLine: {\n                lineStyle: {\n                  color: \"#B4B4B4\",\n                },\n              },\n\n              axisLabel: {\n                formatter: \"{value} \",\n              },\n            },\n            {\n              splitLine: { show: false },\n              axisLine: {\n                lineStyle: {\n                  color: \"#B4B4B4\",\n                },\n              },\n              axisLabel: {\n                formatter: \"{value} \",\n              },\n            },\n          ],\n          series: [\n            {\n              name: \"身高\",\n              type: \"line\",\n              smooth: true,\n              showAllSymbol: true,\n              symbol: \"emptyCircle\",\n              symbolSize: 8,\n              yAxisIndex: 1,\n              // areaStyle: {},\n              itemStyle: {\n                normal: {\n                  barBorderRadius: 5,\n                  color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    { offset: 0, color: \"#5C4033\" },\n                    { offset: 1, color: \"#FAEBD7\" },\n                  ]),\n                },\n              },\n              data: this.config6.y1Data,\n            },\n            {\n              name: \"体重\",\n              type: \"bar\",\n              barWidth: \"60%\",\n              itemStyle: {\n                normal: {\n                  barBorderRadius: 5,\n                  color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    { offset: 0, color: \"#082e53\" },\n                    { offset: 1, color: \"white\" },\n                  ]),\n                },\n              },\n              data: this.config6.y2Data,\n            },\n          ],\n        };\n        option && myChart.setOption(option);\n      });\n    },\n    setConfig7Data() {\n      $(document).ready(() => {\n        // if (this.index7 >= this.config7Data.length) {\n        //   this.index7 = 0;\n        // }\n        var newData = this.config7;\n        // newData.shift();\n        // newData.push(this.config7Data[this.index7]);\n        this.changeData(newData);\n        this.config7 = newData;\n        // this.index7 = ++this.index7;\n\n        var chartDom = document.getElementById(\"mainRight\");\n        var myChart = this.$echarts.init(chartDom);\n        var option = {\n          legend: {\n            show: true,\n            icon: \"circle\",\n            top: \"8%\",\n            left: \"10%\",\n            data: this.config7.map((item) => item.name),\n            width: -5,\n            itemWidth: 10,\n            itemHeight: 10,\n            itemGap: 6,\n            textStyle: {\n              fontSize: 12,\n              lineHeight: 5,\n              color: \"#ffffff\",\n            },\n          },\n          tooltip: {\n            show: true,\n            trigger: \"item\",\n            formatter: \"{b}<br>{c}({d}%)\",\n          },\n          yAxis: [\n            {\n              type: \"category\",\n              inverse: true,\n              axisLine: {\n                show: false,\n              },\n            },\n          ],\n          xAxis: [\n            {\n              show: true,\n            },\n          ],\n          series: this.getSeriesData(),\n        };\n        option && myChart.setOption(option);\n      });\n    },\n  },\n  components: {\n    LeftTop,\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.loading {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n.cent-1-content {\n  padding: 20px;\n  display: flex;\n}\n.right-content {\n  margin-left: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n}\n.right-content div {\n  display: flex;\n  font-size: 15px;\n  align-items: center;\n}\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.5s;\n}\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n.cents {\n  display: flex;\n  flex-direction: column;\n}\n.above {\n  display: flex;\n}\n.aboveOne {\n  display: flex;\n  flex-direction: column;\n}\n.aboveTwo {\n  display: flex;\n  flex-direction: column;\n}\n.cent {\n  width: 850px;\n  height: 300px;\n}\n\n.cent-1 {\n  margin: 10px;\n  color: aliceblue;\n  width: 500px;\n  height: 220px;\n  /* background-color: rgb(26, 26, 133); */\n}\n\n.left {\n  display: flex;\n  flex-direction: column;\n}\n\n.left-1 {\n  margin: 15px;\n  color: aliceblue;\n  width: 550px;\n  display: flex;\n  flex-direction: column;\n}\n.left-2 {\n  margin: 15px;\n  color: aliceblue;\n  width: 530px;\n  display: flex;\n  flex-direction: column;\n}\n\n.naca {\n  // padding: 35px 15px 0 15px;\n  box-sizing: border-box;\n  width: 100%;\n  // height: 40rem;\n  display: flex;\n  flex-direction: column;\n}\n.naca .index-header {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.naca .index-header div {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.naca .index-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.bg {\n  width: 100%;\n  height: 45rem;\n  background-color: black;\n  position: relative;\n}\n.title {\n  color: #3f96a5;\n  font-size: 18px;\n  margin-top: -20px;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-weight: bold;\n}\n.content {\n  display: flex;\n  align-items: center;\n}\n.content-word {\n  width: 140px;\n  height: 130px;\n  background: #11193e;\n  border-radius: 40px;\n  border: 1px solid #3d3d3d;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.content-word-item {\n  margin-left: 19px;\n  margin-bottom: 10px;\n  img {\n    width: 20px;\n    height: 20px;\n  }\n}\n.content-word-item-title {\n  font-size: 18px;\n}\n.content-word-item-content {\n  margin-top: 5px;\n\n  display: flex;\n  align-items: center;\n}\n.row_list {\n  list-style: none;\n}\n.cases_list::-webkit-scrollbar {\n  display: none;\n}\n\n.cases_list li {\n  display: grid;\n  -ms-grid-columns: 30px 110px 60px 60px 60px 50px 100px;\n  grid-template-columns: 30px 110px 60px 60px 60px 50px 100px;\n  cursor: pointer;\n  margin-left: 23px;\n  text-align: center;\n  line-height: 30px;\n  color: rgb(238, 236, 236);\n}\n.list_time {\n  height: 30px;\n  overflow: auto;\n}\n.list_time::-webkit-scrollbar {\n  display: none;\n}\n</style>"]}]}