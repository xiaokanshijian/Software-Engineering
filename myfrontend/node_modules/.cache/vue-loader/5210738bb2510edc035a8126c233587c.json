{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration6\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration6\\src\\main.vue","mtime":1713594891407},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXV0b1Jlc2l6ZSBmcm9tICcuLi8uLi8uLi9taXhpbi9hdXRvUmVzaXplJw0KDQppbXBvcnQgeyByYW5kb21FeHRlbmQgfSBmcm9tICcuLi8uLi8uLi91dGlsJw0KDQppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCcNCg0KaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ0R2RGVjb3JhdGlvbjYnLA0KICBtaXhpbnM6IFthdXRvUmVzaXplXSwNCiAgcHJvcHM6IHsNCiAgICBjb2xvcjogew0KICAgICAgdHlwZTogQXJyYXksDQogICAgICBkZWZhdWx0OiAoKSA9PiAoW10pDQogICAgfQ0KICB9LA0KICBkYXRhICgpIHsNCiAgICBjb25zdCByZWN0V2lkdGggPSA3DQoNCiAgICByZXR1cm4gew0KICAgICAgcmVmOiAnZGVjb3JhdGlvbi02JywNCg0KICAgICAgc3ZnV0g6IFszMDAsIDM1XSwNCg0KICAgICAgc3ZnU2NhbGU6IFsxLCAxXSwNCg0KICAgICAgcm93TnVtOiAxLA0KICAgICAgcm93UG9pbnRzOiA0MCwNCg0KICAgICAgcmVjdFdpZHRoLA0KICAgICAgaGFsZlJlY3RXaWR0aDogcmVjdFdpZHRoIC8gMiwNCg0KICAgICAgcG9pbnRzOiBbXSwNCiAgICAgIGhlaWdodHM6IFtdLA0KICAgICAgbWluSGVpZ2h0czogW10sDQogICAgICByYW5kb21zOiBbXSwNCg0KICAgICAgZGVmYXVsdENvbG9yOiBbJyM3YWNhZWMnLCAnIzdhY2FlYyddLA0KDQogICAgICBtZXJnZWRDb2xvcjogW10NCiAgICB9DQogIH0sDQogIHdhdGNoOiB7DQogICAgY29sb3IgKCkgew0KICAgICAgY29uc3QgeyBtZXJnZUNvbG9yIH0gPSB0aGlzDQoNCiAgICAgIG1lcmdlQ29sb3IoKQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFmdGVyQXV0b1Jlc2l6ZU1peGluSW5pdCAoKSB7DQogICAgICBjb25zdCB7IGNhbGNTVkdEYXRhIH0gPSB0aGlzDQoNCiAgICAgIGNhbGNTVkdEYXRhKCkNCiAgICB9LA0KICAgIGNhbGNTVkdEYXRhICgpIHsNCiAgICAgIGNvbnN0IHsgY2FsY1BvaW50c1Bvc2l0aW9uLCBjYWxjU2NhbGUgfSA9IHRoaXMNCg0KICAgICAgY2FsY1BvaW50c1Bvc2l0aW9uKCkNCg0KICAgICAgY2FsY1NjYWxlKCkNCiAgICB9LA0KICAgIGNhbGNQb2ludHNQb3NpdGlvbiAoKSB7DQogICAgICBjb25zdCB7IHN2Z1dILCByb3dOdW0sIHJvd1BvaW50cyB9ID0gdGhpcw0KDQogICAgICBjb25zdCBbdywgaF0gPSBzdmdXSA0KDQogICAgICBjb25zdCBob3Jpem9udGFsR2FwID0gdyAvIChyb3dQb2ludHMgKyAxKQ0KICAgICAgY29uc3QgdmVydGljYWxHYXAgPSBoIC8gKHJvd051bSArIDEpDQoNCiAgICAgIGxldCBwb2ludHMgPSBuZXcgQXJyYXkocm93TnVtKS5maWxsKDApLm1hcCgoZm9vLCBpKSA9Pg0KICAgICAgICBuZXcgQXJyYXkocm93UG9pbnRzKS5maWxsKDApLm1hcCgoZm9vLCBqKSA9PiBbDQogICAgICAgICAgaG9yaXpvbnRhbEdhcCAqIChqICsgMSksIHZlcnRpY2FsR2FwICogKGkgKyAxKQ0KICAgICAgICBdKSkNCg0KICAgICAgdGhpcy5wb2ludHMgPSBwb2ludHMucmVkdWNlKChhbGwsIGl0ZW0pID0+IFsuLi5hbGwsIC4uLml0ZW1dLCBbXSkNCiAgICAgIGNvbnN0IGhlaWdodHMgPSB0aGlzLmhlaWdodHMgPSBuZXcgQXJyYXkocm93TnVtICogcm93UG9pbnRzKQ0KICAgICAgICAuZmlsbCgwKS5tYXAoZm9vID0+DQogICAgICAgICAgTWF0aC5yYW5kb20oKSA+IDAuOCA/IHJhbmRvbUV4dGVuZCgwLjcgKiBoLCBoKSA6IHJhbmRvbUV4dGVuZCgwLjIgKiBoLCAwLjUgKiBoKSkNCg0KICAgICAgdGhpcy5taW5IZWlnaHRzID0gbmV3IEFycmF5KHJvd051bSAqIHJvd1BvaW50cykNCiAgICAgICAgLmZpbGwoMCkubWFwKChmb28sIGkpID0+IGhlaWdodHNbaV0gKiBNYXRoLnJhbmRvbSgpKQ0KDQogICAgICB0aGlzLnJhbmRvbXMgPSBuZXcgQXJyYXkocm93TnVtICogcm93UG9pbnRzKQ0KICAgICAgICAuZmlsbCgwKS5tYXAoZm9vID0+IE1hdGgucmFuZG9tKCkgKyAxLjUpDQogICAgfSwNCiAgICBjYWxjU2NhbGUgKCkgew0KICAgICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0LCBzdmdXSCB9ID0gdGhpcw0KDQogICAgICBjb25zdCBbdywgaF0gPSBzdmdXSA0KDQogICAgICB0aGlzLnN2Z1NjYWxlID0gW3dpZHRoIC8gdywgaGVpZ2h0IC8gaF0NCiAgICB9LA0KICAgIG9uUmVzaXplICgpIHsNCiAgICAgIGNvbnN0IHsgY2FsY1NWR0RhdGEgfSA9IHRoaXMNCg0KICAgICAgY2FsY1NWR0RhdGEoKQ0KICAgIH0sDQogICAgbWVyZ2VDb2xvciAoKSB7DQogICAgICBjb25zdCB7IGNvbG9yLCBkZWZhdWx0Q29sb3IgfSA9IHRoaXMNCg0KICAgICAgdGhpcy5tZXJnZWRDb2xvciA9IGRlZXBNZXJnZShkZWVwQ2xvbmUoZGVmYXVsdENvbG9yLCB0cnVlKSwgY29sb3IgfHwgW10pDQogICAgfQ0KICB9LA0KICBtb3VudGVkICgpIHsNCiAgICBjb25zdCB7IG1lcmdlQ29sb3IgfSA9IHRoaXMNCg0KICAgIG1lcmdlQ29sb3IoKQ0KICB9DQp9DQo="},{"version":3,"sources":["main.vue"],"names":[],"mappings":";AAyCA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/decoration6/src","sourcesContent":["<template>\r\n  <div class=\"dv-decoration-6\" :ref=\"ref\">\r\n    <svg :width=\"`${svgWH[0]}px`\" :height=\"`${svgWH[1]}px`\" :style=\"`transform:scale(${svgScale[0]},${svgScale[1]});`\">\r\n      <template\r\n        v-for=\"(point, i) in points\"\r\n      >\r\n        <rect\r\n          :key=\"i\"\r\n          :fill=\"mergedColor[Math.random() > 0.5 ? 0 : 1]\"\r\n          :x=\"point[0] - halfRectWidth\"\r\n          :y=\"point[1] - heights[i] / 2\"\r\n          :width=\"rectWidth\"\r\n          :height=\"heights[i]\"\r\n        >\r\n          <animate\r\n            attributeName=\"y\"\r\n            :values=\"`${point[1] - minHeights[i] / 2};${point[1] - heights[i] / 2};${point[1] - minHeights[i] / 2}`\"\r\n            :dur=\"`${randoms[i]}s`\"\r\n            keyTimes=\"0;0.5;1\"\r\n            calcMode=\"spline\"\r\n            keySplines=\"0.42,0,0.58,1;0.42,0,0.58,1\"\r\n            begin=\"0s\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"height\"\r\n            :values=\"`${minHeights[i]};${heights[i]};${minHeights[i]}`\"\r\n            :dur=\"`${randoms[i]}s`\"\r\n            keyTimes=\"0;0.5;1\"\r\n            calcMode=\"spline\"\r\n            keySplines=\"0.42,0,0.58,1;0.42,0,0.58,1\"\r\n            begin=\"0s\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </rect>\r\n      </template>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport { randomExtend } from '../../../util'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvDecoration6',\r\n  mixins: [autoResize],\r\n  props: {\r\n    color: {\r\n      type: Array,\r\n      default: () => ([])\r\n    }\r\n  },\r\n  data () {\r\n    const rectWidth = 7\r\n\r\n    return {\r\n      ref: 'decoration-6',\r\n\r\n      svgWH: [300, 35],\r\n\r\n      svgScale: [1, 1],\r\n\r\n      rowNum: 1,\r\n      rowPoints: 40,\r\n\r\n      rectWidth,\r\n      halfRectWidth: rectWidth / 2,\r\n\r\n      points: [],\r\n      heights: [],\r\n      minHeights: [],\r\n      randoms: [],\r\n\r\n      defaultColor: ['#7acaec', '#7acaec'],\r\n\r\n      mergedColor: []\r\n    }\r\n  },\r\n  watch: {\r\n    color () {\r\n      const { mergeColor } = this\r\n\r\n      mergeColor()\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    calcSVGData () {\r\n      const { calcPointsPosition, calcScale } = this\r\n\r\n      calcPointsPosition()\r\n\r\n      calcScale()\r\n    },\r\n    calcPointsPosition () {\r\n      const { svgWH, rowNum, rowPoints } = this\r\n\r\n      const [w, h] = svgWH\r\n\r\n      const horizontalGap = w / (rowPoints + 1)\r\n      const verticalGap = h / (rowNum + 1)\r\n\r\n      let points = new Array(rowNum).fill(0).map((foo, i) =>\r\n        new Array(rowPoints).fill(0).map((foo, j) => [\r\n          horizontalGap * (j + 1), verticalGap * (i + 1)\r\n        ]))\r\n\r\n      this.points = points.reduce((all, item) => [...all, ...item], [])\r\n      const heights = this.heights = new Array(rowNum * rowPoints)\r\n        .fill(0).map(foo =>\r\n          Math.random() > 0.8 ? randomExtend(0.7 * h, h) : randomExtend(0.2 * h, 0.5 * h))\r\n\r\n      this.minHeights = new Array(rowNum * rowPoints)\r\n        .fill(0).map((foo, i) => heights[i] * Math.random())\r\n\r\n      this.randoms = new Array(rowNum * rowPoints)\r\n        .fill(0).map(foo => Math.random() + 1.5)\r\n    },\r\n    calcScale () {\r\n      const { width, height, svgWH } = this\r\n\r\n      const [w, h] = svgWH\r\n\r\n      this.svgScale = [width / w, height / h]\r\n    },\r\n    onResize () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    mergeColor () {\r\n      const { color, defaultColor } = this\r\n\r\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\r\n    }\r\n  },\r\n  mounted () {\r\n    const { mergeColor } = this\r\n\r\n    mergeColor()\r\n  }\r\n}\r\n</script>"]}]}