{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox10\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox10\\src\\main.vue","mtime":1713594891392},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXV0b1Jlc2l6ZSBmcm9tICcuLi8uLi8uLi9taXhpbi9hdXRvUmVzaXplJw0KDQppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCcNCg0KaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ0R2Qm9yZGVyQm94MTAnLA0KICBtaXhpbnM6IFthdXRvUmVzaXplXSwNCiAgcHJvcHM6IHsNCiAgICBjb2xvcjogew0KICAgICAgdHlwZTogQXJyYXksDQogICAgICBkZWZhdWx0OiAoKSA9PiAoW10pDQogICAgfSwNCiAgICBiYWNrZ3JvdW5kQ29sb3I6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIGRlZmF1bHQ6ICd0cmFuc3BhcmVudCcNCiAgICB9DQogIH0sDQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgICByZWY6ICdib3JkZXItYm94LTEwJywNCg0KICAgICAgYm9yZGVyOiBbJ2xlZnQtdG9wJywgJ3JpZ2h0LXRvcCcsICdsZWZ0LWJvdHRvbScsICdyaWdodC1ib3R0b20nXSwNCg0KICAgICAgZGVmYXVsdENvbG9yOiBbJyMxZDQ4YzQnLCAnI2QzZTFmOCddLA0KDQogICAgICBtZXJnZWRDb2xvcjogW10NCiAgICB9DQogIH0sDQogIHdhdGNoOiB7DQogICAgY29sb3IgKCkgew0KICAgICAgY29uc3QgeyBtZXJnZUNvbG9yIH0gPSB0aGlzDQoNCiAgICAgIG1lcmdlQ29sb3IoKQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIG1lcmdlQ29sb3IgKCkgew0KICAgICAgY29uc3QgeyBjb2xvciwgZGVmYXVsdENvbG9yIH0gPSB0aGlzDQoNCiAgICAgIHRoaXMubWVyZ2VkQ29sb3IgPSBkZWVwTWVyZ2UoZGVlcENsb25lKGRlZmF1bHRDb2xvciwgdHJ1ZSksIGNvbG9yIHx8IFtdKQ0KICAgIH0NCiAgfSwNCiAgbW91bnRlZCAoKSB7DQogICAgY29uc3QgeyBtZXJnZUNvbG9yIH0gPSB0aGlzDQoNCiAgICBtZXJnZUNvbG9yKCkNCiAgfQ0KfQ0K"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";AA6BA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/borderBox10/src","sourcesContent":["<template>\r\n  <div class=\"dv-border-box-10\" :ref=\"ref\" :style=\"`box-shadow: inset 0 0 25px 3px ${mergedColor[0]}`\">\r\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\r\n      <polygon :fill=\"backgroundColor\" :points=\"`\r\n        4, 0 ${width - 4}, 0 ${width}, 4 ${width}, ${height - 4} ${width - 4}, ${height}\r\n        4, ${height} 0, ${height - 4} 0, 4\r\n      `\" />\r\n    </svg>\r\n\r\n    <svg\r\n      width=\"150px\"\r\n      height=\"150px\"\r\n      :key=\"item\"\r\n      v-for=\"item in border\"\r\n      :class=\"`${item} dv-border-svg-container`\"\r\n    >\r\n      <polygon\r\n        :fill=\"mergedColor[1]\"\r\n        points=\"40, 0 5, 0 0, 5 0, 16 3, 19 3, 7 7, 3 35, 3\"\r\n      />\r\n    </svg>\r\n\r\n    <div class=\"border-box-content\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvBorderBox10',\r\n  mixins: [autoResize],\r\n  props: {\r\n    color: {\r\n      type: Array,\r\n      default: () => ([])\r\n    },\r\n    backgroundColor: {\r\n      type: String,\r\n      default: 'transparent'\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      ref: 'border-box-10',\r\n\r\n      border: ['left-top', 'right-top', 'left-bottom', 'right-bottom'],\r\n\r\n      defaultColor: ['#1d48c4', '#d3e1f8'],\r\n\r\n      mergedColor: []\r\n    }\r\n  },\r\n  watch: {\r\n    color () {\r\n      const { mergeColor } = this\r\n\r\n      mergeColor()\r\n    }\r\n  },\r\n  methods: {\r\n    mergeColor () {\r\n      const { color, defaultColor } = this\r\n\r\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\r\n    }\r\n  },\r\n  mounted () {\r\n    const { mergeColor } = this\r\n\r\n    mergeColor()\r\n  }\r\n}\r\n</script>"]}]}