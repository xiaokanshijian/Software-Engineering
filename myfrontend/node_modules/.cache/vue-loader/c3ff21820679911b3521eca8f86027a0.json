{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollBoard\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollBoard\\src\\main.vue","mtime":1713594891423},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";AAkfile":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/scrollBoard/src","sourcesContent":["<template>\r\n  <div class=\"dv-scroll-board\" :ref=\"ref\">\r\n    <div class=\"header\" v-if=\"header.length && mergedConfig\" :style=\"`background-color: ${mergedConfig.headerBGC};`\">\r\n      <div\r\n        class=\"header-item\"\r\n        v-for=\"(headerItem, i) in header\"\r\n        :key=\"`${headerItem}${i}`\"\r\n        :style=\"`\r\n          height: ${mergedConfig.headerHeight}px;\r\n          line-height: ${mergedConfig.headerHeight}px;\r\n          width: ${widths[i]}px;\r\n        `\"\r\n        :align=\"aligns[i]\"\r\n        v-html=\"headerItem\"\r\n      />\r\n    </div>\r\n\r\n    <div\r\n      v-if=\"mergedConfig\"\r\n      class=\"rows\"\r\n      :style=\"`height: ${height - (header.length ? mergedConfig.headerHeight : 0)}px;`\"\r\n    >\r\n      <div\r\n        class=\"row-item\"\r\n        v-for=\"(row, ri) in rows\"\r\n        :key=\"`${row.toString()}${row.scroll}`\"\r\n        :style=\"`\r\n          height: ${heights[ri]}px;\r\n          line-height: ${heights[ri]}px;\r\n          background-color: ${mergedConfig[row.rowIndex % 2 === 0 ? 'evenRowBGC' : 'oddRowBGC']};\r\n        `\"\r\n      >\r\n        <div\r\n          class=\"ceil\"\r\n          v-for=\"(ceil, ci) in row.ceils\"\r\n          :key=\"`${ceil}${ri}${ci}`\"\r\n          :style=\"`width: ${widths[ci]}px;`\"\r\n          :align=\"aligns[ci]\"\r\n          v-html=\"ceil\"\r\n          @click=\"emitEvent('click', ri, ci, row, ceil)\"\r\n          @mouseenter=\"handleHover(true, ri, ci, row, ceil)\"\r\n          @mouseleave=\"handleHover(false)\"\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvScrollBoard',\r\n  mixins: [autoResize],\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      ref: 'scroll-board',\r\n\r\n      defaultConfig: {\r\n        /**\r\n         * @description Board header\r\n         * @type {Array<String>}\r\n         * @default header = []\r\n         * @example header = ['column1', 'column2', 'column3']\r\n         */\r\n        header: [],\r\n        /**\r\n         * @description Board data\r\n         * @type {Array<Array>}\r\n         * @default data = []\r\n         */\r\n        data: [],\r\n        /**\r\n         * @description Row num\r\n         * @type {Number}\r\n         * @default rowNum = 5\r\n         */\r\n        rowNum: 5,\r\n        /**\r\n         * @description Header background color\r\n         * @type {String}\r\n         * @default headerBGC = '#00BAFF'\r\n         */\r\n        headerBGC: '#00BAFF',\r\n        /**\r\n         * @description Odd row background color\r\n         * @type {String}\r\n         * @default oddRowBGC = '#003B51'\r\n         */\r\n        oddRowBGC: '#003B51',\r\n        /**\r\n         * @description Even row background color\r\n         * @type {String}\r\n         * @default evenRowBGC = '#003B51'\r\n         */\r\n        evenRowBGC: '#0A2732',\r\n        /**\r\n         * @description Scroll wait time\r\n         * @type {Number}\r\n         * @default waitTime = 2000\r\n         */\r\n        waitTime: 2000,\r\n        /**\r\n         * @description Header height\r\n         * @type {Number}\r\n         * @default headerHeight = 35\r\n         */\r\n        headerHeight: 35,\r\n        /**\r\n         * @description Column width\r\n         * @type {Array<Number>}\r\n         * @default columnWidth = []\r\n         */\r\n        columnWidth: [],\r\n        /**\r\n         * @description Column align\r\n         * @type {Array<String>}\r\n         * @default align = []\r\n         * @example align = ['left', 'center', 'right']\r\n         */\r\n        align: [],\r\n        /**\r\n         * @description Show index\r\n         * @type {Boolean}\r\n         * @default index = false\r\n         */\r\n        index: false,\r\n        /**\r\n         * @description index Header\r\n         * @type {String}\r\n         * @default indexHeader = '#'\r\n         */\r\n        indexHeader: '#',\r\n        /**\r\n         * @description Carousel type\r\n         * @type {String}\r\n         * @default carousel = 'single'\r\n         * @example carousel = 'single' | 'page'\r\n         */\r\n        carousel: 'single',\r\n        /**\r\n         * @description Pause scroll when mouse hovered\r\n         * @type {Boolean}\r\n         * @default hoverPause = true\r\n         * @example hoverPause = true | false\r\n         */\r\n        hoverPause: true\r\n      },\r\n\r\n      mergedConfig: null,\r\n\r\n      header: [],\r\n\r\n      rowsData: [],\r\n\r\n      rows: [],\r\n\r\n      widths: [],\r\n\r\n      heights: [],\r\n\r\n      avgHeight: 0,\r\n\r\n      aligns: [],\r\n\r\n      animationIndex: 0,\r\n\r\n      animationHandler: '',\r\n\r\n      updater: 0,\r\n\r\n      needCalc: false\r\n    }\r\n  },\r\n  watch: {\r\n    config () {\r\n      const { stopAnimation, calcData } = this\r\n\r\n      stopAnimation()\r\n\r\n      this.animationIndex = 0\r\n\r\n      calcData()\r\n    }\r\n  },\r\n  methods: {\r\n    handleHover(enter, ri, ci, row, ceil){\r\n      const { mergedConfig, emitEvent, stopAnimation, animation } = this\r\n\r\n      if (enter) emitEvent('mouseover', ri, ci, row, ceil)\r\n      if (!mergedConfig.hoverPause) return\r\n\r\n      if (enter) {\r\n        stopAnimation()\r\n      } else {\r\n        animation(true)\r\n      }\r\n    },\r\n    afterAutoResizeMixinInit () {\r\n      const { calcData } = this\r\n\r\n      calcData()\r\n    },\r\n    onResize () {\r\n      const { mergedConfig, calcWidths, calcHeights } = this\r\n\r\n      if (!mergedConfig) return\r\n\r\n      calcWidths()\r\n\r\n      calcHeights()\r\n    },\r\n    calcData () {\r\n      const { mergeConfig, calcHeaderData, calcRowsData } = this\r\n\r\n      mergeConfig()\r\n\r\n      calcHeaderData()\r\n\r\n      calcRowsData()\r\n\r\n      const { calcWidths, calcHeights, calcAligns } = this\r\n\r\n      calcWidths()\r\n\r\n      calcHeights()\r\n\r\n      calcAligns()\r\n\r\n      const { animation } = this\r\n\r\n      animation(true)\r\n    },\r\n    mergeConfig () {\r\n      let { config, defaultConfig } = this\r\n\r\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n    },\r\n    calcHeaderData () {\r\n      let { header, index, indexHeader} = this.mergedConfig\r\n\r\n      if (!header.length) {\r\n        this.header = []\r\n\r\n        return\r\n      }\r\n\r\n      header = [...header]\r\n\r\n      if (index) header.unshift(indexHeader)\r\n\r\n      this.header = header\r\n    },\r\n    calcRowsData () {\r\n      let { data, index, headerBGC, rowNum } = this.mergedConfig\r\n\r\n      if (index) {\r\n        data = data.map((row, i) => {\r\n          row = [...row]\r\n\r\n          const indexTag = `<span class=\"index\" style=\"background-color: ${headerBGC};\">${i + 1}</span>`\r\n\r\n          row.unshift(indexTag)\r\n\r\n          return row\r\n        })\r\n      }\r\n\r\n      data = data.map((ceils, i) => ({ ceils, rowIndex: i }))\r\n\r\n      const rowLength = data.length\r\n\r\n      if (rowLength > rowNum && rowLength < 2 * rowNum) {\r\n        data = [...data, ...data]\r\n      }\r\n\r\n      data = data.map((d, i) => ({ ...d, scroll: i }))\r\n\r\n      this.rowsData = data\r\n      this.rows = data\r\n    },\r\n    calcWidths () {\r\n      const { width, mergedConfig, rowsData } = this\r\n\r\n      const { columnWidth, header } = mergedConfig\r\n\r\n      const usedWidth = columnWidth.reduce((all, w) => all + w, 0)\r\n\r\n      let columnNum = 0\r\n      if (rowsData[0]) {\r\n        columnNum = rowsData[0].ceils.length\r\n      } else if (header.length) {\r\n        columnNum = header.length\r\n      }\r\n\r\n      const avgWidth = (width - usedWidth) / (columnNum - columnWidth.length)\r\n\r\n      const widths = new Array(columnNum).fill(avgWidth)\r\n\r\n      this.widths = deepMerge(widths, columnWidth)\r\n    },\r\n    calcHeights (onresize = false) {\r\n      const { height, mergedConfig, header } = this\r\n\r\n      const { headerHeight, rowNum, data } = mergedConfig\r\n\r\n      let allHeight = height\r\n\r\n      if (header.length) allHeight -= headerHeight\r\n\r\n      const avgHeight = allHeight / rowNum\r\n\r\n      this.avgHeight = avgHeight\r\n\r\n      if (!onresize) this.heights = new Array(data.length).fill(avgHeight)\r\n    },\r\n    calcAligns () {\r\n      const { header, mergedConfig } = this\r\n\r\n      const columnNum = header.length\r\n\r\n      let aligns = new Array(columnNum).fill('left')\r\n\r\n      const { align } = mergedConfig\r\n\r\n      this.aligns = deepMerge(aligns, align)\r\n    },\r\n    async animation (start = false) {\r\n      const { needCalc, calcHeights, calcRowsData } = this\r\n\r\n      if (needCalc) {\r\n        calcRowsData()\r\n        calcHeights()\r\n        this.needCalc = false\r\n      }\r\n\r\n      let { avgHeight, animationIndex, mergedConfig, rowsData, animation, updater } = this\r\n\r\n      const { waitTime, carousel, rowNum } = mergedConfig\r\n\r\n      const rowLength = rowsData.length\r\n\r\n      if (rowNum >= rowLength) return\r\n\r\n      if (start) {\r\n        await new Promise(resolve => setTimeout(resolve, waitTime))\r\n        if (updater !== this.updater) return\r\n      }\r\n\r\n      const animationNum = carousel === 'single' ? 1 : rowNum\r\n\r\n      let rows = rowsData.slice(animationIndex)\r\n      rows.push(...rowsData.slice(0, animationIndex))\r\n\r\n      this.rows = rows.slice(0, carousel === 'page' ? rowNum * 2 : rowNum + 1)\r\n      this.heights = new Array(rowLength).fill(avgHeight)\r\n\r\n      await new Promise(resolve => setTimeout(resolve, 300))\r\n      if (updater !== this.updater) return\r\n\r\n      this.heights.splice(0, animationNum, ...new Array(animationNum).fill(0))\r\n\r\n      animationIndex += animationNum\r\n\r\n      const back = animationIndex - rowLength\r\n      if (back >= 0) animationIndex = back\r\n\r\n      this.animationIndex = animationIndex\r\n      this.animationHandler = setTimeout(animation, waitTime - 300)\r\n    },\r\n    stopAnimation () {\r\n      const { animationHandler, updater } = this\r\n\r\n      this.updater = (updater + 1) % 999999\r\n\r\n      if (!animationHandler) return\r\n\r\n      clearTimeout(animationHandler)\r\n    },\r\n    emitEvent (type, ri, ci, row, ceil) {\r\n      const { ceils, rowIndex } = row\r\n\r\n      this.$emit(type, {\r\n        row: ceils,\r\n        ceil,\r\n        rowIndex,\r\n        columnIndex: ci\r\n      })\r\n    },\r\n    updateRows(rows, animationIndex) {\r\n      const { mergedConfig, animationHandler, animation } = this\r\n\r\n      this.mergedConfig = {\r\n        ...mergedConfig,\r\n        data: [...rows]\r\n      }\r\n\r\n      this.needCalc = true\r\n\r\n      if (typeof animationIndex === 'number') this.animationIndex = animationIndex\r\n      if (!animationHandler) animation(true)\r\n    }\r\n  },\r\n  destroyed () {\r\n    const { stopAnimation } = this\r\n\r\n    stopAnimation()\r\n  }\r\n}\r\n</script>"]}]}