{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration5\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration5\\src\\main.vue","mtime":1713594891407},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXV0b1Jlc2l6ZSBmcm9tICcuLi8uLi8uLi9taXhpbi9hdXRvUmVzaXplJw0KDQppbXBvcnQgeyBnZXRQb2x5bGluZUxlbmd0aCB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsJw0KDQppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCcNCg0KaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ0R2RGVjb3JhdGlvbjUnLA0KICBtaXhpbnM6IFthdXRvUmVzaXplXSwNCiAgcHJvcHM6IHsNCiAgICBjb2xvcjogew0KICAgICAgdHlwZTogQXJyYXksDQogICAgICBkZWZhdWx0OiAoKSA9PiAoW10pDQogICAgfSwNCiAgICBkdXI6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIGRlZmF1bHQ6IDEuMg0KICAgIH0NCiAgfSwNCiAgZGF0YSAoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHJlZjogJ2RlY29yYXRpb24tNScsDQoNCiAgICAgIGxpbmUxUG9pbnRzOiAnJywNCiAgICAgIGxpbmUyUG9pbnRzOiAnJywNCg0KICAgICAgbGluZTFMZW5ndGg6IDAsDQogICAgICBsaW5lMkxlbmd0aDogMCwNCg0KICAgICAgZGVmYXVsdENvbG9yOiBbJyMzZjk2YTUnLCAnIzNmOTZhNSddLA0KDQogICAgICBtZXJnZWRDb2xvcjogW10NCiAgICB9DQogIH0sDQogIHdhdGNoOiB7DQogICAgY29sb3IgKCkgew0KICAgICAgY29uc3QgeyBtZXJnZUNvbG9yIH0gPSB0aGlzDQoNCiAgICAgIG1lcmdlQ29sb3IoKQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFmdGVyQXV0b1Jlc2l6ZU1peGluSW5pdCAoKSB7DQogICAgICBjb25zdCB7IGNhbGNTVkdEYXRhIH0gPSB0aGlzDQoNCiAgICAgIGNhbGNTVkdEYXRhKCkNCiAgICB9LA0KICAgIGNhbGNTVkdEYXRhICgpIHsNCiAgICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gdGhpcw0KDQogICAgICBsZXQgbGluZTFQb2ludHMgPSBbDQogICAgICAgIFswLCBoZWlnaHQgKiAwLjJdLCBbd2lkdGggKiAwLjE4LCBoZWlnaHQgKiAwLjJdLCBbd2lkdGggKiAwLjIsIGhlaWdodCAqIDAuNF0sIFt3aWR0aCAqIDAuMjUsIGhlaWdodCAqIDAuNF0sDQogICAgICAgIFt3aWR0aCAqIDAuMjcsIGhlaWdodCAqIDAuNl0sIFt3aWR0aCAqIDAuNzIsIGhlaWdodCAqIDAuNl0sIFt3aWR0aCAqIDAuNzUsIGhlaWdodCAqIDAuNF0sDQogICAgICAgIFt3aWR0aCAqIDAuOCwgaGVpZ2h0ICogMC40XSwgW3dpZHRoICogMC44MiwgaGVpZ2h0ICogMC4yXSwgW3dpZHRoLCBoZWlnaHQgKiAwLjJdDQogICAgICBdDQoNCiAgICAgIGxldCBsaW5lMlBvaW50cyA9IFsNCiAgICAgICAgW3dpZHRoICogMC4zLCBoZWlnaHQgKiAwLjhdLCBbd2lkdGggKiAwLjcsIGhlaWdodCAqIDAuOF0NCiAgICAgIF0NCg0KICAgICAgY29uc3QgbGluZTFMZW5ndGggPSBnZXRQb2x5bGluZUxlbmd0aChsaW5lMVBvaW50cykNCiAgICAgIGNvbnN0IGxpbmUyTGVuZ3RoID0gZ2V0UG9seWxpbmVMZW5ndGgobGluZTJQb2ludHMpDQoNCiAgICAgIGxpbmUxUG9pbnRzID0gbGluZTFQb2ludHMubWFwKHBvaW50ID0+IHBvaW50LmpvaW4oJywnKSkuam9pbignICcpDQogICAgICBsaW5lMlBvaW50cyA9IGxpbmUyUG9pbnRzLm1hcChwb2ludCA9PiBwb2ludC5qb2luKCcsJykpLmpvaW4oJyAnKQ0KDQogICAgICB0aGlzLmxpbmUxUG9pbnRzID0gbGluZTFQb2ludHMNCiAgICAgIHRoaXMubGluZTJQb2ludHMgPSBsaW5lMlBvaW50cw0KDQogICAgICB0aGlzLmxpbmUxTGVuZ3RoID0gbGluZTFMZW5ndGgNCiAgICAgIHRoaXMubGluZTJMZW5ndGggPSBsaW5lMkxlbmd0aA0KICAgIH0sDQogICAgb25SZXNpemUgKCkgew0KICAgICAgY29uc3QgeyBjYWxjU1ZHRGF0YSB9ID0gdGhpcw0KDQogICAgICBjYWxjU1ZHRGF0YSgpDQogICAgfSwNCiAgICBtZXJnZUNvbG9yICgpIHsNCiAgICAgIGNvbnN0IHsgY29sb3IsIGRlZmF1bHRDb2xvciB9ID0gdGhpcw0KDQogICAgICB0aGlzLm1lcmdlZENvbG9yID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29sb3IsIHRydWUpLCBjb2xvciB8fCBbXSkNCiAgICB9DQogIH0sDQogIG1vdW50ZWQgKCkgew0KICAgIGNvbnN0IHsgbWVyZ2VDb2xvciB9ID0gdGhpcw0KDQogICAgbWVyZ2VDb2xvcigpDQogIH0NCn0NCg=="},{"version":3,"sources":["main.vue"],"names":[],"mappings":";AA8CA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/decoration5/src","sourcesContent":["<template>\r\n  <div class=\"dv-decoration-5\" :ref=\"ref\">\r\n    <svg :width=\"width\" :height=\"height\">\r\n      <polyline\r\n        fill=\"transparent\"\r\n        :stroke=\"mergedColor[0]\"\r\n        stroke-width=\"3\"\r\n        :points=\"line1Points\"\r\n      >\r\n        <animate\r\n          attributeName=\"stroke-dasharray\"\r\n          attributeType=\"XML\"\r\n          :from=\"`0, ${line1Length / 2}, 0, ${line1Length / 2}`\"\r\n          :to=\"`0, 0, ${line1Length}, 0`\"\r\n          :dur=\"`${dur}s`\"\r\n          begin=\"0s\"\r\n          calcMode=\"spline\"\r\n          keyTimes=\"0;1\"\r\n          keySplines=\"0.4,1,0.49,0.98\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </polyline>\r\n      <polyline\r\n        fill=\"transparent\"\r\n        :stroke=\"mergedColor[1]\"\r\n        stroke-width=\"2\"\r\n        :points=\"line2Points\"\r\n      >\r\n        <animate\r\n          attributeName=\"stroke-dasharray\"\r\n          attributeType=\"XML\"\r\n          :from=\"`0, ${line2Length / 2}, 0, ${line2Length / 2}`\"\r\n          :to=\"`0, 0, ${line2Length}, 0`\"\r\n          :dur=\"`${dur}s`\"\r\n          begin=\"0s\"\r\n          calcMode=\"spline\"\r\n          keyTimes=\"0;1\"\r\n          keySplines=\".4,1,.49,.98\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </polyline>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport { getPolylineLength } from '@jiaminghi/charts/lib/util'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvDecoration5',\r\n  mixins: [autoResize],\r\n  props: {\r\n    color: {\r\n      type: Array,\r\n      default: () => ([])\r\n    },\r\n    dur: {\r\n      type: Number,\r\n      default: 1.2\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      ref: 'decoration-5',\r\n\r\n      line1Points: '',\r\n      line2Points: '',\r\n\r\n      line1Length: 0,\r\n      line2Length: 0,\r\n\r\n      defaultColor: ['#3f96a5', '#3f96a5'],\r\n\r\n      mergedColor: []\r\n    }\r\n  },\r\n  watch: {\r\n    color () {\r\n      const { mergeColor } = this\r\n\r\n      mergeColor()\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    calcSVGData () {\r\n      const { width, height } = this\r\n\r\n      let line1Points = [\r\n        [0, height * 0.2], [width * 0.18, height * 0.2], [width * 0.2, height * 0.4], [width * 0.25, height * 0.4],\r\n        [width * 0.27, height * 0.6], [width * 0.72, height * 0.6], [width * 0.75, height * 0.4],\r\n        [width * 0.8, height * 0.4], [width * 0.82, height * 0.2], [width, height * 0.2]\r\n      ]\r\n\r\n      let line2Points = [\r\n        [width * 0.3, height * 0.8], [width * 0.7, height * 0.8]\r\n      ]\r\n\r\n      const line1Length = getPolylineLength(line1Points)\r\n      const line2Length = getPolylineLength(line2Points)\r\n\r\n      line1Points = line1Points.map(point => point.join(',')).join(' ')\r\n      line2Points = line2Points.map(point => point.join(',')).join(' ')\r\n\r\n      this.line1Points = line1Points\r\n      this.line2Points = line2Points\r\n\r\n      this.line1Length = line1Length\r\n      this.line2Length = line2Length\r\n    },\r\n    onResize () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    mergeColor () {\r\n      const { color, defaultColor } = this\r\n\r\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\r\n    }\r\n  },\r\n  mounted () {\r\n    const { mergeColor } = this\r\n\r\n    mergeColor()\r\n  }\r\n}\r\n</script>"]}]}