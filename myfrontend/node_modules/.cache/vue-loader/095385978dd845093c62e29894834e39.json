{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue","mtime":1713594891423},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";AAufile":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/flylineChart/src","sourcesContent":["<template>\r\n  <div\r\n    class=\"dv-flyline-chart\"\r\n    ref=\"dv-flyline-chart\"\r\n    :style=\"`background-image: url(${mergedConfig ? mergedConfig.bgImgUrl : ''})`\"\r\n    @click=\"consoleClickPos\"\r\n  >\r\n    <svg v-if=\"mergedConfig\" :width=\"width\" :height=\"height\">\r\n      <defs>\r\n        <radialGradient\r\n          :id=\"gradientId\"\r\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\r\n        >\r\n          <stop\r\n            offset=\"0%\" stop-color=\"#fff\"\r\n            stop-opacity=\"1\"\r\n          />\r\n          <stop\r\n            offset=\"100%\" stop-color=\"#fff\"\r\n            stop-opacity=\"0\"\r\n          />\r\n        </radialGradient>\r\n\r\n        <radialGradient\r\n          :id=\"gradient2Id\"\r\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\r\n        >\r\n          <stop\r\n            offset=\"0%\" stop-color=\"#fff\"\r\n            stop-opacity=\"0\"\r\n          />\r\n          <stop\r\n            offset=\"100%\" stop-color=\"#fff\"\r\n            stop-opacity=\"1\"\r\n          />\r\n        </radialGradient>\r\n\r\n        <circle\r\n          v-if=\"paths[0]\"\r\n          :id=\"`circle${paths[0].toString()}`\"\r\n          :cx=\"paths[0][2][0]\"\r\n          :cy=\"paths[0][2][1]\"\r\n        >\r\n          <animate\r\n            attributeName=\"r\"\r\n            :values=\"`1;${mergedConfig.halo.radius}`\"\r\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"opacity\"\r\n            values=\"1;0\"\r\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </defs>\r\n\r\n      <image\r\n        v-if=\"paths[0]\"\r\n        :xlink:href=\"mergedConfig.centerPointImg.url\"\r\n        :width=\"mergedConfig.centerPointImg.width\"\r\n        :height=\"mergedConfig.centerPointImg.height\"\r\n        :x=\"paths[0][2][0] - mergedConfig.centerPointImg.width / 2\"\r\n        :y=\"paths[0][2][1] - mergedConfig.centerPointImg.height / 2\"\r\n      />\r\n\r\n      <mask :id=\"`maskhalo${paths[0].toString()}`\">\r\n        <use\r\n          v-if=\"paths[0]\"\r\n          :xlink:href=\"`#circle${paths[0].toString()}`\"\r\n          :fill=\"`url(#${gradient2Id})`\"\r\n        />\r\n      </mask>\r\n\r\n      <use\r\n        v-if=\"paths[0] && mergedConfig.halo.show\"\r\n        :xlink:href=\"`#circle${paths[0].toString()}`\"\r\n        :fill=\"mergedConfig.halo.color\"\r\n        :mask=\"`url(#maskhalo${paths[0].toString()})`\"\r\n      />\r\n\r\n      <g\r\n        v-for=\"(path, i) in paths\"\r\n        :key=\"i\"\r\n      >\r\n        <defs>\r\n          <path\r\n            :id=\"`path${path.toString()}`\"\r\n            :ref=\"`path${i}`\"\r\n            :d=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\r\n            fill=\"transparent\"\r\n          />\r\n        </defs>\r\n\r\n        <use\r\n          :xlink:href=\"`#path${path.toString()}`\"\r\n          :stroke-width=\"mergedConfig.lineWidth\"\r\n          :stroke=\"mergedConfig.orbitColor\"\r\n        />\r\n\r\n        <use\r\n          v-if=\"lengths[i]\"\r\n          :xlink:href=\"`#path${path.toString()}`\"\r\n          :stroke-width=\"mergedConfig.lineWidth\"\r\n          :stroke=\"mergedConfig.flylineColor\"\r\n          :mask=\"`url(#mask${unique}${path.toString()})`\"\r\n        >\r\n          <animate\r\n            attributeName=\"stroke-dasharray\"\r\n            :from=\"`0, ${lengths[i]}`\"\r\n            :to=\"`${lengths[i]}, 0`\"\r\n            :dur=\"times[i] || 0\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </use>\r\n\r\n        <mask :id=\"`mask${unique}${path.toString()}`\">\r\n          <circle cx=\"0\" cy=\"0\" :r=\"mergedConfig.flylineRadius\" :fill=\"`url(#${gradientId})`\">\r\n            <animateMotion\r\n              :dur=\"times[i] || 0\"\r\n              :path=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\r\n              rotate=\"auto\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </circle>\r\n        </mask>\r\n\r\n        <image\r\n          :xlink:href=\"mergedConfig.pointsImg.url\"\r\n          :width=\"mergedConfig.pointsImg.width\"\r\n          :height=\"mergedConfig.pointsImg.height\"\r\n          :x=\"path[0][0] - mergedConfig.pointsImg.width / 2\"\r\n          :y=\"path[0][1] - mergedConfig.pointsImg.height / 2\"\r\n        />\r\n\r\n        <text\r\n          :style=\"`fontSize:${mergedConfig.text.fontSize}px;`\"\r\n          :fill=\"mergedConfig.text.color\"\r\n          :x=\"path[0][0] + mergedConfig.text.offset[0]\"\r\n          :y=\"path[0][1] + mergedConfig.text.offset[1]\"\r\n        >\r\n          {{ texts[i] }}\r\n        </text>\r\n\r\n      </g>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport { randomExtend, getPointDistance, uuid } from '../../../util/index'\r\n\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nexport default {\r\n  name: 'DvFlylineChart',\r\n  mixins: [autoResize],\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    dev: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data () {\r\n    const id = uuid()\r\n    return {\r\n      ref: 'dv-flyline-chart',\r\n      unique: Math.random(),\r\n      maskId: `flyline-mask-id-${id}`,\r\n      maskCircleId: `mask-circle-id-${id}`,\r\n      gradientId: `gradient-id-${id}`,\r\n      gradient2Id: `gradient2-id-${id}`,\r\n\r\n      defaultConfig: {\r\n        /**\r\n         * @description Flyline chart center point\r\n         * @type {Array<Number>}\r\n         * @default centerPoint = [0, 0]\r\n         */\r\n        centerPoint: [0, 0],\r\n        /**\r\n         * @description Flyline start points\r\n         * @type {Array<Array<Number>>}\r\n         * @default points = []\r\n         * @example points = [[10, 10], [100, 100]]\r\n         */\r\n        points: [],\r\n        /**\r\n         * @description Flyline width\r\n         * @type {Number}\r\n         * @default lineWidth = 1\r\n         */\r\n        lineWidth: 1,\r\n        /**\r\n         * @description Orbit color\r\n         * @type {String}\r\n         * @default orbitColor = 'rgba(103, 224, 227, .2)'\r\n         */\r\n        orbitColor: 'rgba(103, 224, 227, .2)',\r\n        /**\r\n         * @description Flyline color\r\n         * @type {String}\r\n         * @default orbitColor = '#ffde93'\r\n         */\r\n        flylineColor: '#ffde93',\r\n        /**\r\n         * @description K value\r\n         * @type {Number}\r\n         * @default k = -0.5\r\n         * @example k = -1 ~ 1\r\n         */\r\n        k: -0.5,\r\n        /**\r\n         * @description Flyline curvature\r\n         * @type {Number}\r\n         * @default curvature = 5\r\n         */\r\n        curvature: 5,\r\n        /**\r\n         * @description Flyline radius\r\n         * @type {Number}\r\n         * @default flylineRadius = 100\r\n         */\r\n        flylineRadius: 100,\r\n        /**\r\n         * @description Flyline animation duration\r\n         * @type {Array<Number>}\r\n         * @default duration = [20, 30]\r\n         */\r\n        duration: [20, 30],\r\n        /**\r\n         * @description Relative points position\r\n         * @type {Boolean}\r\n         * @default relative = true\r\n         */\r\n        relative: true,\r\n        /**\r\n         * @description Back ground image url\r\n         * @type {String}\r\n         * @default bgImgUrl = ''\r\n         * @example bgImgUrl = './img/bg.jpg'\r\n         */\r\n        bgImgUrl: '',\r\n        /**\r\n         * @description Text configuration\r\n         * @type {Object}\r\n         */\r\n        text: {\r\n          /**\r\n           * @description Text offset\r\n           * @type {Array<Number>}\r\n           * @default offset = [0, 15]\r\n           */\r\n          offset: [0, 15],\r\n          /**\r\n           * @description Text color\r\n           * @type {String}\r\n           * @default color = '#ffdb5c'\r\n           */\r\n          color: '#ffdb5c',\r\n          /**\r\n           * @description Text font size\r\n           * @type {Number}\r\n           * @default fontSize = 12\r\n           */\r\n          fontSize: 12\r\n        },\r\n        /**\r\n         * @description Halo configuration\r\n         * @type {Object}\r\n         */\r\n        halo: {\r\n          /**\r\n           * @description Weather to show halo\r\n           * @type {Boolean}\r\n           * @default show = true\r\n           * @example show = true | false\r\n           */\r\n          show: true,\r\n          /**\r\n           * @description Halo animation duration (10 = 1s)\r\n           * @type {Number}\r\n           * @default duration = 30\r\n           */\r\n          duration: 30,\r\n          /**\r\n           * @description Halo color\r\n           * @type {String}\r\n           * @default color = '#fb7293'\r\n           */\r\n          color: '#fb7293',\r\n          /**\r\n           * @description Halo max radius\r\n           * @type {Number}\r\n           * @default radius = 120\r\n           */\r\n          radius: 120\r\n        },\r\n        /**\r\n         * @description Center point img configuration\r\n         * @type {Object}\r\n         */\r\n        centerPointImg: {\r\n          /**\r\n           * @description Center point img width\r\n           * @type {Number}\r\n           * @default width = 40\r\n           */\r\n          width: 40,\r\n          /**\r\n           * @description Center point img height\r\n           * @type {Number}\r\n           * @default height = 40\r\n           */\r\n          height: 40,\r\n          /**\r\n           * @description Center point img url\r\n           * @type {String}\r\n           * @default url = ''\r\n           */\r\n          url: ''\r\n        },\r\n        /**\r\n         * @description Points img configuration\r\n         * @type {Object}\r\n         * @default radius = 120\r\n         */\r\n        pointsImg: {\r\n          /**\r\n           * @description Points img width\r\n           * @type {Number}\r\n           * @default width = 15\r\n           */\r\n          width: 15,\r\n          /**\r\n           * @description Points img height\r\n           * @type {Number}\r\n           * @default height = 15\r\n           */\r\n          height: 15,\r\n          /**\r\n           * @description Points img url\r\n           * @type {String}\r\n           * @default url = ''\r\n           */\r\n          url: ''\r\n        }\r\n      },\r\n\r\n      mergedConfig: null,\r\n\r\n      paths: [],\r\n      lengths: [],\r\n      times: [],\r\n      texts: []\r\n    }\r\n  },\r\n  watch: {\r\n    config () {\r\n      const { calcData } = this\r\n\r\n      calcData()\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { calcData } = this\r\n\r\n      calcData()\r\n    },\r\n    onResize () {\r\n      const { calcData } = this\r\n\r\n      calcData()\r\n    },\r\n    async calcData () {\r\n      const { mergeConfig, createFlylinePaths, calcLineLengths } = this\r\n\r\n      mergeConfig()\r\n\r\n      createFlylinePaths()\r\n\r\n      await calcLineLengths()\r\n\r\n      const { calcTimes, calcTexts } = this\r\n\r\n      calcTimes()\r\n\r\n      calcTexts()\r\n    },\r\n    mergeConfig () {\r\n      let { config, defaultConfig } = this\r\n\r\n      const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n\r\n      const { points } = mergedConfig\r\n\r\n      mergedConfig.points = points.map(item => {\r\n        if (item instanceof Array) {\r\n          return { position: item, text: '' }\r\n        }\r\n\r\n        return item\r\n      })\r\n\r\n      this.mergedConfig = mergedConfig\r\n    },\r\n    createFlylinePaths () {\r\n      const { getPath, mergedConfig, width, height } = this\r\n\r\n      let { centerPoint, points, relative } = mergedConfig\r\n\r\n      points = points.map(({ position }) => position)\r\n\r\n      if (relative) {\r\n        centerPoint = [width * centerPoint[0], height * centerPoint[1]]\r\n        points = points.map(([x, y]) => [width * x, height * y])\r\n      }\r\n\r\n      this.paths = points.map(point => getPath(centerPoint, point))\r\n    },\r\n    getPath (center, point) {\r\n      const { getControlPoint } = this\r\n\r\n      const controlPoint = getControlPoint(center, point)\r\n\r\n      return [point, controlPoint, center]\r\n    },\r\n    getControlPoint ([sx, sy], [ex, ey]) {\r\n      const { getKLinePointByx, mergedConfig } = this\r\n\r\n      const { curvature, k } = mergedConfig\r\n\r\n      const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\r\n\r\n      const distance = getPointDistance([sx, sy], [ex, ey])\r\n\r\n      const targetLength = distance / curvature\r\n      const disDived = targetLength / 2\r\n\r\n      let [dx, dy] = [mx, my]\r\n\r\n      do {\r\n        dx += disDived\r\n        dy = getKLinePointByx(k, [mx, my], dx)[1]\r\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\r\n\r\n      return [dx, dy]\r\n    },\r\n    getKLinePointByx (k, [lx, ly], x) {\r\n      const y = ly - k * lx + k * x\r\n\r\n      return [x, y]\r\n    },\r\n    async calcLineLengths () {\r\n      const { $nextTick, paths, $refs } = this\r\n\r\n      await $nextTick()\r\n\r\n      this.lengths = paths.map((foo, i) => $refs[`path${i}`][0].getTotalLength())\r\n    },\r\n    calcTimes () {\r\n      const { duration, points } = this.mergedConfig\r\n\r\n      this.times = points.map(foo => randomExtend(...duration) / 10)\r\n    },\r\n    calcTexts () {\r\n      const { points } = this.mergedConfig\r\n\r\n      this.texts = points.map(({ text }) => text)\r\n    },\r\n    consoleClickPos ({ offsetX, offsetY }) {\r\n      const { width, height, dev } = this\r\n\r\n      if (!dev) return\r\n\r\n      const relativeX = (offsetX / width).toFixed(2)\r\n      const relativeY = (offsetY / height).toFixed(2)\r\n\r\n      console.warn(`dv-flyline-chart DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\r\n    }\r\n  }\r\n}\r\n</script>"]}]}