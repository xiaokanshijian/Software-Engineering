{"remainingRequest":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\src\\views\\History.vue?vue&type=style&index=0&id=ba0a5d6c&lang=css&","dependencies":[{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\src\\views\\History.vue","mtime":1694757429961},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1704126242942},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1704126245443},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\postcss-loader\\src\\index.js","mtime":1704126243595},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704126242450},{"path":"C:\\Users\\Lazarus\\PycharmProjects\\电网数据分析可视化\\frondend\\node_modules\\vue-loader\\lib\\index.js","mtime":1704126244757}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmFydGljbGU6Zmlyc3Qtb2YtdHlwZSBmaWd1cmUgcHsKICAgIGZvbnQtc2l6ZTogMTZweDsKICAgIGNvbG9yOiM0MzhlYjM7CiAgICBsZXR0ZXItc3BhY2luZzogMnB4Owp9CmFydGljbGU6bGFzdC1vZi10eXBlICBmaWd1cmUgcHsKICAgIGZvbnQtc2l6ZTogMTZweDsKICAgIGxldHRlci1zcGFjaW5nOiAycHg7Cn0KYXJ0aWNsZTpsYXN0LW9mLXR5cGUgZmlnY2FwdGlvbnsKfSAgIAoudGltZWxpbmUgewogICAgaGVpZ2h0OiAxMDAlOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwp9CgoudGltZWxpbmUgY2FudmFzIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwogICAgbGVmdDogMDsKICAgIHRvcDogMDsKfQoKLnRpbWVsaW5lIGZpZ2NhcHRpb24gewogIGNvbG9yOiNmZmY7CiAgICBmb250LXdlaWdodDogNDAwOwogICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDI0cHg7CiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwp9CgoudGltZWxpbmUgaDIgewogICAgZm9udC13ZWlnaHQ6IDQwMDsKICAgIGZvbnQtc2l6ZTogMzBweDsKICAgIHBhZGRpbmctYm90dG9tOiAxMDBweDsKICAgIGNvbG9yOiAjYjJjZGU5OwogICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7CiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwp9CgoudGltZWxpbmUgaDYgewogICAgY29sb3I6ICMwMDkwZjU7CiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICAgIGZvbnQtc2l6ZTogMTdweDsKICAgIGZvbnQtd2VpZ2h0OiA0MDA7Cn0KCi50aW1lbGluZSBwIHsKICAgIGZvbnQtd2VpZ2h0OiA0MDA7CiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICAgIHBhZGRpbmc6IDNweCAwIDIwcHggMDsKICAgIGNvbG9yOiAjOTQ5NDk0OwogICAgdGV4dC1hbGlnbjoganVzdGlmeTsKICAgIHdpZHRoOiA3MCU7Cn0KCi50aW1lbGluZSBmaWd1cmUgewogICAgd2lkdGg6IDEwMCU7Cn0KCi50aW1lbGluZSBhcnRpY2xlIHsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIHdpZHRoOiAzOCU7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgbWFyZ2luLWJvdHRvbTogMTAwcHg7Cn0KCi50aW1lbGluZSBhcnRpY2xlOmZpcnN0LW9mLXR5cGUgewogICAgZmxvYXQ6IGxlZnQ7CiAgICB0ZXh0LWFsaWduOiByaWdodDsKfQoKLnRpbWVsaW5lIGFydGljbGU6Zmlyc3Qtb2YtdHlwZSBwLAoudGltZWxpbmUgYXJ0aWNsZTpmaXJzdC1vZi10eXBlIGZpZ3VyZSB7CiAgICBmbG9hdDogcmlnaHQ7Cn0KCi50aW1lbGluZSBhcnRpY2xlOmxhc3Qtb2YtdHlwZSB7CiAgICBmbG9hdDogcmlnaHQ7Cn0KCi50aW1lbGluZSBhcnRpY2xlOmxhc3Qtb2YtdHlwZSBoMiB7CiAgICBjb2xvcjogI2M2ZTBhYTsKfQoKLnRpbWVsaW5lIGFydGljbGU6bGFzdC1vZi10eXBlIGg2LAoudGltZWxpbmUgYXJ0aWNsZTpsYXN0LW9mLXR5cGUgYSB7CiAgICBjb2xvcjogI2M2ZTBhYTsKfQoKLnRpbWVsaW5lIGFydGljbGU6bGFzdC1vZi10eXBlIGE6aG92ZXIgewogICAgY29sb3I6ICM5NWQ0MGQ7Cn0K"},{"version":3,"sources":["History.vue"],"names":[],"mappings":";AA2ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"History.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n      <section id=\"timeline\">\r\n        <div class=\"timeline\">\r\n            <canvas id=\"cvs3\"></canvas>\r\n\r\n            <article>\r\n                <h2>传输电力</h2>\r\n                <figure>\r\n                    <figcaption>早期电力实验</figcaption>\r\n                    <p>电力的研究和实验始于18世纪末和19世纪初。科学家如本杰明·富兰克林和亚历山大·伯特建立了电学的基本原理，而迈克尔·法拉第和亨利·法拉第则对电磁感应和电动机等关键概念进行了研究。</p>\r\n                </figure>\r\n                <figure>\r\n                    <figcaption>直流电力系统</figcaption>\r\n                    <p>早期电力系统使用直流电（Direct Current，DC）传输电力。托马斯·爱迪生在19世纪末建立了一系列直流发电厂和电力分配系统，以供应电灯和其他设备。这些系统主要用于城市内的有限区域。</p>\r\n                </figure>\r\n                <figure>\r\n                    <figcaption>交流电力系统的发展</figcaption>\r\n                    <p>\r\n                        交流电（Alternating Current，AC）被认为更适合长距离电力传输，因为它可以通过变压器来提高电压，减小能量损耗。尼古拉·特斯拉和乔治·威斯汀豪斯等科学家和工程师在19世纪末和20世纪初发展了交流电力系统，并建立了全球范围的电力网络。\r\n                    </p>\r\n                </figure>\r\n                <figure>\r\n                    <figcaption>电网的扩张</figcaption>\r\n                    <p>20世纪初，电力网格系统开始在城市间和国家间建立连接，以便更有效地分配电力。这个过程促使了大规模电力生产和分布设施的建设，包括发电厂、变电站和输电线路。</p>\r\n                </figure>\r\n            </article>\r\n\r\n            <article>\r\n                <h2>分配电力</h2>\r\n                <figure>\r\n                    <figcaption>输电线路</figcaption>\r\n                    <p style=\"color:#c6e0aa\">电力分配的第一步是将电力从发电厂输送到不同地区的变电站。这通常涉及使用高压输电线路，以减小能量损耗。这些输电线路通常是高塔或电缆，可以跨越长距离，将电力输送到城市或地区的核心。</p>\r\n                </figure>\r\n                <figure>\r\n                    <figcaption>变电站</figcaption>\r\n                    <p style=\"color:#c6e0aa\">\r\n                        在电力输送到变电站后，电压可能需要升高或降低，以适应最终用户的需求。变电站通常包括变压器，用于改变电压水平，并确保电力的稳定性和可用性。\r\n                    </p>\r\n                </figure>\r\n                <figure>\r\n                    <figcaption>配电系统</figcaption>\r\n                    <p style=\"color:#c6e0aa\">从变电站出发的电力被送入城市或社区的配电系统中。这些系统包括地下电缆和电线杆上的电线，将电力分发到各个街区和建筑物。</p>\r\n                </figure>\r\n                <figure>\r\n                    <figcaption>输电网格</figcaption>\r\n                    <p style=\"color:#c6e0aa\">电力分配还涉及建立一个复杂的输电网格，以确保电力可靠地传递到各个用户。这个网格通常是一个分层次的结构，包括主要输电线路、次要输电线路和分支电线路，以适应不同电力需求的层级。</p>\r\n                </figure>\r\n            </article>\r\n\r\n            <br style=\"clear:both\">\r\n        </div>\r\n\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport $ from 'jquery'\r\n    function Timeline(cvs) {\r\n\r\n        let self = this,\r\n            paused = true,\r\n            rafid = 0,\r\n            mouse = {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            canvas = cvs,\r\n            ctx = null;\r\n\r\n        self.lines = [];\r\n        self.isOK = false;\r\n        self.options = {\r\n            speed: 0.1,\r\n            density: 8,\r\n            radius: 600,\r\n        };\r\n        self.targets = [\r\n            [29, 32, 48, 68, 98],\r\n            [29, 33, 38, 60, 90]\r\n        ];\r\n        self.dotColors = [\r\n            ['#ff7a7a', 'rgba(255, 122, 122, 0.3)', 'rgba(255, 122, 122, .5)'],\r\n            ['#7dd317', 'rgba(113, 222, 15, 0.3)', 'rgba(91, 164, 22, 0.5)'],\r\n        ];\r\n\r\n        self.isPaused = function() {\r\n            return paused;\r\n        };\r\n\r\n        function InitDots() {\r\n            const tl = $('.timeline');\r\n            const top = tl.find('h2').outerHeight();\r\n\r\n            self.lines[0].dots = [];\r\n            let y = top;\r\n            tl.find('article:first figure').each(function() {\r\n                // debugger\r\n                self.lines[0].dots.push([$(this).outerWidth() + 20, y + 20]); //生成线\r\n\r\n                y += $(this).outerHeight();\r\n            });\r\n\r\n            // debugger\r\n            self.lines[1].dots = [];\r\n            let y2 = top;\r\n            tl.find('article:last figure').each(function() {\r\n\r\n                self.lines[1].dots.push([canvas.width - $(this).outerWidth() - 20, y2 + 20]);\r\n\r\n                y2 += $(this).outerHeight();\r\n            });\r\n        }\r\n\r\n        function OnResize() {\r\n            canvas.width = canvas.offsetWidth;\r\n            canvas.height = canvas.offsetHeight;\r\n\r\n            const wasPaused = paused;\r\n            self.toggle(false);\r\n            // Init lines\r\n            self.lines[0].reset(canvas.offsetWidth / 2 - 15);\r\n            self.lines[1].reset(canvas.offsetWidth / 2 + 15);\r\n\r\n            InitDots();\r\n\r\n            self.toggle(!wasPaused);\r\n        }\r\n\r\n        function init() {\r\n            let result = false;\r\n            try {\r\n                result = !!(canvas.getContext && (ctx = canvas.getContext('2d')));\r\n\r\n                self.lines[0] = new Line(0, canvas.offsetHeight - 100, '#4789a3', self.options, mouse);\r\n                self.lines[1] = new Line(0, canvas.offsetHeight - 100, '#a0d59c', self.options, mouse);\r\n\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n\r\n            $(canvas).mousemove(function(e) {\r\n\r\n                if (e.offsetX) {\r\n                    mouse.x = e.offsetX;\r\n                    mouse.y = e.offsetY;\r\n                } else if (e.layerX) {\r\n                    mouse.x = e.layerX;\r\n                    mouse.y = e.layerY;\r\n                } else {\r\n                    mouse.x = e.pageX - $(canvas).offset().left;\r\n                    mouse.y = e.pageY - $(canvas).offset().top;\r\n                }\r\n            });\r\n\r\n            $(window).resize(OnResize);\r\n\r\n            OnResize();\r\n\r\n            return result;\r\n        }\r\n\r\n        function Line(y, height, color, options, mouse) {\r\n            let self = this;\r\n            self.color = color;\r\n            self.options = options;\r\n            self.mouse = mouse;\r\n            self.height = height;\r\n            self.dots = [];\r\n            self.y = y;\r\n\r\n            self.points = [];\r\n\r\n            self.reset = function(x, f) {\r\n                self.points = [];\r\n                for (let y = self.y; y < self.height; y += self.options.density)\r\n                    self.points.push(new Point(x, y, self.color));\r\n            }\r\n\r\n            self.update = function() {\r\n                for (let i = 0; i < self.points.length; i++)\r\n                    self.points[i].update(self.mouse, self.options);\r\n            }\r\n\r\n            function Point(x, y) {\r\n                this.y = y;\r\n                this.x = x;\r\n                this.base = {\r\n                    x: x,\r\n                    y: y\r\n                };\r\n\r\n                this.update = function(mouse, options) {\r\n                    let dx = this.x - mouse.x,\r\n                        dy = this.y - mouse.y,\r\n                        alpha = Math.atan2(dx, dy),\r\n                        d = options.radius / Math.sqrt(dx * dx + dy * dy);\r\n\r\n                    alpha = (alpha > 0 ? alpha : 2 * Math.PI + alpha);\r\n                    this.y += Math.cos(alpha) * d + (this.base.y - this.y) * options.speed;\r\n                    this.x += Math.sin(alpha) * d + (this.base.x - this.x) * options.speed;\r\n                }\r\n            }\r\n        }\r\n\r\n        // 调用cavas内置的api\r\n        function drawCircle(p, r, color) {\r\n            ctx.fillStyle = color;\r\n            ctx.beginPath();\r\n            ctx.arc(p.x, p.y, r, 0, 2 * Math.PI, true);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        function drawLine(p1, p2) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(p1.x, p1.y);\r\n            ctx.lineTo(p2.x, p2.y);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n        }\r\n\r\n        function redraw() {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            for (let i = 0; i < 2; i++) {\r\n                const points = self.lines[i].points;\r\n\r\n                ctx.beginPath();\r\n                ctx.lineWidth = 2;\r\n                ctx.strokeStyle = self.lines[i].color;\r\n                ctx.moveTo(points[15].x, points[15].y);\r\n\r\n                for (let j = 15; j < points.length - 2; j++) {\r\n                    const point = points[j];\r\n\r\n                    const xc = (points[j + 1].x + point.x) / 2;\r\n                    const yc = (points[j + 1].y + point.y) / 2;\r\n\r\n\r\n                    ctx.quadraticCurveTo(point.x, point.y, xc, yc);\r\n                }\r\n                ctx.stroke();\r\n                ctx.closePath();\r\n\r\n\r\n                // Dots\r\n                ctx.lineWidth = 1.2;\r\n                ctx.strokeStyle = self.dotColors[i][2];\r\n                for (let j = 0; j < self.lines[i].dots.length; j++) {\r\n                    const dot = self.lines[i].dots[j],\r\n                        id = self.targets[i][j];\r\n                    // 时间线上的点\r\n                    const dot2 = [\r\n                        (self.lines[i].points[id].x + self.lines[i].points[id + 1].x) / 2,\r\n                        (self.lines[i].points[id].y + self.lines[i].points[id + 1].y) / 2,\r\n                    ];\r\n\r\n                    const p1 = {\r\n                        x: dot[0],\r\n                        y: dot[1] + 70 \r\n                    };\r\n                    const p2 = {\r\n                        x: dot2[0],\r\n                        y: dot2[1]\r\n                    };\r\n\r\n\r\n                    drawLine(p1, p2);\r\n                    console.log(p1)\r\n                    drawCircle(p1, 3, self.dotColors[i][0]);\r\n\r\n                    drawCircle(p2, 11, self.dotColors[i][1]);\r\n                    drawCircle(p2, 5.5, self.dotColors[i][0]);\r\n                }\r\n            }\r\n        }\r\n\r\n        function animate() {\r\n            rafid = requestAnimationFrame(animate);\r\n\r\n            self.lines[0].update();\r\n            self.lines[1].update();\r\n\r\n            redraw();\r\n        }\r\n\r\n        self.toggle = function(run) {\r\n            if (!self.isOK) return false;\r\n\r\n            if (run === undefined)\r\n                self.toggle(!paused);\r\n\r\n            else if (!!run && paused) {\r\n                paused = false;\r\n                animate();\r\n            } else if (!!!run) {\r\n                paused = true;\r\n                cancelAnimationFrame(rafid);\r\n            }\r\n            return true;\r\n        }\r\n\r\n\r\n        self.isOK = init();\r\n    }\r\n\r\nexport default {\r\n  mounted(){\r\n    new Timeline($('#cvs3').get(0)).toggle(true);\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n    article:first-of-type figure p{\r\n        font-size: 16px;\r\n        color:#438eb3;\r\n        letter-spacing: 2px;\r\n    }\r\n    article:last-of-type  figure p{\r\n        font-size: 16px;\r\n        letter-spacing: 2px;\r\n    }\r\n    article:last-of-type figcaption{\r\n    }   \r\n    .timeline {\r\n        height: 100%;\r\n        position: relative;\r\n    }\r\n    \r\n    .timeline canvas {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        left: 0;\r\n        top: 0;\r\n    }\r\n    \r\n    .timeline figcaption {\r\n      color:#fff;\r\n        font-weight: 400;\r\n        font-family: sans-serif;\r\n        font-size: 24px;\r\n        text-transform: uppercase;\r\n    }\r\n    \r\n    .timeline h2 {\r\n        font-weight: 400;\r\n        font-size: 30px;\r\n        padding-bottom: 100px;\r\n        color: #b2cde9;\r\n        font-family: sans-serif;\r\n        text-transform: uppercase;\r\n    }\r\n    \r\n    .timeline h6 {\r\n        color: #0090f5;\r\n        font-family: sans-serif;\r\n        font-size: 17px;\r\n        font-weight: 400;\r\n    }\r\n    \r\n    .timeline p {\r\n        font-weight: 400;\r\n        font-family: sans-serif;\r\n        padding: 3px 0 20px 0;\r\n        color: #949494;\r\n        text-align: justify;\r\n        width: 70%;\r\n    }\r\n    \r\n    .timeline figure {\r\n        width: 100%;\r\n    }\r\n    \r\n    .timeline article {\r\n        position: relative;\r\n        width: 38%;\r\n        overflow: hidden;\r\n        margin-bottom: 100px;\r\n    }\r\n    \r\n    .timeline article:first-of-type {\r\n        float: left;\r\n        text-align: right;\r\n    }\r\n    \r\n    .timeline article:first-of-type p,\r\n    .timeline article:first-of-type figure {\r\n        float: right;\r\n    }\r\n    \r\n    .timeline article:last-of-type {\r\n        float: right;\r\n    }\r\n    \r\n    .timeline article:last-of-type h2 {\r\n        color: #c6e0aa;\r\n    }\r\n    \r\n    .timeline article:last-of-type h6,\r\n    .timeline article:last-of-type a {\r\n        color: #c6e0aa;\r\n    }\r\n    \r\n    .timeline article:last-of-type a:hover {\r\n        color: #95d40d;\r\n    }\r\n</style>"]}]}