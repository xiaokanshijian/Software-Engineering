{"remainingRequest":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox3\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox3\\src\\main.vue","mtime":1713594891392},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1713594892054},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713594892227},{"path":"E:\\Grade3\\大三下\\软件工程\\大作业\\海洋可视化系统\\front-end-template-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1713594897967}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXV0b1Jlc2l6ZSBmcm9tICcuLi8uLi8uLi9taXhpbi9hdXRvUmVzaXplJw0KDQppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCcNCg0KaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ0R2Qm9yZGVyQm94MycsDQogIG1peGluczogW2F1dG9SZXNpemVdLA0KICBwcm9wczogew0KICAgIGNvbG9yOiB7DQogICAgICB0eXBlOiBBcnJheSwNCiAgICAgIGRlZmF1bHQ6ICgpID0+IChbXSkNCiAgICB9LA0KICAgIGJhY2tncm91bmRDb2xvcjogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZGVmYXVsdDogJ3RyYW5zcGFyZW50Jw0KICAgIH0NCiAgfSwNCiAgZGF0YSAoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHJlZjogJ2JvcmRlci1ib3gtMycsDQoNCiAgICAgIGRlZmF1bHRDb2xvcjogWycjMjg2MmI3JywgJyMyODYyYjcnXSwNCg0KICAgICAgbWVyZ2VkQ29sb3I6IFtdDQogICAgfQ0KICB9LA0KICB3YXRjaDogew0KICAgIGNvbG9yICgpIHsNCiAgICAgIGNvbnN0IHsgbWVyZ2VDb2xvciB9ID0gdGhpcw0KDQogICAgICBtZXJnZUNvbG9yKCkNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBtZXJnZUNvbG9yICgpIHsNCiAgICAgIGNvbnN0IHsgY29sb3IsIGRlZmF1bHRDb2xvciB9ID0gdGhpcw0KDQogICAgICB0aGlzLm1lcmdlZENvbG9yID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29sb3IsIHRydWUpLCBjb2xvciB8fCBbXSkNCiAgICB9DQogIH0sDQogIG1vdW50ZWQgKCkgew0KICAgIGNvbnN0IHsgbWVyZ2VDb2xvciB9ID0gdGhpcw0KDQogICAgbWVyZ2VDb2xvcigpDQogIH0NCn0NCg=="},{"version":3,"sources":["main.vue"],"names":[],"mappings":";AAgCA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/borderBox3/src","sourcesContent":["<template>\r\n  <div class=\"dv-border-box-3\" :ref=\"ref\">\r\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\r\n      <polygon :fill=\"backgroundColor\" :points=\"`\r\n        23, 23 ${width - 24}, 23 ${width - 24}, ${height - 24} 23, ${height - 24}\r\n      `\" />\r\n\r\n      <polyline class=\"dv-bb3-line1\"\r\n        :stroke=\"mergedColor[0]\"\r\n        :points=\"`4, 4 ${width - 22} ,4 ${width - 22}, ${height - 22} 4, ${height - 22} 4, 4`\"\r\n      />\r\n      <polyline class=\"dv-bb3-line2\"\r\n        :stroke=\"mergedColor[1]\"\r\n        :points=\"`10, 10 ${width - 16}, 10 ${width - 16}, ${height - 16} 10, ${height - 16} 10, 10`\"\r\n      />\r\n      <polyline class=\"dv-bb3-line2\"\r\n        :stroke=\"mergedColor[1]\"\r\n        :points=\"`16, 16 ${width - 10}, 16 ${width - 10}, ${height - 10} 16, ${height - 10} 16, 16`\"\r\n      />\r\n      <polyline class=\"dv-bb3-line2\"\r\n        :stroke=\"mergedColor[1]\"\r\n        :points=\"`22, 22 ${width - 4}, 22 ${width - 4}, ${height - 4} 22, ${height - 4} 22, 22`\"\r\n      />\r\n    </svg>\r\n\r\n    <div class=\"border-box-content\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvBorderBox3',\r\n  mixins: [autoResize],\r\n  props: {\r\n    color: {\r\n      type: Array,\r\n      default: () => ([])\r\n    },\r\n    backgroundColor: {\r\n      type: String,\r\n      default: 'transparent'\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      ref: 'border-box-3',\r\n\r\n      defaultColor: ['#2862b7', '#2862b7'],\r\n\r\n      mergedColor: []\r\n    }\r\n  },\r\n  watch: {\r\n    color () {\r\n      const { mergeColor } = this\r\n\r\n      mergeColor()\r\n    }\r\n  },\r\n  methods: {\r\n    mergeColor () {\r\n      const { color, defaultColor } = this\r\n\r\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\r\n    }\r\n  },\r\n  mounted () {\r\n    const { mergeColor } = this\r\n\r\n    mergeColor()\r\n  }\r\n}\r\n</script>"]}]}